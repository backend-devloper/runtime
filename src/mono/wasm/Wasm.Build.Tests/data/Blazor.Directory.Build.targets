<Project>
  <Target Name="PrintRuntimePackPath" BeforeTargets="Build">
    <Message Text="** MicrosoftNetCoreAppRuntimePackDir : '@(ResolvedRuntimePack -> '%(PackageDirectory)')'" Importance="High" Condition="@(ResolvedRuntimePack->Count()) > 0" />
  </Target>

  <!-- SDK tries to download runtime packs when RuntimeIdentifier is set, remove them from PackageDownload item. -->
  <Target Name="RemoveRuntimePackFromDownloadItem"
          AfterTargets="ProcessFrameworkReferences"
          Condition="'$(WBTOverrideRuntimePack)' == 'true' and '$(WasmNativeWorkload)' == 'true'">
    <ItemGroup>
      <PackageDownload Remove="@(PackageDownload)"
                       Condition="'$(UsePackageDownload)' == 'true' and $([System.String]::Copy('%(Identity)').StartsWith('Microsoft.NETCore.App.Runtime'))" />
      <PackageReference Remove="@(PackageReference)"
                        Condition="'$(UsePackageDownload)' != 'true' and $([System.String]::Copy('%(Identity)').StartsWith('Microsoft.NETCore.App.Runtime'))" />
    </ItemGroup>
  </Target>

  <!-- Use local targeting pack for NetCoreAppCurrent. -->
  <Target Name="UpdateTargetingAndRuntimePack"
          AfterTargets="ResolveFrameworkReferences"
          Condition="'$(WBTOverrideRuntimePack)' == 'true' and '$(WasmNativeWorkload)' == 'true'">
    <ItemGroup>
      <ResolvedRuntimePack
                            Update="Microsoft.NETCore.App.Runtime.Mono.browser-wasm"
                            FrameworkName="Microsoft.NETCore.App"
                            NuGetPackageId="Microsoft.NETCore.App.Runtime.Mono.browser-wasm"
                            NuGetPackageVersion="$(_RuntimePackInWorkloadVersionCurrent)"
                            PackageDirectory="$(NetCoreTargetingPackRoot)\Microsoft.NETCore.App.Runtime.Mono.browser-wasm\$(_RuntimePackInWorkloadVersionCurrent)"
                            RuntimeIdentifier="browser-wasm" />

       <ResolvedFrameworkReference Update="Microsoft.NETCore.App"
                                   RuntimePackName="Microsoft.NETCore.App.Runtime.Mono.browser-wasm"
                                   RuntimePackVersion="$(_RuntimePackInWorkloadVersionCurrent)"
                                   RuntimePackPath="$(NetCoreTargetingPackRoot)\Microsoft.NETCore.App.Runtime.Mono.browser-wasm\$(_RuntimePackInWorkloadVersionCurrent)"
                                   RuntimeIdentifier="browser-wasm" />
    </ItemGroup>
  </Target>

  <!-- Update the local targeting pack's version as it's written into the runtimeconfig.json file to select the right framework. -->
  <Target Name="UpdateRuntimeFrameworkVersion"
          AfterTargets="ResolveTargetingPackAssets"
          Condition="'$(WBTOverrideRuntimePack)' == 'true' and '$(WasmNativeWorkload)' == 'true'">
    <ItemGroup>
      <RuntimeFramework Version="$(_RuntimePackInWorkloadVersionCurrent)"
                        Condition="'%(RuntimeFramework.FrameworkName)' == 'Microsoft.NETCore.App'" />
    </ItemGroup>
  </Target>

  <!-- Filter out conflicting implicit assembly references. -->
  <Target Name="FilterImplicitAssemblyReferences"
          Condition="'$(WBTOverrideRuntimePack)' == 'true' and '$(WasmNativeWorkload)' == 'true'"
          DependsOnTargets="ResolveProjectReferences"
          AfterTargets="ResolveTargetingPackAssets">
    <ItemGroup>
      <_targetingPackReferenceExclusion Include="$(TargetName)" />
      <_targetingPackReferenceExclusion Include="@(_ResolvedProjectReferencePaths->'%(Filename)')" />
      <_targetingPackReferenceExclusion Include="@(DefaultReferenceExclusion)" />
    </ItemGroup>

    <ItemGroup>
      <_targetingPackReferenceWithExclusion Include="@(Reference)">
        <Exclusion>%(_targetingPackReferenceExclusion.Identity)</Exclusion>
      </_targetingPackReferenceWithExclusion>
      <Reference Remove="@(_targetingPackReferenceWithExclusion)"
                 Condition="'%(_targetingPackReferenceWithExclusion.ExternallyResolved)' == 'true' and '%(_targetingPackReferenceWithExclusion.Filename)' == '%(_targetingPackReferenceWithExclusion.Exclusion)'" />
    </ItemGroup>
  </Target>
</Project>
