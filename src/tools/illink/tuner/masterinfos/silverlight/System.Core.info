<?xml version="1.0"?>
<assemblies>
  <assembly name="System.Core" version="2.0.5.0">
    <attributes>
      <attribute name="System.Resources.NeutralResourcesLanguageAttribute" />
      <attribute name="System.Reflection.AssemblyKeyFileAttribute" />
      <attribute name="System.Resources.SatelliteContractVersionAttribute" />
      <attribute name="System.Reflection.AssemblyDelaySignAttribute" />
      <attribute name="System.Diagnostics.DebuggableAttribute" />
      <attribute name="System.Runtime.CompilerServices.CompilationRelaxationsAttribute" />
      <attribute name="System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
        <properties>
          <property name="WrapNonExceptionThrows" value="True" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
      <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
      <attribute name="System.CLSCompliantAttribute" />
      <attribute name="System.Reflection.AssemblyTitleAttribute" />
      <attribute name="System.Reflection.AssemblyDescriptionAttribute" />
      <attribute name="System.Reflection.AssemblyDefaultAliasAttribute" />
      <attribute name="System.Reflection.AssemblyCompanyAttribute" />
      <attribute name="System.Reflection.AssemblyProductAttribute" />
      <attribute name="System.Reflection.AssemblyCopyrightAttribute" />
      <attribute name="System.Reflection.AssemblyFileVersionAttribute" />
      <attribute name="System.Reflection.AssemblyInformationalVersionAttribute" />
    </attributes>
    <namespaces>
      <namespace name="System">
        <classes>
          <class name="Action" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="callback" position="0" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="Action`2" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(T1, T2, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="arg1" position="0" attrib="0" type="T1" />
                  <parameter name="arg2" position="1" attrib="0" type="T2" />
                  <parameter name="callback" position="2" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(T1, T2)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="arg1" position="0" attrib="0" type="T1" />
                  <parameter name="arg2" position="1" attrib="0" type="T2" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Action`3" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(T1, T2, T3, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="arg1" position="0" attrib="0" type="T1" />
                  <parameter name="arg2" position="1" attrib="0" type="T2" />
                  <parameter name="arg3" position="2" attrib="0" type="T3" />
                  <parameter name="callback" position="3" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="4" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(T1, T2, T3)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="arg1" position="0" attrib="0" type="T1" />
                  <parameter name="arg2" position="1" attrib="0" type="T2" />
                  <parameter name="arg3" position="2" attrib="0" type="T3" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Action`4" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(T1, T2, T3, T4, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="arg1" position="0" attrib="0" type="T1" />
                  <parameter name="arg2" position="1" attrib="0" type="T2" />
                  <parameter name="arg3" position="2" attrib="0" type="T3" />
                  <parameter name="arg4" position="3" attrib="0" type="T4" />
                  <parameter name="callback" position="4" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="5" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(T1, T2, T3, T4)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="arg1" position="0" attrib="0" type="T1" />
                  <parameter name="arg2" position="1" attrib="0" type="T2" />
                  <parameter name="arg3" position="2" attrib="0" type="T3" />
                  <parameter name="arg4" position="3" attrib="0" type="T4" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Func`1" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="callback" position="0" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="TResult">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke()" attrib="454" virtual="true" returntype="TResult">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="Func`2" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(T, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="arg" position="0" attrib="0" type="T" />
                  <parameter name="callback" position="1" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="TResult">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(T)" attrib="454" virtual="true" returntype="TResult">
                <parameters>
                  <parameter name="arg" position="0" attrib="0" type="T" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Func`3" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(T1, T2, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="arg1" position="0" attrib="0" type="T1" />
                  <parameter name="arg2" position="1" attrib="0" type="T2" />
                  <parameter name="callback" position="2" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="TResult">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(T1, T2)" attrib="454" virtual="true" returntype="TResult">
                <parameters>
                  <parameter name="arg1" position="0" attrib="0" type="T1" />
                  <parameter name="arg2" position="1" attrib="0" type="T2" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Func`4" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(T1, T2, T3, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="arg1" position="0" attrib="0" type="T1" />
                  <parameter name="arg2" position="1" attrib="0" type="T2" />
                  <parameter name="arg3" position="2" attrib="0" type="T3" />
                  <parameter name="callback" position="3" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="4" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="TResult">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(T1, T2, T3)" attrib="454" virtual="true" returntype="TResult">
                <parameters>
                  <parameter name="arg1" position="0" attrib="0" type="T1" />
                  <parameter name="arg2" position="1" attrib="0" type="T2" />
                  <parameter name="arg3" position="2" attrib="0" type="T3" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Func`5" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(T1, T2, T3, T4, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="arg1" position="0" attrib="0" type="T1" />
                  <parameter name="arg2" position="1" attrib="0" type="T2" />
                  <parameter name="arg3" position="2" attrib="0" type="T3" />
                  <parameter name="arg4" position="3" attrib="0" type="T4" />
                  <parameter name="callback" position="4" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="5" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="TResult">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(T1, T2, T3, T4)" attrib="454" virtual="true" returntype="TResult">
                <parameters>
                  <parameter name="arg1" position="0" attrib="0" type="T1" />
                  <parameter name="arg2" position="1" attrib="0" type="T2" />
                  <parameter name="arg3" position="2" attrib="0" type="T3" />
                  <parameter name="arg4" position="3" attrib="0" type="T4" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="InvalidTimeZoneException" type="class" base="System.Exception" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
          </class>
          <class name="TimeZoneInfo" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IEquatable`1[System.TimeZoneInfo]" />
            </interfaces>
            <properties>
              <property name="BaseUtcOffset" attrib="0" ptype="System.TimeSpan" params="">
                <methods>
                  <method name="get_BaseUtcOffset()" attrib="2182" returntype="System.TimeSpan">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DaylightName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_DaylightName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DisplayName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_DisplayName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Local" attrib="0" ptype="System.TimeZoneInfo" params="">
                <methods>
                  <method name="get_Local()" attrib="2198" static="true" returntype="System.TimeZoneInfo">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="StandardName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_StandardName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SupportsDaylightSavingTime" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_SupportsDaylightSavingTime()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Utc" attrib="0" ptype="System.TimeZoneInfo" params="">
                <methods>
                  <method name="get_Utc()" attrib="2198" static="true" returntype="System.TimeZoneInfo">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="ConvertTime(System.DateTimeOffset, System.TimeZoneInfo)" attrib="150" static="true" returntype="System.DateTimeOffset">
                <parameters>
                  <parameter name="dateTimeOffset" position="0" attrib="0" type="System.DateTimeOffset" />
                  <parameter name="destinationTimeZone" position="1" attrib="0" type="System.TimeZoneInfo" />
                </parameters>
              </method>
              <method name="ConvertTime(System.DateTime, System.TimeZoneInfo)" attrib="150" static="true" returntype="System.DateTime">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="dateTime" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="destinationTimeZone" position="1" attrib="0" type="System.TimeZoneInfo" />
                </parameters>
              </method>
              <method name="Equals(System.TimeZoneInfo)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="System.TimeZoneInfo" />
                </parameters>
              </method>
              <method name="GetAmbiguousTimeOffsets(System.DateTimeOffset)" attrib="134" returntype="System.TimeSpan[]">
                <parameters>
                  <parameter name="dateTimeOffset" position="0" attrib="0" type="System.DateTimeOffset" />
                </parameters>
              </method>
              <method name="GetAmbiguousTimeOffsets(System.DateTime)" attrib="134" returntype="System.TimeSpan[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="dateTime" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetUtcOffset(System.DateTimeOffset)" attrib="134" returntype="System.TimeSpan">
                <parameters>
                  <parameter name="dateTimeOffset" position="0" attrib="0" type="System.DateTimeOffset" />
                </parameters>
              </method>
              <method name="GetUtcOffset(System.DateTime)" attrib="134" returntype="System.TimeSpan">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="dateTime" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="IsAmbiguousTime(System.DateTimeOffset)" attrib="134" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="dateTimeOffset" position="0" attrib="0" type="System.DateTimeOffset" />
                </parameters>
              </method>
              <method name="IsAmbiguousTime(System.DateTime)" attrib="134" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="dateTime" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="IsDaylightSavingTime(System.DateTimeOffset)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="dateTimeOffset" position="0" attrib="0" type="System.DateTimeOffset" />
                </parameters>
              </method>
              <method name="IsDaylightSavingTime(System.DateTime)" attrib="134" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="dateTime" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="IsInvalidTime(System.DateTime)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="dateTime" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Linq">
        <classes>
          <class name="Enumerable" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            </attributes>
            <methods>
              <method name="Aggregate(System.Collections.Generic.IEnumerable`1[TSource], System.Func`3[TSource,TSource,TSource])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="func" position="1" attrib="0" type="System.Func`3[TSource,TSource,TSource]" />
                </parameters>
              </method>
              <method name="Aggregate(System.Collections.Generic.IEnumerable`1[TSource], TAccumulate, System.Func`3[TAccumulate,TSource,TAccumulate])" attrib="150" static="true" returntype="TAccumulate">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="seed" position="1" attrib="0" type="TAccumulate" />
                  <parameter name="func" position="2" attrib="0" type="System.Func`3[TAccumulate,TSource,TAccumulate]" />
                </parameters>
              </method>
              <method name="Aggregate(System.Collections.Generic.IEnumerable`1[TSource], TAccumulate, System.Func`3[TAccumulate,TSource,TAccumulate], System.Func`2[TAccumulate,TResult])" attrib="150" static="true" returntype="TResult">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="seed" position="1" attrib="0" type="TAccumulate" />
                  <parameter name="func" position="2" attrib="0" type="System.Func`3[TAccumulate,TSource,TAccumulate]" />
                  <parameter name="resultSelector" position="3" attrib="0" type="System.Func`2[TAccumulate,TResult]" />
                </parameters>
              </method>
              <method name="All(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Boolean])" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Func`2[TSource,System.Boolean]" />
                </parameters>
              </method>
              <method name="Any(System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="Any(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Boolean])" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Func`2[TSource,System.Boolean]" />
                </parameters>
              </method>
              <method name="AsEnumerable(System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="Average(System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Int64]])" attrib="150" static="true" returntype="System.Nullable`1[System.Double]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Int64]]" />
                </parameters>
              </method>
              <method name="Average(System.Collections.Generic.IEnumerable`1[System.Single])" attrib="150" static="true" returntype="System.Single">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Single]" />
                </parameters>
              </method>
              <method name="Average(System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Single]])" attrib="150" static="true" returntype="System.Nullable`1[System.Single]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Single]]" />
                </parameters>
              </method>
              <method name="Average(System.Collections.Generic.IEnumerable`1[System.Int32])" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Int32]" />
                </parameters>
              </method>
              <method name="Average(System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Int32]])" attrib="150" static="true" returntype="System.Nullable`1[System.Double]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Int32]]" />
                </parameters>
              </method>
              <method name="Average(System.Collections.Generic.IEnumerable`1[System.Int64])" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Int64]" />
                </parameters>
              </method>
              <method name="Average(System.Collections.Generic.IEnumerable`1[System.Double])" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Double]" />
                </parameters>
              </method>
              <method name="Average(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Double])" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Double]" />
                </parameters>
              </method>
              <method name="Average(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Nullable`1[System.Single]])" attrib="150" static="true" returntype="System.Nullable`1[System.Single]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Nullable`1[System.Single]]" />
                </parameters>
              </method>
              <method name="Average(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Single])" attrib="150" static="true" returntype="System.Single">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Single]" />
                </parameters>
              </method>
              <method name="Average(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Nullable`1[System.Decimal]])" attrib="150" static="true" returntype="System.Nullable`1[System.Decimal]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Nullable`1[System.Decimal]]" />
                </parameters>
              </method>
              <method name="Average(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Decimal])" attrib="150" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Decimal]" />
                </parameters>
              </method>
              <method name="Average(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Nullable`1[System.Double]])" attrib="150" static="true" returntype="System.Nullable`1[System.Double]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Nullable`1[System.Double]]" />
                </parameters>
              </method>
              <method name="Average(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Nullable`1[System.Int64]])" attrib="150" static="true" returntype="System.Nullable`1[System.Double]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Nullable`1[System.Int64]]" />
                </parameters>
              </method>
              <method name="Average(System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Decimal]])" attrib="150" static="true" returntype="System.Nullable`1[System.Decimal]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Decimal]]" />
                </parameters>
              </method>
              <method name="Average(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Int32])" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Int32]" />
                </parameters>
              </method>
              <method name="Average(System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Double]])" attrib="150" static="true" returntype="System.Nullable`1[System.Double]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Double]]" />
                </parameters>
              </method>
              <method name="Average(System.Collections.Generic.IEnumerable`1[System.Decimal])" attrib="150" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Decimal]" />
                </parameters>
              </method>
              <method name="Average(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Nullable`1[System.Int32]])" attrib="150" static="true" returntype="System.Nullable`1[System.Double]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Nullable`1[System.Int32]]" />
                </parameters>
              </method>
              <method name="Average(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Int64])" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Int64]" />
                </parameters>
              </method>
              <method name="Cast(System.Collections.IEnumerable)" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.IEnumerable" />
                </parameters>
              </method>
              <method name="Concat(System.Collections.Generic.IEnumerable`1[TSource], System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="first" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="second" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="Contains(System.Collections.Generic.IEnumerable`1[TSource], TSource)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="value" position="1" attrib="0" type="TSource" />
                </parameters>
              </method>
              <method name="Contains(System.Collections.Generic.IEnumerable`1[TSource], TSource, System.Collections.Generic.IEqualityComparer`1[TSource])" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="value" position="1" attrib="0" type="TSource" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TSource]" />
                </parameters>
              </method>
              <method name="Count(System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="Count(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Boolean])" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Func`2[TSource,System.Boolean]" />
                </parameters>
              </method>
              <method name="DefaultIfEmpty(System.Collections.Generic.IEnumerable`1[TSource], TSource)" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="defaultValue" position="1" attrib="0" type="TSource" />
                </parameters>
              </method>
              <method name="DefaultIfEmpty(System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="Distinct(System.Collections.Generic.IEnumerable`1[TSource], System.Collections.Generic.IEqualityComparer`1[TSource])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="comparer" position="1" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TSource]" />
                </parameters>
              </method>
              <method name="Distinct(System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="ElementAt(System.Collections.Generic.IEnumerable`1[TSource], System.Int32)" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ElementAtOrDefault(System.Collections.Generic.IEnumerable`1[TSource], System.Int32)" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Empty()" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TResult]">
                <parameters />
              </method>
              <method name="Except(System.Collections.Generic.IEnumerable`1[TSource], System.Collections.Generic.IEnumerable`1[TSource], System.Collections.Generic.IEqualityComparer`1[TSource])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="first" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="second" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TSource]" />
                </parameters>
              </method>
              <method name="Except(System.Collections.Generic.IEnumerable`1[TSource], System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="first" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="second" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="First(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Boolean])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Func`2[TSource,System.Boolean]" />
                </parameters>
              </method>
              <method name="First(System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="FirstOrDefault(System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="FirstOrDefault(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Boolean])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Func`2[TSource,System.Boolean]" />
                </parameters>
              </method>
              <method name="GroupBy(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TKey], System.Func`3[TKey,System.Collections.Generic.IEnumerable`1[TSource],TResult], System.Collections.Generic.IEqualityComparer`1[TKey])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                  <parameter name="resultSelector" position="2" attrib="0" type="System.Func`3[TKey,System.Collections.Generic.IEnumerable`1[TSource],TResult]" />
                  <parameter name="comparer" position="3" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="GroupBy(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TKey], System.Func`2[TSource,TElement], System.Func`3[TKey,System.Collections.Generic.IEnumerable`1[TElement],TResult])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                  <parameter name="elementSelector" position="2" attrib="0" type="System.Func`2[TSource,TElement]" />
                  <parameter name="resultSelector" position="3" attrib="0" type="System.Func`3[TKey,System.Collections.Generic.IEnumerable`1[TElement],TResult]" />
                </parameters>
              </method>
              <method name="GroupBy(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TKey], System.Func`2[TSource,TElement])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[System.Linq.IGrouping`2[TKey,TElement]]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                  <parameter name="elementSelector" position="2" attrib="0" type="System.Func`2[TSource,TElement]" />
                </parameters>
              </method>
              <method name="GroupBy(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TKey])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[System.Linq.IGrouping`2[TKey,TSource]]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                </parameters>
              </method>
              <method name="GroupBy(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TKey], System.Collections.Generic.IEqualityComparer`1[TKey])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[System.Linq.IGrouping`2[TKey,TSource]]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="GroupBy(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TKey], System.Func`2[TSource,TElement], System.Collections.Generic.IEqualityComparer`1[TKey])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[System.Linq.IGrouping`2[TKey,TElement]]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                  <parameter name="elementSelector" position="2" attrib="0" type="System.Func`2[TSource,TElement]" />
                  <parameter name="comparer" position="3" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="GroupBy(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TKey], System.Func`3[TKey,System.Collections.Generic.IEnumerable`1[TSource],TResult])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                  <parameter name="resultSelector" position="2" attrib="0" type="System.Func`3[TKey,System.Collections.Generic.IEnumerable`1[TSource],TResult]" />
                </parameters>
              </method>
              <method name="GroupBy(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TKey], System.Func`2[TSource,TElement], System.Func`3[TKey,System.Collections.Generic.IEnumerable`1[TElement],TResult], System.Collections.Generic.IEqualityComparer`1[TKey])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                  <parameter name="elementSelector" position="2" attrib="0" type="System.Func`2[TSource,TElement]" />
                  <parameter name="resultSelector" position="3" attrib="0" type="System.Func`3[TKey,System.Collections.Generic.IEnumerable`1[TElement],TResult]" />
                  <parameter name="comparer" position="4" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="GroupJoin(System.Collections.Generic.IEnumerable`1[TOuter], System.Collections.Generic.IEnumerable`1[TInner], System.Func`2[TOuter,TKey], System.Func`2[TInner,TKey], System.Func`3[TOuter,System.Collections.Generic.IEnumerable`1[TInner],TResult])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="outer" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TOuter]" />
                  <parameter name="inner" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TInner]" />
                  <parameter name="outerKeySelector" position="2" attrib="0" type="System.Func`2[TOuter,TKey]" />
                  <parameter name="innerKeySelector" position="3" attrib="0" type="System.Func`2[TInner,TKey]" />
                  <parameter name="resultSelector" position="4" attrib="0" type="System.Func`3[TOuter,System.Collections.Generic.IEnumerable`1[TInner],TResult]" />
                </parameters>
              </method>
              <method name="GroupJoin(System.Collections.Generic.IEnumerable`1[TOuter], System.Collections.Generic.IEnumerable`1[TInner], System.Func`2[TOuter,TKey], System.Func`2[TInner,TKey], System.Func`3[TOuter,System.Collections.Generic.IEnumerable`1[TInner],TResult], System.Collections.Generic.IEqualityComparer`1[TKey])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="outer" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TOuter]" />
                  <parameter name="inner" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TInner]" />
                  <parameter name="outerKeySelector" position="2" attrib="0" type="System.Func`2[TOuter,TKey]" />
                  <parameter name="innerKeySelector" position="3" attrib="0" type="System.Func`2[TInner,TKey]" />
                  <parameter name="resultSelector" position="4" attrib="0" type="System.Func`3[TOuter,System.Collections.Generic.IEnumerable`1[TInner],TResult]" />
                  <parameter name="comparer" position="5" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="Intersect(System.Collections.Generic.IEnumerable`1[TSource], System.Collections.Generic.IEnumerable`1[TSource], System.Collections.Generic.IEqualityComparer`1[TSource])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="first" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="second" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TSource]" />
                </parameters>
              </method>
              <method name="Intersect(System.Collections.Generic.IEnumerable`1[TSource], System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="first" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="second" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="Join(System.Collections.Generic.IEnumerable`1[TOuter], System.Collections.Generic.IEnumerable`1[TInner], System.Func`2[TOuter,TKey], System.Func`2[TInner,TKey], System.Func`3[TOuter,TInner,TResult])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="outer" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TOuter]" />
                  <parameter name="inner" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TInner]" />
                  <parameter name="outerKeySelector" position="2" attrib="0" type="System.Func`2[TOuter,TKey]" />
                  <parameter name="innerKeySelector" position="3" attrib="0" type="System.Func`2[TInner,TKey]" />
                  <parameter name="resultSelector" position="4" attrib="0" type="System.Func`3[TOuter,TInner,TResult]" />
                </parameters>
              </method>
              <method name="Join(System.Collections.Generic.IEnumerable`1[TOuter], System.Collections.Generic.IEnumerable`1[TInner], System.Func`2[TOuter,TKey], System.Func`2[TInner,TKey], System.Func`3[TOuter,TInner,TResult], System.Collections.Generic.IEqualityComparer`1[TKey])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="outer" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TOuter]" />
                  <parameter name="inner" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TInner]" />
                  <parameter name="outerKeySelector" position="2" attrib="0" type="System.Func`2[TOuter,TKey]" />
                  <parameter name="innerKeySelector" position="3" attrib="0" type="System.Func`2[TInner,TKey]" />
                  <parameter name="resultSelector" position="4" attrib="0" type="System.Func`3[TOuter,TInner,TResult]" />
                  <parameter name="comparer" position="5" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="Last(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Boolean])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Func`2[TSource,System.Boolean]" />
                </parameters>
              </method>
              <method name="Last(System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="LastOrDefault(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Boolean])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Func`2[TSource,System.Boolean]" />
                </parameters>
              </method>
              <method name="LastOrDefault(System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="LongCount(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Boolean])" attrib="150" static="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Func`2[TSource,System.Boolean]" />
                </parameters>
              </method>
              <method name="LongCount(System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="Max(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Double])" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Double]" />
                </parameters>
              </method>
              <method name="Max(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Nullable`1[System.Double]])" attrib="150" static="true" returntype="System.Nullable`1[System.Double]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Nullable`1[System.Double]]" />
                </parameters>
              </method>
              <method name="Max(System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Int64]])" attrib="150" static="true" returntype="System.Nullable`1[System.Int64]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Int64]]" />
                </parameters>
              </method>
              <method name="Max(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Nullable`1[System.Single]])" attrib="150" static="true" returntype="System.Nullable`1[System.Single]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Nullable`1[System.Single]]" />
                </parameters>
              </method>
              <method name="Max(System.Collections.Generic.IEnumerable`1[System.Int64])" attrib="150" static="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Int64]" />
                </parameters>
              </method>
              <method name="Max(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Decimal])" attrib="150" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Decimal]" />
                </parameters>
              </method>
              <method name="Max(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Nullable`1[System.Decimal]])" attrib="150" static="true" returntype="System.Nullable`1[System.Decimal]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Nullable`1[System.Decimal]]" />
                </parameters>
              </method>
              <method name="Max(System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Int32]])" attrib="150" static="true" returntype="System.Nullable`1[System.Int32]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Int32]]" />
                </parameters>
              </method>
              <method name="Max(System.Collections.Generic.IEnumerable`1[System.Int32])" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Int32]" />
                </parameters>
              </method>
              <method name="Max(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Single])" attrib="150" static="true" returntype="System.Single">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Single]" />
                </parameters>
              </method>
              <method name="Max(System.Collections.Generic.IEnumerable`1[System.Single])" attrib="150" static="true" returntype="System.Single">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Single]" />
                </parameters>
              </method>
              <method name="Max(System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Double]])" attrib="150" static="true" returntype="System.Nullable`1[System.Double]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Double]]" />
                </parameters>
              </method>
              <method name="Max(System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Single]])" attrib="150" static="true" returntype="System.Nullable`1[System.Single]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Single]]" />
                </parameters>
              </method>
              <method name="Max(System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Decimal]])" attrib="150" static="true" returntype="System.Nullable`1[System.Decimal]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Decimal]]" />
                </parameters>
              </method>
              <method name="Max(System.Collections.Generic.IEnumerable`1[System.Decimal])" attrib="150" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Decimal]" />
                </parameters>
              </method>
              <method name="Max(System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="Max(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Nullable`1[System.Int64]])" attrib="150" static="true" returntype="System.Nullable`1[System.Int64]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Nullable`1[System.Int64]]" />
                </parameters>
              </method>
              <method name="Max(System.Collections.Generic.IEnumerable`1[System.Double])" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Double]" />
                </parameters>
              </method>
              <method name="Max(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Int64])" attrib="150" static="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Int64]" />
                </parameters>
              </method>
              <method name="Max(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Int32])" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Int32]" />
                </parameters>
              </method>
              <method name="Max(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Nullable`1[System.Int32]])" attrib="150" static="true" returntype="System.Nullable`1[System.Int32]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Nullable`1[System.Int32]]" />
                </parameters>
              </method>
              <method name="Max(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TResult])" attrib="150" static="true" returntype="TResult">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,TResult]" />
                </parameters>
              </method>
              <method name="Min(System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Double]])" attrib="150" static="true" returntype="System.Nullable`1[System.Double]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Double]]" />
                </parameters>
              </method>
              <method name="Min(System.Collections.Generic.IEnumerable`1[System.Double])" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Double]" />
                </parameters>
              </method>
              <method name="Min(System.Collections.Generic.IEnumerable`1[System.Decimal])" attrib="150" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Decimal]" />
                </parameters>
              </method>
              <method name="Min(System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="Min(System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Decimal]])" attrib="150" static="true" returntype="System.Nullable`1[System.Decimal]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Decimal]]" />
                </parameters>
              </method>
              <method name="Min(System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Single]])" attrib="150" static="true" returntype="System.Nullable`1[System.Single]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Single]]" />
                </parameters>
              </method>
              <method name="Min(System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Int32]])" attrib="150" static="true" returntype="System.Nullable`1[System.Int32]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Int32]]" />
                </parameters>
              </method>
              <method name="Min(System.Collections.Generic.IEnumerable`1[System.Int32])" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Int32]" />
                </parameters>
              </method>
              <method name="Min(System.Collections.Generic.IEnumerable`1[System.Int64])" attrib="150" static="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Int64]" />
                </parameters>
              </method>
              <method name="Min(System.Collections.Generic.IEnumerable`1[System.Single])" attrib="150" static="true" returntype="System.Single">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Single]" />
                </parameters>
              </method>
              <method name="Min(System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Int64]])" attrib="150" static="true" returntype="System.Nullable`1[System.Int64]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Int64]]" />
                </parameters>
              </method>
              <method name="Min(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Nullable`1[System.Double]])" attrib="150" static="true" returntype="System.Nullable`1[System.Double]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Nullable`1[System.Double]]" />
                </parameters>
              </method>
              <method name="Min(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Double])" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Double]" />
                </parameters>
              </method>
              <method name="Min(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Decimal])" attrib="150" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Decimal]" />
                </parameters>
              </method>
              <method name="Min(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TResult])" attrib="150" static="true" returntype="TResult">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,TResult]" />
                </parameters>
              </method>
              <method name="Min(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Nullable`1[System.Decimal]])" attrib="150" static="true" returntype="System.Nullable`1[System.Decimal]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Nullable`1[System.Decimal]]" />
                </parameters>
              </method>
              <method name="Min(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Nullable`1[System.Single]])" attrib="150" static="true" returntype="System.Nullable`1[System.Single]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Nullable`1[System.Single]]" />
                </parameters>
              </method>
              <method name="Min(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Nullable`1[System.Int32]])" attrib="150" static="true" returntype="System.Nullable`1[System.Int32]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Nullable`1[System.Int32]]" />
                </parameters>
              </method>
              <method name="Min(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Int32])" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Int32]" />
                </parameters>
              </method>
              <method name="Min(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Int64])" attrib="150" static="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Int64]" />
                </parameters>
              </method>
              <method name="Min(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Single])" attrib="150" static="true" returntype="System.Single">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Single]" />
                </parameters>
              </method>
              <method name="Min(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Nullable`1[System.Int64]])" attrib="150" static="true" returntype="System.Nullable`1[System.Int64]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Nullable`1[System.Int64]]" />
                </parameters>
              </method>
              <method name="OfType(System.Collections.IEnumerable)" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.IEnumerable" />
                </parameters>
              </method>
              <method name="OrderBy(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TKey])" attrib="150" static="true" returntype="System.Linq.IOrderedEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                </parameters>
              </method>
              <method name="OrderBy(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TKey], System.Collections.Generic.IComparer`1[TKey])" attrib="150" static="true" returntype="System.Linq.IOrderedEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="OrderByDescending(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TKey])" attrib="150" static="true" returntype="System.Linq.IOrderedEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                </parameters>
              </method>
              <method name="OrderByDescending(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TKey], System.Collections.Generic.IComparer`1[TKey])" attrib="150" static="true" returntype="System.Linq.IOrderedEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="Range(System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[System.Int32]">
                <parameters>
                  <parameter name="start" position="0" attrib="0" type="System.Int32" />
                  <parameter name="count" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Repeat(TResult, System.Int32)" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TResult]">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="TResult" />
                  <parameter name="count" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Reverse(System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="Select(System.Collections.Generic.IEnumerable`1[TSource], System.Func`3[TSource,System.Int32,TResult])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`3[TSource,System.Int32,TResult]" />
                </parameters>
              </method>
              <method name="Select(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TResult])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,TResult]" />
                </parameters>
              </method>
              <method name="SelectMany(System.Collections.Generic.IEnumerable`1[TSource], System.Func`3[TSource,System.Int32,System.Collections.Generic.IEnumerable`1[TCollection]], System.Func`3[TSource,TCollection,TResult])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="collectionSelector" position="1" attrib="0" type="System.Func`3[TSource,System.Int32,System.Collections.Generic.IEnumerable`1[TCollection]]" />
                  <parameter name="resultSelector" position="2" attrib="0" type="System.Func`3[TSource,TCollection,TResult]" />
                </parameters>
              </method>
              <method name="SelectMany(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Collections.Generic.IEnumerable`1[TCollection]], System.Func`3[TSource,TCollection,TResult])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="collectionSelector" position="1" attrib="0" type="System.Func`2[TSource,System.Collections.Generic.IEnumerable`1[TCollection]]" />
                  <parameter name="resultSelector" position="2" attrib="0" type="System.Func`3[TSource,TCollection,TResult]" />
                </parameters>
              </method>
              <method name="SelectMany(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Collections.Generic.IEnumerable`1[TResult]])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Collections.Generic.IEnumerable`1[TResult]]" />
                </parameters>
              </method>
              <method name="SelectMany(System.Collections.Generic.IEnumerable`1[TSource], System.Func`3[TSource,System.Int32,System.Collections.Generic.IEnumerable`1[TResult]])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`3[TSource,System.Int32,System.Collections.Generic.IEnumerable`1[TResult]]" />
                </parameters>
              </method>
              <method name="SequenceEqual(System.Collections.Generic.IEnumerable`1[TSource], System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="first" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="second" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="SequenceEqual(System.Collections.Generic.IEnumerable`1[TSource], System.Collections.Generic.IEnumerable`1[TSource], System.Collections.Generic.IEqualityComparer`1[TSource])" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="first" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="second" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TSource]" />
                </parameters>
              </method>
              <method name="Single(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Boolean])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Func`2[TSource,System.Boolean]" />
                </parameters>
              </method>
              <method name="Single(System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="SingleOrDefault(System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="SingleOrDefault(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Boolean])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Func`2[TSource,System.Boolean]" />
                </parameters>
              </method>
              <method name="Skip(System.Collections.Generic.IEnumerable`1[TSource], System.Int32)" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="count" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="SkipWhile(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Boolean])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Func`2[TSource,System.Boolean]" />
                </parameters>
              </method>
              <method name="SkipWhile(System.Collections.Generic.IEnumerable`1[TSource], System.Func`3[TSource,System.Int32,System.Boolean])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Func`3[TSource,System.Int32,System.Boolean]" />
                </parameters>
              </method>
              <method name="Sum(System.Collections.Generic.IEnumerable`1[System.Double])" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Double]" />
                </parameters>
              </method>
              <method name="Sum(System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Single]])" attrib="150" static="true" returntype="System.Nullable`1[System.Single]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Single]]" />
                </parameters>
              </method>
              <method name="Sum(System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Double]])" attrib="150" static="true" returntype="System.Nullable`1[System.Double]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Double]]" />
                </parameters>
              </method>
              <method name="Sum(System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Decimal]])" attrib="150" static="true" returntype="System.Nullable`1[System.Decimal]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Decimal]]" />
                </parameters>
              </method>
              <method name="Sum(System.Collections.Generic.IEnumerable`1[System.Decimal])" attrib="150" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Decimal]" />
                </parameters>
              </method>
              <method name="Sum(System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Int32]])" attrib="150" static="true" returntype="System.Nullable`1[System.Int32]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Int32]]" />
                </parameters>
              </method>
              <method name="Sum(System.Collections.Generic.IEnumerable`1[System.Int32])" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Int32]" />
                </parameters>
              </method>
              <method name="Sum(System.Collections.Generic.IEnumerable`1[System.Int64])" attrib="150" static="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Int64]" />
                </parameters>
              </method>
              <method name="Sum(System.Collections.Generic.IEnumerable`1[System.Single])" attrib="150" static="true" returntype="System.Single">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Single]" />
                </parameters>
              </method>
              <method name="Sum(System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Int64]])" attrib="150" static="true" returntype="System.Nullable`1[System.Int64]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Nullable`1[System.Int64]]" />
                </parameters>
              </method>
              <method name="Sum(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Double])" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Double]" />
                </parameters>
              </method>
              <method name="Sum(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Nullable`1[System.Single]])" attrib="150" static="true" returntype="System.Nullable`1[System.Single]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Nullable`1[System.Single]]" />
                </parameters>
              </method>
              <method name="Sum(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Nullable`1[System.Double]])" attrib="150" static="true" returntype="System.Nullable`1[System.Double]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Nullable`1[System.Double]]" />
                </parameters>
              </method>
              <method name="Sum(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Nullable`1[System.Decimal]])" attrib="150" static="true" returntype="System.Nullable`1[System.Decimal]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Nullable`1[System.Decimal]]" />
                </parameters>
              </method>
              <method name="Sum(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Decimal])" attrib="150" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Decimal]" />
                </parameters>
              </method>
              <method name="Sum(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Nullable`1[System.Int32]])" attrib="150" static="true" returntype="System.Nullable`1[System.Int32]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Nullable`1[System.Int32]]" />
                </parameters>
              </method>
              <method name="Sum(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Int32])" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Int32]" />
                </parameters>
              </method>
              <method name="Sum(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Int64])" attrib="150" static="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Int64]" />
                </parameters>
              </method>
              <method name="Sum(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Single])" attrib="150" static="true" returntype="System.Single">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Single]" />
                </parameters>
              </method>
              <method name="Sum(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Nullable`1[System.Int64]])" attrib="150" static="true" returntype="System.Nullable`1[System.Int64]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Func`2[TSource,System.Nullable`1[System.Int64]]" />
                </parameters>
              </method>
              <method name="Take(System.Collections.Generic.IEnumerable`1[TSource], System.Int32)" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="count" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="TakeWhile(System.Collections.Generic.IEnumerable`1[TSource], System.Func`3[TSource,System.Int32,System.Boolean])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Func`3[TSource,System.Int32,System.Boolean]" />
                </parameters>
              </method>
              <method name="TakeWhile(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Boolean])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Func`2[TSource,System.Boolean]" />
                </parameters>
              </method>
              <method name="ThenBy(System.Linq.IOrderedEnumerable`1[TSource], System.Func`2[TSource,TKey], System.Collections.Generic.IComparer`1[TKey])" attrib="150" static="true" returntype="System.Linq.IOrderedEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IOrderedEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="ThenBy(System.Linq.IOrderedEnumerable`1[TSource], System.Func`2[TSource,TKey])" attrib="150" static="true" returntype="System.Linq.IOrderedEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IOrderedEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                </parameters>
              </method>
              <method name="ThenByDescending(System.Linq.IOrderedEnumerable`1[TSource], System.Func`2[TSource,TKey])" attrib="150" static="true" returntype="System.Linq.IOrderedEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IOrderedEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                </parameters>
              </method>
              <method name="ThenByDescending(System.Linq.IOrderedEnumerable`1[TSource], System.Func`2[TSource,TKey], System.Collections.Generic.IComparer`1[TKey])" attrib="150" static="true" returntype="System.Linq.IOrderedEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IOrderedEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="ToArray(System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="TSource[]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="ToDictionary(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TKey], System.Collections.Generic.IEqualityComparer`1[TKey])" attrib="150" static="true" returntype="System.Collections.Generic.Dictionary`2[TKey,TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="ToDictionary(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TKey])" attrib="150" static="true" returntype="System.Collections.Generic.Dictionary`2[TKey,TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                </parameters>
              </method>
              <method name="ToDictionary(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TKey], System.Func`2[TSource,TElement])" attrib="150" static="true" returntype="System.Collections.Generic.Dictionary`2[TKey,TElement]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                  <parameter name="elementSelector" position="2" attrib="0" type="System.Func`2[TSource,TElement]" />
                </parameters>
              </method>
              <method name="ToDictionary(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TKey], System.Func`2[TSource,TElement], System.Collections.Generic.IEqualityComparer`1[TKey])" attrib="150" static="true" returntype="System.Collections.Generic.Dictionary`2[TKey,TElement]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                  <parameter name="elementSelector" position="2" attrib="0" type="System.Func`2[TSource,TElement]" />
                  <parameter name="comparer" position="3" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="ToList(System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="System.Collections.Generic.List`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="ToLookup(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TKey], System.Collections.Generic.IEqualityComparer`1[TKey])" attrib="150" static="true" returntype="System.Linq.ILookup`2[TKey,TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="ToLookup(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TKey])" attrib="150" static="true" returntype="System.Linq.ILookup`2[TKey,TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                </parameters>
              </method>
              <method name="ToLookup(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TKey], System.Func`2[TSource,TElement])" attrib="150" static="true" returntype="System.Linq.ILookup`2[TKey,TElement]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                  <parameter name="elementSelector" position="2" attrib="0" type="System.Func`2[TSource,TElement]" />
                </parameters>
              </method>
              <method name="ToLookup(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TKey], System.Func`2[TSource,TElement], System.Collections.Generic.IEqualityComparer`1[TKey])" attrib="150" static="true" returntype="System.Linq.ILookup`2[TKey,TElement]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Func`2[TSource,TKey]" />
                  <parameter name="elementSelector" position="2" attrib="0" type="System.Func`2[TSource,TElement]" />
                  <parameter name="comparer" position="3" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="Union(System.Collections.Generic.IEnumerable`1[TSource], System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="first" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="second" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="Union(System.Collections.Generic.IEnumerable`1[TSource], System.Collections.Generic.IEnumerable`1[TSource], System.Collections.Generic.IEqualityComparer`1[TSource])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="first" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="second" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TSource]" />
                </parameters>
              </method>
              <method name="Where(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,System.Boolean])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Func`2[TSource,System.Boolean]" />
                </parameters>
              </method>
              <method name="Where(System.Collections.Generic.IEnumerable`1[TSource], System.Func`3[TSource,System.Int32,System.Boolean])" attrib="150" static="true" returntype="System.Collections.Generic.IEnumerable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Func`3[TSource,System.Int32,System.Boolean]" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="EnumerableExecutor" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="EnumerableExecutor`1" type="class" base="System.Linq.EnumerableExecutor" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Linq.Expressions.Expression)" attrib="6278">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </constructor>
            </constructors>
          </class>
          <class name="EnumerableQuery" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="EnumerableQuery`1" type="class" base="System.Linq.EnumerableQuery" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Linq.IOrderedQueryable`1[T]" />
              <interface name="System.Linq.IQueryable`1[T]" />
              <interface name="System.Linq.IOrderedQueryable" />
              <interface name="System.Linq.IQueryable" />
              <interface name="System.Linq.IQueryProvider" />
              <interface name="System.Collections.Generic.IEnumerable`1[TSource]" />
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Linq.Expressions.Expression)" attrib="6278">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Collections.Generic.IEnumerable`1[T])" attrib="6278">
                <parameters>
                  <parameter name="enumerable" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[T]" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="IGrouping`2" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.Generic.IEnumerable`1[TElement]" />
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
            <properties>
              <property name="Key" attrib="0" ptype="TKey" params="">
                <methods>
                  <method name="get_Key()" attrib="3526" abstract="true" virtual="true" returntype="TKey">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="ILookup`2" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.Collections.Generic.IEnumerable`1[System.Linq.IGrouping`2[TKey,TElement]]" />
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
            <properties>
              <property name="Count" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Count()" attrib="3526" abstract="true" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="System.Collections.Generic.IEnumerable`1[TElement]" params="TKey">
                <methods>
                  <method name="get_Item(TKey)" attrib="3526" abstract="true" virtual="true" returntype="System.Collections.Generic.IEnumerable`1[TElement]">
                    <parameters>
                      <parameter name="key" position="0" attrib="0" type="TKey" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Contains(TKey)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="TKey" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IOrderedEnumerable`1" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.Generic.IEnumerable`1[TSource]" />
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
            <methods>
              <method name="CreateOrderedEnumerable(System.Func`2[TElement,TKey], System.Collections.Generic.IComparer`1[TKey], System.Boolean)" attrib="1478" abstract="true" virtual="true" returntype="System.Linq.IOrderedEnumerable`1[TElement]">
                <parameters>
                  <parameter name="keySelector" position="0" attrib="0" type="System.Func`2[TElement,TKey]" />
                  <parameter name="comparer" position="1" attrib="0" type="System.Collections.Generic.IComparer`1[TKey]" />
                  <parameter name="descending" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IOrderedQueryable" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Linq.IQueryable" />
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
          </class>
          <class name="IOrderedQueryable`1" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Linq.IQueryable`1[T]" />
              <interface name="System.Collections.Generic.IEnumerable`1[TSource]" />
              <interface name="System.Linq.IOrderedQueryable" />
              <interface name="System.Linq.IQueryable" />
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
          </class>
          <class name="IQueryable" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
            <properties>
              <property name="ElementType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_ElementType()" attrib="3526" abstract="true" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Expression" attrib="0" ptype="System.Linq.Expressions.Expression" params="">
                <methods>
                  <method name="get_Expression()" attrib="3526" abstract="true" virtual="true" returntype="System.Linq.Expressions.Expression">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Provider" attrib="0" ptype="System.Linq.IQueryProvider" params="">
                <methods>
                  <method name="get_Provider()" attrib="3526" abstract="true" virtual="true" returntype="System.Linq.IQueryProvider">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="IQueryable`1" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Collections.Generic.IEnumerable`1[TSource]" />
              <interface name="System.Linq.IQueryable" />
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
          </class>
          <class name="IQueryProvider" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="CreateQuery(System.Linq.Expressions.Expression)" attrib="1478" abstract="true" virtual="true" returntype="System.Linq.IQueryable`1[TElement]">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="CreateQuery(System.Linq.Expressions.Expression)" attrib="1478" abstract="true" virtual="true" returntype="System.Linq.IQueryable">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="Execute(System.Linq.Expressions.Expression)" attrib="1478" abstract="true" virtual="true" returntype="TResult">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="Execute(System.Linq.Expressions.Expression)" attrib="1478" abstract="true" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Lookup`2" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.Linq.ILookup`2[TKey,TElement]" />
              <interface name="System.Collections.Generic.IEnumerable`1[System.Linq.IGrouping`2[TKey,TElement]]" />
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
            <properties>
              <property name="Count" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Count()" attrib="2534" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="System.Collections.Generic.IEnumerable`1[TElement]" params="TKey">
                <methods>
                  <method name="get_Item(TKey)" attrib="2534" virtual="true" returntype="System.Collections.Generic.IEnumerable`1[TElement]">
                    <parameters>
                      <parameter name="key" position="0" attrib="0" type="TKey" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="ApplyResultSelector(System.Func`3[TKey,System.Collections.Generic.IEnumerable`1[TElement],TResult])" attrib="134" returntype="System.Collections.Generic.IEnumerable`1[TResult]">
                <parameters>
                  <parameter name="resultSelector" position="0" attrib="0" type="System.Func`3[TKey,System.Collections.Generic.IEnumerable`1[TElement],TResult]" />
                </parameters>
              </method>
              <method name="Contains(TKey)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="TKey" />
                </parameters>
              </method>
              <method name="GetEnumerator()" attrib="486" virtual="true" returntype="System.Collections.Generic.IEnumerator`1[System.Linq.IGrouping`2[TKey,TElement]]">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="Queryable" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            </attributes>
            <methods>
              <method name="Aggregate(System.Linq.IQueryable`1[TSource], TAccumulate, System.Linq.Expressions.Expression`1[System.Func`3[TAccumulate,TSource,TAccumulate]])" attrib="150" static="true" returntype="TAccumulate">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="seed" position="1" attrib="0" type="TAccumulate" />
                  <parameter name="func" position="2" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`3[TAccumulate,TSource,TAccumulate]]" />
                </parameters>
              </method>
              <method name="Aggregate(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`3[TSource,TSource,TSource]])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="func" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`3[TSource,TSource,TSource]]" />
                </parameters>
              </method>
              <method name="Aggregate(System.Linq.IQueryable`1[TSource], TAccumulate, System.Linq.Expressions.Expression`1[System.Func`3[TAccumulate,TSource,TAccumulate]], System.Linq.Expressions.Expression`1[System.Func`2[TAccumulate,TResult]])" attrib="150" static="true" returntype="TResult">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="seed" position="1" attrib="0" type="TAccumulate" />
                  <parameter name="func" position="2" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`3[TAccumulate,TSource,TAccumulate]]" />
                  <parameter name="selector" position="3" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TAccumulate,TResult]]" />
                </parameters>
              </method>
              <method name="All(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]])" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]]" />
                </parameters>
              </method>
              <method name="Any(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]])" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]]" />
                </parameters>
              </method>
              <method name="Any(System.Linq.IQueryable`1[TSource])" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                </parameters>
              </method>
              <method name="AsQueryable(System.Collections.Generic.IEnumerable`1[TElement])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TElement]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[TElement]" />
                </parameters>
              </method>
              <method name="AsQueryable(System.Collections.IEnumerable)" attrib="150" static="true" returntype="System.Linq.IQueryable">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Collections.IEnumerable" />
                </parameters>
              </method>
              <method name="Average(System.Linq.IQueryable`1[System.Double])" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[System.Double]" />
                </parameters>
              </method>
              <method name="Average(System.Linq.IQueryable`1[System.Nullable`1[System.Single]])" attrib="150" static="true" returntype="System.Nullable`1[System.Single]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[System.Nullable`1[System.Single]]" />
                </parameters>
              </method>
              <method name="Average(System.Linq.IQueryable`1[System.Decimal])" attrib="150" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[System.Decimal]" />
                </parameters>
              </method>
              <method name="Average(System.Linq.IQueryable`1[System.Nullable`1[System.Double]])" attrib="150" static="true" returntype="System.Nullable`1[System.Double]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[System.Nullable`1[System.Double]]" />
                </parameters>
              </method>
              <method name="Average(System.Linq.IQueryable`1[System.Single])" attrib="150" static="true" returntype="System.Single">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[System.Single]" />
                </parameters>
              </method>
              <method name="Average(System.Linq.IQueryable`1[System.Nullable`1[System.Int32]])" attrib="150" static="true" returntype="System.Nullable`1[System.Double]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[System.Nullable`1[System.Int32]]" />
                </parameters>
              </method>
              <method name="Average(System.Linq.IQueryable`1[System.Int32])" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[System.Int32]" />
                </parameters>
              </method>
              <method name="Average(System.Linq.IQueryable`1[System.Nullable`1[System.Int64]])" attrib="150" static="true" returntype="System.Nullable`1[System.Double]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[System.Nullable`1[System.Int64]]" />
                </parameters>
              </method>
              <method name="Average(System.Linq.IQueryable`1[System.Int64])" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[System.Int64]" />
                </parameters>
              </method>
              <method name="Average(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Double]])" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Double]]" />
                </parameters>
              </method>
              <method name="Average(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Nullable`1[System.Int64]]])" attrib="150" static="true" returntype="System.Nullable`1[System.Double]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Nullable`1[System.Int64]]]" />
                </parameters>
              </method>
              <method name="Average(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Nullable`1[System.Double]]])" attrib="150" static="true" returntype="System.Nullable`1[System.Double]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Nullable`1[System.Double]]]" />
                </parameters>
              </method>
              <method name="Average(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Nullable`1[System.Decimal]]])" attrib="150" static="true" returntype="System.Nullable`1[System.Decimal]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Nullable`1[System.Decimal]]]" />
                </parameters>
              </method>
              <method name="Average(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Decimal]])" attrib="150" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Decimal]]" />
                </parameters>
              </method>
              <method name="Average(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Int64]])" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Int64]]" />
                </parameters>
              </method>
              <method name="Average(System.Linq.IQueryable`1[System.Nullable`1[System.Decimal]])" attrib="150" static="true" returntype="System.Nullable`1[System.Decimal]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[System.Nullable`1[System.Decimal]]" />
                </parameters>
              </method>
              <method name="Average(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Int32]])" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Int32]]" />
                </parameters>
              </method>
              <method name="Average(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Nullable`1[System.Int32]]])" attrib="150" static="true" returntype="System.Nullable`1[System.Double]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Nullable`1[System.Int32]]]" />
                </parameters>
              </method>
              <method name="Average(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Nullable`1[System.Single]]])" attrib="150" static="true" returntype="System.Nullable`1[System.Single]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Nullable`1[System.Single]]]" />
                </parameters>
              </method>
              <method name="Average(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Single]])" attrib="150" static="true" returntype="System.Single">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Single]]" />
                </parameters>
              </method>
              <method name="Cast(System.Linq.IQueryable)" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable" />
                </parameters>
              </method>
              <method name="Concat(System.Linq.IQueryable`1[TSource], System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source1" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="source2" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="Contains(System.Linq.IQueryable`1[TSource], TSource)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="item" position="1" attrib="0" type="TSource" />
                </parameters>
              </method>
              <method name="Contains(System.Linq.IQueryable`1[TSource], TSource, System.Collections.Generic.IEqualityComparer`1[TSource])" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="item" position="1" attrib="0" type="TSource" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TSource]" />
                </parameters>
              </method>
              <method name="Count(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]])" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]]" />
                </parameters>
              </method>
              <method name="Count(System.Linq.IQueryable`1[TSource])" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                </parameters>
              </method>
              <method name="DefaultIfEmpty(System.Linq.IQueryable`1[TSource])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                </parameters>
              </method>
              <method name="DefaultIfEmpty(System.Linq.IQueryable`1[TSource], TSource)" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="defaultValue" position="1" attrib="0" type="TSource" />
                </parameters>
              </method>
              <method name="Distinct(System.Linq.IQueryable`1[TSource])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                </parameters>
              </method>
              <method name="Distinct(System.Linq.IQueryable`1[TSource], System.Collections.Generic.IEqualityComparer`1[TSource])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="comparer" position="1" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TSource]" />
                </parameters>
              </method>
              <method name="ElementAt(System.Linq.IQueryable`1[TSource], System.Int32)" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ElementAtOrDefault(System.Linq.IQueryable`1[TSource], System.Int32)" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Except(System.Linq.IQueryable`1[TSource], System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source1" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="source2" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="Except(System.Linq.IQueryable`1[TSource], System.Collections.Generic.IEnumerable`1[TSource], System.Collections.Generic.IEqualityComparer`1[TSource])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source1" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="source2" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TSource]" />
                </parameters>
              </method>
              <method name="First(System.Linq.IQueryable`1[TSource])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                </parameters>
              </method>
              <method name="First(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]]" />
                </parameters>
              </method>
              <method name="FirstOrDefault(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]]" />
                </parameters>
              </method>
              <method name="FirstOrDefault(System.Linq.IQueryable`1[TSource])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                </parameters>
              </method>
              <method name="GroupBy(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]], System.Linq.Expressions.Expression`1[System.Func`3[TKey,System.Collections.Generic.IEnumerable`1[TSource],TResult]], System.Collections.Generic.IEqualityComparer`1[TKey])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]]" />
                  <parameter name="resultSelector" position="2" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`3[TKey,System.Collections.Generic.IEnumerable`1[TSource],TResult]]" />
                  <parameter name="comparer" position="3" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="GroupBy(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]], System.Linq.Expressions.Expression`1[System.Func`3[TKey,System.Collections.Generic.IEnumerable`1[TSource],TResult]])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]]" />
                  <parameter name="resultSelector" position="2" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`3[TKey,System.Collections.Generic.IEnumerable`1[TSource],TResult]]" />
                </parameters>
              </method>
              <method name="GroupBy(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]], System.Collections.Generic.IEqualityComparer`1[TKey])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[System.Linq.IGrouping`2[TKey,TSource]]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]]" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="GroupBy(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]], System.Linq.Expressions.Expression`1[System.Func`2[TSource,TElement]])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[System.Linq.IGrouping`2[TKey,TElement]]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]]" />
                  <parameter name="elementSelector" position="2" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,TElement]]" />
                </parameters>
              </method>
              <method name="GroupBy(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]], System.Linq.Expressions.Expression`1[System.Func`2[TSource,TElement]], System.Linq.Expressions.Expression`1[System.Func`3[TKey,System.Collections.Generic.IEnumerable`1[TElement],TResult]])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]]" />
                  <parameter name="elementSelector" position="2" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,TElement]]" />
                  <parameter name="resultSelector" position="3" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`3[TKey,System.Collections.Generic.IEnumerable`1[TElement],TResult]]" />
                </parameters>
              </method>
              <method name="GroupBy(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]], System.Linq.Expressions.Expression`1[System.Func`2[TSource,TElement]], System.Collections.Generic.IEqualityComparer`1[TKey])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[System.Linq.IGrouping`2[TKey,TElement]]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]]" />
                  <parameter name="elementSelector" position="2" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,TElement]]" />
                  <parameter name="comparer" position="3" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="GroupBy(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[System.Linq.IGrouping`2[TKey,TSource]]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]]" />
                </parameters>
              </method>
              <method name="GroupBy(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]], System.Linq.Expressions.Expression`1[System.Func`2[TSource,TElement]], System.Linq.Expressions.Expression`1[System.Func`3[TKey,System.Collections.Generic.IEnumerable`1[TElement],TResult]], System.Collections.Generic.IEqualityComparer`1[TKey])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]]" />
                  <parameter name="elementSelector" position="2" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,TElement]]" />
                  <parameter name="resultSelector" position="3" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`3[TKey,System.Collections.Generic.IEnumerable`1[TElement],TResult]]" />
                  <parameter name="comparer" position="4" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="GroupJoin(System.Linq.IQueryable`1[TOuter], System.Collections.Generic.IEnumerable`1[TInner], System.Linq.Expressions.Expression`1[System.Func`2[TOuter,TKey]], System.Linq.Expressions.Expression`1[System.Func`2[TInner,TKey]], System.Linq.Expressions.Expression`1[System.Func`3[TOuter,System.Collections.Generic.IEnumerable`1[TInner],TResult]], System.Collections.Generic.IEqualityComparer`1[TKey])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="outer" position="0" attrib="0" type="System.Linq.IQueryable`1[TOuter]" />
                  <parameter name="inner" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TInner]" />
                  <parameter name="outerKeySelector" position="2" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TOuter,TKey]]" />
                  <parameter name="innerKeySelector" position="3" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TInner,TKey]]" />
                  <parameter name="resultSelector" position="4" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`3[TOuter,System.Collections.Generic.IEnumerable`1[TInner],TResult]]" />
                  <parameter name="comparer" position="5" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="GroupJoin(System.Linq.IQueryable`1[TOuter], System.Collections.Generic.IEnumerable`1[TInner], System.Linq.Expressions.Expression`1[System.Func`2[TOuter,TKey]], System.Linq.Expressions.Expression`1[System.Func`2[TInner,TKey]], System.Linq.Expressions.Expression`1[System.Func`3[TOuter,System.Collections.Generic.IEnumerable`1[TInner],TResult]])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="outer" position="0" attrib="0" type="System.Linq.IQueryable`1[TOuter]" />
                  <parameter name="inner" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TInner]" />
                  <parameter name="outerKeySelector" position="2" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TOuter,TKey]]" />
                  <parameter name="innerKeySelector" position="3" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TInner,TKey]]" />
                  <parameter name="resultSelector" position="4" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`3[TOuter,System.Collections.Generic.IEnumerable`1[TInner],TResult]]" />
                </parameters>
              </method>
              <method name="Intersect(System.Linq.IQueryable`1[TSource], System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source1" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="source2" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="Intersect(System.Linq.IQueryable`1[TSource], System.Collections.Generic.IEnumerable`1[TSource], System.Collections.Generic.IEqualityComparer`1[TSource])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source1" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="source2" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TSource]" />
                </parameters>
              </method>
              <method name="Join(System.Linq.IQueryable`1[TOuter], System.Collections.Generic.IEnumerable`1[TInner], System.Linq.Expressions.Expression`1[System.Func`2[TOuter,TKey]], System.Linq.Expressions.Expression`1[System.Func`2[TInner,TKey]], System.Linq.Expressions.Expression`1[System.Func`3[TOuter,TInner,TResult]])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="outer" position="0" attrib="0" type="System.Linq.IQueryable`1[TOuter]" />
                  <parameter name="inner" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TInner]" />
                  <parameter name="outerKeySelector" position="2" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TOuter,TKey]]" />
                  <parameter name="innerKeySelector" position="3" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TInner,TKey]]" />
                  <parameter name="resultSelector" position="4" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`3[TOuter,TInner,TResult]]" />
                </parameters>
              </method>
              <method name="Join(System.Linq.IQueryable`1[TOuter], System.Collections.Generic.IEnumerable`1[TInner], System.Linq.Expressions.Expression`1[System.Func`2[TOuter,TKey]], System.Linq.Expressions.Expression`1[System.Func`2[TInner,TKey]], System.Linq.Expressions.Expression`1[System.Func`3[TOuter,TInner,TResult]], System.Collections.Generic.IEqualityComparer`1[TKey])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="outer" position="0" attrib="0" type="System.Linq.IQueryable`1[TOuter]" />
                  <parameter name="inner" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TInner]" />
                  <parameter name="outerKeySelector" position="2" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TOuter,TKey]]" />
                  <parameter name="innerKeySelector" position="3" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TInner,TKey]]" />
                  <parameter name="resultSelector" position="4" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`3[TOuter,TInner,TResult]]" />
                  <parameter name="comparer" position="5" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="Last(System.Linq.IQueryable`1[TSource])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                </parameters>
              </method>
              <method name="Last(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]]" />
                </parameters>
              </method>
              <method name="LastOrDefault(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]]" />
                </parameters>
              </method>
              <method name="LastOrDefault(System.Linq.IQueryable`1[TSource])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                </parameters>
              </method>
              <method name="LongCount(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]])" attrib="150" static="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]]" />
                </parameters>
              </method>
              <method name="LongCount(System.Linq.IQueryable`1[TSource])" attrib="150" static="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                </parameters>
              </method>
              <method name="Max(System.Linq.IQueryable`1[TSource])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                </parameters>
              </method>
              <method name="Max(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,TResult]])" attrib="150" static="true" returntype="TResult">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,TResult]]" />
                </parameters>
              </method>
              <method name="Min(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,TResult]])" attrib="150" static="true" returntype="TResult">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,TResult]]" />
                </parameters>
              </method>
              <method name="Min(System.Linq.IQueryable`1[TSource])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                </parameters>
              </method>
              <method name="OfType(System.Linq.IQueryable)" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable" />
                </parameters>
              </method>
              <method name="OrderBy(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]])" attrib="150" static="true" returntype="System.Linq.IOrderedQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]]" />
                </parameters>
              </method>
              <method name="OrderBy(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]], System.Collections.Generic.IComparer`1[TKey])" attrib="150" static="true" returntype="System.Linq.IOrderedQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]]" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="OrderByDescending(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]], System.Collections.Generic.IComparer`1[TKey])" attrib="150" static="true" returntype="System.Linq.IOrderedQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]]" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="OrderByDescending(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]])" attrib="150" static="true" returntype="System.Linq.IOrderedQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]]" />
                </parameters>
              </method>
              <method name="Reverse(System.Linq.IQueryable`1[TSource])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                </parameters>
              </method>
              <method name="Select(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,TResult]])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,TResult]]" />
                </parameters>
              </method>
              <method name="Select(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`3[TSource,System.Int32,TResult]])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`3[TSource,System.Int32,TResult]]" />
                </parameters>
              </method>
              <method name="SelectMany(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`3[TSource,System.Int32,System.Collections.Generic.IEnumerable`1[TResult]]])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`3[TSource,System.Int32,System.Collections.Generic.IEnumerable`1[TResult]]]" />
                </parameters>
              </method>
              <method name="SelectMany(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`3[TSource,System.Int32,System.Collections.Generic.IEnumerable`1[TCollection]]], System.Linq.Expressions.Expression`1[System.Func`3[TSource,TCollection,TResult]])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="collectionSelector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`3[TSource,System.Int32,System.Collections.Generic.IEnumerable`1[TCollection]]]" />
                  <parameter name="resultSelector" position="2" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`3[TSource,TCollection,TResult]]" />
                </parameters>
              </method>
              <method name="SelectMany(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Collections.Generic.IEnumerable`1[TCollection]]], System.Linq.Expressions.Expression`1[System.Func`3[TSource,TCollection,TResult]])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="collectionSelector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Collections.Generic.IEnumerable`1[TCollection]]]" />
                  <parameter name="resultSelector" position="2" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`3[TSource,TCollection,TResult]]" />
                </parameters>
              </method>
              <method name="SelectMany(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Collections.Generic.IEnumerable`1[TResult]]])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TResult]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Collections.Generic.IEnumerable`1[TResult]]]" />
                </parameters>
              </method>
              <method name="SequenceEqual(System.Linq.IQueryable`1[TSource], System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source1" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="source2" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="SequenceEqual(System.Linq.IQueryable`1[TSource], System.Collections.Generic.IEnumerable`1[TSource], System.Collections.Generic.IEqualityComparer`1[TSource])" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source1" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="source2" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TSource]" />
                </parameters>
              </method>
              <method name="Single(System.Linq.IQueryable`1[TSource])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                </parameters>
              </method>
              <method name="Single(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]]" />
                </parameters>
              </method>
              <method name="SingleOrDefault(System.Linq.IQueryable`1[TSource])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                </parameters>
              </method>
              <method name="SingleOrDefault(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]])" attrib="150" static="true" returntype="TSource">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]]" />
                </parameters>
              </method>
              <method name="Skip(System.Linq.IQueryable`1[TSource], System.Int32)" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="count" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="SkipWhile(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`3[TSource,System.Int32,System.Boolean]])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`3[TSource,System.Int32,System.Boolean]]" />
                </parameters>
              </method>
              <method name="SkipWhile(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]]" />
                </parameters>
              </method>
              <method name="Sum(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Nullable`1[System.Double]]])" attrib="150" static="true" returntype="System.Nullable`1[System.Double]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Nullable`1[System.Double]]]" />
                </parameters>
              </method>
              <method name="Sum(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Double]])" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Double]]" />
                </parameters>
              </method>
              <method name="Sum(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Nullable`1[System.Decimal]]])" attrib="150" static="true" returntype="System.Nullable`1[System.Decimal]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Nullable`1[System.Decimal]]]" />
                </parameters>
              </method>
              <method name="Sum(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Decimal]])" attrib="150" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Decimal]]" />
                </parameters>
              </method>
              <method name="Sum(System.Linq.IQueryable`1[System.Nullable`1[System.Double]])" attrib="150" static="true" returntype="System.Nullable`1[System.Double]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[System.Nullable`1[System.Double]]" />
                </parameters>
              </method>
              <method name="Sum(System.Linq.IQueryable`1[System.Double])" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[System.Double]" />
                </parameters>
              </method>
              <method name="Sum(System.Linq.IQueryable`1[System.Decimal])" attrib="150" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[System.Decimal]" />
                </parameters>
              </method>
              <method name="Sum(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Int32]])" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Int32]]" />
                </parameters>
              </method>
              <method name="Sum(System.Linq.IQueryable`1[System.Nullable`1[System.Decimal]])" attrib="150" static="true" returntype="System.Nullable`1[System.Decimal]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[System.Nullable`1[System.Decimal]]" />
                </parameters>
              </method>
              <method name="Sum(System.Linq.IQueryable`1[System.Nullable`1[System.Single]])" attrib="150" static="true" returntype="System.Nullable`1[System.Single]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[System.Nullable`1[System.Single]]" />
                </parameters>
              </method>
              <method name="Sum(System.Linq.IQueryable`1[System.Nullable`1[System.Int32]])" attrib="150" static="true" returntype="System.Nullable`1[System.Int32]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[System.Nullable`1[System.Int32]]" />
                </parameters>
              </method>
              <method name="Sum(System.Linq.IQueryable`1[System.Int32])" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[System.Int32]" />
                </parameters>
              </method>
              <method name="Sum(System.Linq.IQueryable`1[System.Int64])" attrib="150" static="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[System.Int64]" />
                </parameters>
              </method>
              <method name="Sum(System.Linq.IQueryable`1[System.Single])" attrib="150" static="true" returntype="System.Single">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[System.Single]" />
                </parameters>
              </method>
              <method name="Sum(System.Linq.IQueryable`1[System.Nullable`1[System.Int64]])" attrib="150" static="true" returntype="System.Nullable`1[System.Int64]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[System.Nullable`1[System.Int64]]" />
                </parameters>
              </method>
              <method name="Sum(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Nullable`1[System.Int64]]])" attrib="150" static="true" returntype="System.Nullable`1[System.Int64]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Nullable`1[System.Int64]]]" />
                </parameters>
              </method>
              <method name="Sum(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Int64]])" attrib="150" static="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Int64]]" />
                </parameters>
              </method>
              <method name="Sum(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Nullable`1[System.Single]]])" attrib="150" static="true" returntype="System.Nullable`1[System.Single]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Nullable`1[System.Single]]]" />
                </parameters>
              </method>
              <method name="Sum(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Single]])" attrib="150" static="true" returntype="System.Single">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Single]]" />
                </parameters>
              </method>
              <method name="Sum(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Nullable`1[System.Int32]]])" attrib="150" static="true" returntype="System.Nullable`1[System.Int32]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="selector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Nullable`1[System.Int32]]]" />
                </parameters>
              </method>
              <method name="Take(System.Linq.IQueryable`1[TSource], System.Int32)" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="count" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="TakeWhile(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]]" />
                </parameters>
              </method>
              <method name="TakeWhile(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`3[TSource,System.Int32,System.Boolean]])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`3[TSource,System.Int32,System.Boolean]]" />
                </parameters>
              </method>
              <method name="ThenBy(System.Linq.IOrderedQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]])" attrib="150" static="true" returntype="System.Linq.IOrderedQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IOrderedQueryable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]]" />
                </parameters>
              </method>
              <method name="ThenBy(System.Linq.IOrderedQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]], System.Collections.Generic.IComparer`1[TKey])" attrib="150" static="true" returntype="System.Linq.IOrderedQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IOrderedQueryable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]]" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="ThenByDescending(System.Linq.IOrderedQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]], System.Collections.Generic.IComparer`1[TKey])" attrib="150" static="true" returntype="System.Linq.IOrderedQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IOrderedQueryable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]]" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="ThenByDescending(System.Linq.IOrderedQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]])" attrib="150" static="true" returntype="System.Linq.IOrderedQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IOrderedQueryable`1[TSource]" />
                  <parameter name="keySelector" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,TKey]]" />
                </parameters>
              </method>
              <method name="Union(System.Linq.IQueryable`1[TSource], System.Collections.Generic.IEnumerable`1[TSource])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source1" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="source2" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                </parameters>
              </method>
              <method name="Union(System.Linq.IQueryable`1[TSource], System.Collections.Generic.IEnumerable`1[TSource], System.Collections.Generic.IEqualityComparer`1[TSource])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source1" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="source2" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[TSource]" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TSource]" />
                </parameters>
              </method>
              <method name="Where(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`2[TSource,System.Boolean]]" />
                </parameters>
              </method>
              <method name="Where(System.Linq.IQueryable`1[TSource], System.Linq.Expressions.Expression`1[System.Func`3[TSource,System.Int32,System.Boolean]])" attrib="150" static="true" returntype="System.Linq.IQueryable`1[TSource]">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Linq.IQueryable`1[TSource]" />
                  <parameter name="predicate" position="1" attrib="0" type="System.Linq.Expressions.Expression`1[System.Func`3[TSource,System.Int32,System.Boolean]]" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Linq.Expressions">
        <classes>
          <class name="BinaryExpression" type="class" base="System.Linq.Expressions.Expression" sealed="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="Conversion" attrib="0" ptype="System.Linq.Expressions.LambdaExpression" params="">
                <methods>
                  <method name="get_Conversion()" attrib="2182" returntype="System.Linq.Expressions.LambdaExpression">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsLifted" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsLifted()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsLiftedToNull" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsLiftedToNull()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Left" attrib="0" ptype="System.Linq.Expressions.Expression" params="">
                <methods>
                  <method name="get_Left()" attrib="2182" returntype="System.Linq.Expressions.Expression">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Method" attrib="0" ptype="System.Reflection.MethodInfo" params="">
                <methods>
                  <method name="get_Method()" attrib="2182" returntype="System.Reflection.MethodInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Right" attrib="0" ptype="System.Linq.Expressions.Expression" params="">
                <methods>
                  <method name="get_Right()" attrib="2182" returntype="System.Linq.Expressions.Expression">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="ConditionalExpression" type="class" base="System.Linq.Expressions.Expression" sealed="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="IfFalse" attrib="0" ptype="System.Linq.Expressions.Expression" params="">
                <methods>
                  <method name="get_IfFalse()" attrib="2182" returntype="System.Linq.Expressions.Expression">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IfTrue" attrib="0" ptype="System.Linq.Expressions.Expression" params="">
                <methods>
                  <method name="get_IfTrue()" attrib="2182" returntype="System.Linq.Expressions.Expression">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Test" attrib="0" ptype="System.Linq.Expressions.Expression" params="">
                <methods>
                  <method name="get_Test()" attrib="2182" returntype="System.Linq.Expressions.Expression">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="ConstantExpression" type="class" base="System.Linq.Expressions.Expression" sealed="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="Value" attrib="0" ptype="System.Object" params="">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="ElementInit" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="AddMethod" attrib="0" ptype="System.Reflection.MethodInfo" params="">
                <methods>
                  <method name="get_AddMethod()" attrib="2182" returntype="System.Reflection.MethodInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Arguments" attrib="0" ptype="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression]" params="">
                <methods>
                  <method name="get_Arguments()" attrib="2182" returntype="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression]">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="Expression" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Linq.Expressions.ExpressionType, System.Type)" attrib="6276">
                <parameters>
                  <parameter name="nodeType" position="0" attrib="0" type="System.Linq.Expressions.ExpressionType" />
                  <parameter name="type" position="1" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="NodeType" attrib="0" ptype="System.Linq.Expressions.ExpressionType" params="">
                <methods>
                  <method name="get_NodeType()" attrib="2182" returntype="System.Linq.Expressions.ExpressionType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Type" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_Type()" attrib="2182" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="method" position="2" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="Add(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="AddChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="method" position="2" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="AddChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="And(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="method" position="2" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="And(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="AndAlso(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="method" position="2" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="AndAlso(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])" attrib="150" static="true" returntype="System.Linq.Expressions.MethodCallExpression">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="indexes" position="1" attrib="0" type="System.Linq.Expressions.Expression[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="ArrayIndex(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.Expression])" attrib="150" static="true" returntype="System.Linq.Expressions.MethodCallExpression">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="indexes" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.Expression]" />
                </parameters>
              </method>
              <method name="ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="index" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="ArrayLength(System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.UnaryExpression">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="Bind(System.Reflection.MethodInfo, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.MemberAssignment">
                <parameters>
                  <parameter name="propertyAccessor" position="0" attrib="0" type="System.Reflection.MethodInfo" />
                  <parameter name="expression" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="Bind(System.Reflection.MemberInfo, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.MemberAssignment">
                <parameters>
                  <parameter name="member" position="0" attrib="0" type="System.Reflection.MemberInfo" />
                  <parameter name="expression" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.MethodCallExpression">
                <parameters>
                  <parameter name="instance" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="method" position="1" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="Call(System.Linq.Expressions.Expression, System.String, System.Type[], System.Linq.Expressions.Expression[])" attrib="150" static="true" returntype="System.Linq.Expressions.MethodCallExpression">
                <parameters>
                  <parameter name="instance" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="methodName" position="1" attrib="0" type="System.String" />
                  <parameter name="typeArguments" position="2" attrib="0" type="System.Type[]" />
                  <parameter name="arguments" position="3" attrib="0" type="System.Linq.Expressions.Expression[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="Call(System.Type, System.String, System.Type[], System.Linq.Expressions.Expression[])" attrib="150" static="true" returntype="System.Linq.Expressions.MethodCallExpression">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="methodName" position="1" attrib="0" type="System.String" />
                  <parameter name="typeArguments" position="2" attrib="0" type="System.Type[]" />
                  <parameter name="arguments" position="3" attrib="0" type="System.Linq.Expressions.Expression[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.Expression])" attrib="150" static="true" returntype="System.Linq.Expressions.MethodCallExpression">
                <parameters>
                  <parameter name="instance" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="method" position="1" attrib="0" type="System.Reflection.MethodInfo" />
                  <parameter name="arguments" position="2" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.Expression]" />
                </parameters>
              </method>
              <method name="Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])" attrib="150" static="true" returntype="System.Linq.Expressions.MethodCallExpression">
                <parameters>
                  <parameter name="method" position="0" attrib="0" type="System.Reflection.MethodInfo" />
                  <parameter name="arguments" position="1" attrib="0" type="System.Linq.Expressions.Expression[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])" attrib="150" static="true" returntype="System.Linq.Expressions.MethodCallExpression">
                <parameters>
                  <parameter name="instance" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="method" position="1" attrib="0" type="System.Reflection.MethodInfo" />
                  <parameter name="arguments" position="2" attrib="0" type="System.Linq.Expressions.Expression[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="Coalesce(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.LambdaExpression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="conversion" position="2" attrib="0" type="System.Linq.Expressions.LambdaExpression" />
                </parameters>
              </method>
              <method name="Coalesce(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="Condition(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.ConditionalExpression">
                <parameters>
                  <parameter name="test" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="ifTrue" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="ifFalse" position="2" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="Constant(System.Object, System.Type)" attrib="150" static="true" returntype="System.Linq.Expressions.ConstantExpression">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="type" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="Constant(System.Object)" attrib="150" static="true" returntype="System.Linq.Expressions.ConstantExpression">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Convert(System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.UnaryExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="type" position="1" attrib="0" type="System.Type" />
                  <parameter name="method" position="2" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="Convert(System.Linq.Expressions.Expression, System.Type)" attrib="150" static="true" returntype="System.Linq.Expressions.UnaryExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="type" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="ConvertChecked(System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.UnaryExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="type" position="1" attrib="0" type="System.Type" />
                  <parameter name="method" position="2" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="ConvertChecked(System.Linq.Expressions.Expression, System.Type)" attrib="150" static="true" returntype="System.Linq.Expressions.UnaryExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="type" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="Divide(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="method" position="2" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="Divide(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="ElementInit(System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])" attrib="150" static="true" returntype="System.Linq.Expressions.ElementInit">
                <parameters>
                  <parameter name="addMethod" position="0" attrib="0" type="System.Reflection.MethodInfo" />
                  <parameter name="arguments" position="1" attrib="0" type="System.Linq.Expressions.Expression[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="ElementInit(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.Expression])" attrib="150" static="true" returntype="System.Linq.Expressions.ElementInit">
                <parameters>
                  <parameter name="addMethod" position="0" attrib="0" type="System.Reflection.MethodInfo" />
                  <parameter name="arguments" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.Expression]" />
                </parameters>
              </method>
              <method name="Equal(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="Equal(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="liftToNull" position="2" attrib="0" type="System.Boolean" />
                  <parameter name="method" position="3" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="ExclusiveOr(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="method" position="2" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="ExclusiveOr(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="Field(System.Linq.Expressions.Expression, System.String)" attrib="150" static="true" returntype="System.Linq.Expressions.MemberExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="fieldName" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Field(System.Linq.Expressions.Expression, System.Reflection.FieldInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.MemberExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="field" position="1" attrib="0" type="System.Reflection.FieldInfo" />
                </parameters>
              </method>
              <method name="GetActionType(System.Type[])" attrib="150" static="true" returntype="System.Type">
                <parameters>
                  <parameter name="typeArgs" position="0" attrib="0" type="System.Type[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="GetFuncType(System.Type[])" attrib="150" static="true" returntype="System.Type">
                <parameters>
                  <parameter name="typeArgs" position="0" attrib="0" type="System.Type[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="GreaterThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="liftToNull" position="2" attrib="0" type="System.Boolean" />
                  <parameter name="method" position="3" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="GreaterThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="GreaterThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="liftToNull" position="2" attrib="0" type="System.Boolean" />
                  <parameter name="method" position="3" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="GreaterThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="Invoke(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.Expression])" attrib="150" static="true" returntype="System.Linq.Expressions.InvocationExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="arguments" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.Expression]" />
                </parameters>
              </method>
              <method name="Invoke(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])" attrib="150" static="true" returntype="System.Linq.Expressions.InvocationExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="arguments" position="1" attrib="0" type="System.Linq.Expressions.Expression[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="Lambda(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])" attrib="150" static="true" returntype="System.Linq.Expressions.LambdaExpression">
                <parameters>
                  <parameter name="body" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="parameters" position="1" attrib="0" type="System.Linq.Expressions.ParameterExpression[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="Lambda(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.ParameterExpression])" attrib="150" static="true" returntype="System.Linq.Expressions.Expression`1[TDelegate]">
                <parameters>
                  <parameter name="body" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="parameters" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.ParameterExpression]" />
                </parameters>
              </method>
              <method name="Lambda(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])" attrib="150" static="true" returntype="System.Linq.Expressions.Expression`1[TDelegate]">
                <parameters>
                  <parameter name="body" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="parameters" position="1" attrib="0" type="System.Linq.Expressions.ParameterExpression[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="Lambda(System.Type, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.ParameterExpression])" attrib="150" static="true" returntype="System.Linq.Expressions.LambdaExpression">
                <parameters>
                  <parameter name="delegateType" position="0" attrib="0" type="System.Type" />
                  <parameter name="body" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="parameters" position="2" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.ParameterExpression]" />
                </parameters>
              </method>
              <method name="Lambda(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])" attrib="150" static="true" returntype="System.Linq.Expressions.LambdaExpression">
                <parameters>
                  <parameter name="delegateType" position="0" attrib="0" type="System.Type" />
                  <parameter name="body" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="parameters" position="2" attrib="0" type="System.Linq.Expressions.ParameterExpression[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="LeftShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="method" position="2" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="LeftShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="LessThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="liftToNull" position="2" attrib="0" type="System.Boolean" />
                  <parameter name="method" position="3" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="LessThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="LessThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="liftToNull" position="2" attrib="0" type="System.Boolean" />
                  <parameter name="method" position="3" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="LessThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="ListBind(System.Reflection.MemberInfo, System.Linq.Expressions.ElementInit[])" attrib="150" static="true" returntype="System.Linq.Expressions.MemberListBinding">
                <parameters>
                  <parameter name="member" position="0" attrib="0" type="System.Reflection.MemberInfo" />
                  <parameter name="initializers" position="1" attrib="0" type="System.Linq.Expressions.ElementInit[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="ListBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.ElementInit])" attrib="150" static="true" returntype="System.Linq.Expressions.MemberListBinding">
                <parameters>
                  <parameter name="member" position="0" attrib="0" type="System.Reflection.MemberInfo" />
                  <parameter name="initializers" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.ElementInit]" />
                </parameters>
              </method>
              <method name="ListBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.ElementInit])" attrib="150" static="true" returntype="System.Linq.Expressions.MemberListBinding">
                <parameters>
                  <parameter name="propertyAccessor" position="0" attrib="0" type="System.Reflection.MethodInfo" />
                  <parameter name="initializers" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.ElementInit]" />
                </parameters>
              </method>
              <method name="ListBind(System.Reflection.MethodInfo, System.Linq.Expressions.ElementInit[])" attrib="150" static="true" returntype="System.Linq.Expressions.MemberListBinding">
                <parameters>
                  <parameter name="propertyAccessor" position="0" attrib="0" type="System.Reflection.MethodInfo" />
                  <parameter name="initializers" position="1" attrib="0" type="System.Linq.Expressions.ElementInit[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.ElementInit])" attrib="150" static="true" returntype="System.Linq.Expressions.ListInitExpression">
                <parameters>
                  <parameter name="newExpression" position="0" attrib="0" type="System.Linq.Expressions.NewExpression" />
                  <parameter name="initializers" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.ElementInit]" />
                </parameters>
              </method>
              <method name="ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])" attrib="150" static="true" returntype="System.Linq.Expressions.ListInitExpression">
                <parameters>
                  <parameter name="newExpression" position="0" attrib="0" type="System.Linq.Expressions.NewExpression" />
                  <parameter name="addMethod" position="1" attrib="0" type="System.Reflection.MethodInfo" />
                  <parameter name="initializers" position="2" attrib="0" type="System.Linq.Expressions.Expression[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.Expression])" attrib="150" static="true" returntype="System.Linq.Expressions.ListInitExpression">
                <parameters>
                  <parameter name="newExpression" position="0" attrib="0" type="System.Linq.Expressions.NewExpression" />
                  <parameter name="initializers" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.Expression]" />
                </parameters>
              </method>
              <method name="ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.Expression[])" attrib="150" static="true" returntype="System.Linq.Expressions.ListInitExpression">
                <parameters>
                  <parameter name="newExpression" position="0" attrib="0" type="System.Linq.Expressions.NewExpression" />
                  <parameter name="initializers" position="1" attrib="0" type="System.Linq.Expressions.Expression[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ElementInit[])" attrib="150" static="true" returntype="System.Linq.Expressions.ListInitExpression">
                <parameters>
                  <parameter name="newExpression" position="0" attrib="0" type="System.Linq.Expressions.NewExpression" />
                  <parameter name="initializers" position="1" attrib="0" type="System.Linq.Expressions.ElementInit[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.Expression])" attrib="150" static="true" returntype="System.Linq.Expressions.ListInitExpression">
                <parameters>
                  <parameter name="newExpression" position="0" attrib="0" type="System.Linq.Expressions.NewExpression" />
                  <parameter name="addMethod" position="1" attrib="0" type="System.Reflection.MethodInfo" />
                  <parameter name="initializers" position="2" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.Expression]" />
                </parameters>
              </method>
              <method name="MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="binaryType" position="0" attrib="0" type="System.Linq.Expressions.ExpressionType" />
                  <parameter name="left" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="2" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="liftToNull" position="3" attrib="0" type="System.Boolean" />
                  <parameter name="method" position="4" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="binaryType" position="0" attrib="0" type="System.Linq.Expressions.ExpressionType" />
                  <parameter name="left" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="2" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="binaryType" position="0" attrib="0" type="System.Linq.Expressions.ExpressionType" />
                  <parameter name="left" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="2" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="liftToNull" position="3" attrib="0" type="System.Boolean" />
                  <parameter name="method" position="4" attrib="0" type="System.Reflection.MethodInfo" />
                  <parameter name="conversion" position="5" attrib="0" type="System.Linq.Expressions.LambdaExpression" />
                </parameters>
              </method>
              <method name="MakeMemberAccess(System.Linq.Expressions.Expression, System.Reflection.MemberInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.MemberExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="member" position="1" attrib="0" type="System.Reflection.MemberInfo" />
                </parameters>
              </method>
              <method name="MakeUnary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Type)" attrib="150" static="true" returntype="System.Linq.Expressions.UnaryExpression">
                <parameters>
                  <parameter name="unaryType" position="0" attrib="0" type="System.Linq.Expressions.ExpressionType" />
                  <parameter name="operand" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="type" position="2" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="MakeUnary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.UnaryExpression">
                <parameters>
                  <parameter name="unaryType" position="0" attrib="0" type="System.Linq.Expressions.ExpressionType" />
                  <parameter name="operand" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="type" position="2" attrib="0" type="System.Type" />
                  <parameter name="method" position="3" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="MemberBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.MemberBinding])" attrib="150" static="true" returntype="System.Linq.Expressions.MemberMemberBinding">
                <parameters>
                  <parameter name="propertyAccessor" position="0" attrib="0" type="System.Reflection.MethodInfo" />
                  <parameter name="bindings" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.MemberBinding]" />
                </parameters>
              </method>
              <method name="MemberBind(System.Reflection.MethodInfo, System.Linq.Expressions.MemberBinding[])" attrib="150" static="true" returntype="System.Linq.Expressions.MemberMemberBinding">
                <parameters>
                  <parameter name="propertyAccessor" position="0" attrib="0" type="System.Reflection.MethodInfo" />
                  <parameter name="bindings" position="1" attrib="0" type="System.Linq.Expressions.MemberBinding[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="MemberBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.MemberBinding])" attrib="150" static="true" returntype="System.Linq.Expressions.MemberMemberBinding">
                <parameters>
                  <parameter name="member" position="0" attrib="0" type="System.Reflection.MemberInfo" />
                  <parameter name="bindings" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.MemberBinding]" />
                </parameters>
              </method>
              <method name="MemberBind(System.Reflection.MemberInfo, System.Linq.Expressions.MemberBinding[])" attrib="150" static="true" returntype="System.Linq.Expressions.MemberMemberBinding">
                <parameters>
                  <parameter name="member" position="0" attrib="0" type="System.Reflection.MemberInfo" />
                  <parameter name="bindings" position="1" attrib="0" type="System.Linq.Expressions.MemberBinding[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="MemberInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.MemberBinding])" attrib="150" static="true" returntype="System.Linq.Expressions.MemberInitExpression">
                <parameters>
                  <parameter name="newExpression" position="0" attrib="0" type="System.Linq.Expressions.NewExpression" />
                  <parameter name="bindings" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.MemberBinding]" />
                </parameters>
              </method>
              <method name="MemberInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.MemberBinding[])" attrib="150" static="true" returntype="System.Linq.Expressions.MemberInitExpression">
                <parameters>
                  <parameter name="newExpression" position="0" attrib="0" type="System.Linq.Expressions.NewExpression" />
                  <parameter name="bindings" position="1" attrib="0" type="System.Linq.Expressions.MemberBinding[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="Modulo(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="Modulo(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="method" position="2" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="Multiply(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="method" position="2" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="Multiply(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="MultiplyChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="method" position="2" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="MultiplyChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="Negate(System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.UnaryExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="Negate(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.UnaryExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="method" position="1" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="NegateChecked(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.UnaryExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="method" position="1" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="NegateChecked(System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.UnaryExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="New(System.Reflection.ConstructorInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.NewExpression">
                <parameters>
                  <parameter name="constructor" position="0" attrib="0" type="System.Reflection.ConstructorInfo" />
                </parameters>
              </method>
              <method name="New(System.Type)" attrib="150" static="true" returntype="System.Linq.Expressions.NewExpression">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.Expression], System.Reflection.MemberInfo[])" attrib="150" static="true" returntype="System.Linq.Expressions.NewExpression">
                <parameters>
                  <parameter name="constructor" position="0" attrib="0" type="System.Reflection.ConstructorInfo" />
                  <parameter name="arguments" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.Expression]" />
                  <parameter name="members" position="2" attrib="0" type="System.Reflection.MemberInfo[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="New(System.Reflection.ConstructorInfo, System.Linq.Expressions.Expression[])" attrib="150" static="true" returntype="System.Linq.Expressions.NewExpression">
                <parameters>
                  <parameter name="constructor" position="0" attrib="0" type="System.Reflection.ConstructorInfo" />
                  <parameter name="arguments" position="1" attrib="0" type="System.Linq.Expressions.Expression[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.Expression])" attrib="150" static="true" returntype="System.Linq.Expressions.NewExpression">
                <parameters>
                  <parameter name="constructor" position="0" attrib="0" type="System.Reflection.ConstructorInfo" />
                  <parameter name="arguments" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.Expression]" />
                </parameters>
              </method>
              <method name="New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.Expression], System.Collections.Generic.IEnumerable`1[System.Reflection.MemberInfo])" attrib="150" static="true" returntype="System.Linq.Expressions.NewExpression">
                <parameters>
                  <parameter name="constructor" position="0" attrib="0" type="System.Reflection.ConstructorInfo" />
                  <parameter name="arguments" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.Expression]" />
                  <parameter name="members" position="2" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Reflection.MemberInfo]" />
                </parameters>
              </method>
              <method name="NewArrayBounds(System.Type, System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.Expression])" attrib="150" static="true" returntype="System.Linq.Expressions.NewArrayExpression">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="bounds" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.Expression]" />
                </parameters>
              </method>
              <method name="NewArrayBounds(System.Type, System.Linq.Expressions.Expression[])" attrib="150" static="true" returntype="System.Linq.Expressions.NewArrayExpression">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="bounds" position="1" attrib="0" type="System.Linq.Expressions.Expression[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="NewArrayInit(System.Type, System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.Expression])" attrib="150" static="true" returntype="System.Linq.Expressions.NewArrayExpression">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="initializers" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[System.Linq.Expressions.Expression]" />
                </parameters>
              </method>
              <method name="NewArrayInit(System.Type, System.Linq.Expressions.Expression[])" attrib="150" static="true" returntype="System.Linq.Expressions.NewArrayExpression">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="initializers" position="1" attrib="0" type="System.Linq.Expressions.Expression[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="Not(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.UnaryExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="method" position="1" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="Not(System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.UnaryExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="NotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="liftToNull" position="2" attrib="0" type="System.Boolean" />
                  <parameter name="method" position="3" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="NotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="Or(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="method" position="2" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="Or(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="OrElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="method" position="2" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="OrElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="Parameter(System.Type, System.String)" attrib="150" static="true" returntype="System.Linq.Expressions.ParameterExpression">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Power(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="Power(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="method" position="2" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.MemberExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="property" position="1" attrib="0" type="System.Reflection.PropertyInfo" />
                </parameters>
              </method>
              <method name="Property(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.MemberExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="propertyAccessor" position="1" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="Property(System.Linq.Expressions.Expression, System.String)" attrib="150" static="true" returntype="System.Linq.Expressions.MemberExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="propertyName" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="PropertyOrField(System.Linq.Expressions.Expression, System.String)" attrib="150" static="true" returntype="System.Linq.Expressions.MemberExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="propertyOrFieldName" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Quote(System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.UnaryExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="RightShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="method" position="2" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="RightShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="Subtract(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="method" position="2" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="Subtract(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="SubtractChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
              <method name="SubtractChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.BinaryExpression">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="right" position="1" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="method" position="2" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
              <method name="TypeAs(System.Linq.Expressions.Expression, System.Type)" attrib="150" static="true" returntype="System.Linq.Expressions.UnaryExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="type" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="TypeIs(System.Linq.Expressions.Expression, System.Type)" attrib="150" static="true" returntype="System.Linq.Expressions.TypeBinaryExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="type" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="UnaryPlus(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Linq.Expressions.UnaryExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="method" position="1" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="UnaryPlus(System.Linq.Expressions.Expression)" attrib="150" static="true" returntype="System.Linq.Expressions.UnaryExpression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Expression`1" type="class" base="System.Linq.Expressions.LambdaExpression" sealed="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="Compile()" attrib="134" returntype="TDelegate">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="ExpressionType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <fields>
              <field name="Add" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="0" />
              <field name="AddChecked" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="1" />
              <field name="And" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="2" />
              <field name="AndAlso" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="3" />
              <field name="ArrayIndex" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="5" />
              <field name="ArrayLength" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="4" />
              <field name="Call" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="6" />
              <field name="Coalesce" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="7" />
              <field name="Conditional" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="8" />
              <field name="Constant" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="9" />
              <field name="Convert" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="10" />
              <field name="ConvertChecked" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="11" />
              <field name="Divide" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="12" />
              <field name="Equal" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="13" />
              <field name="ExclusiveOr" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="14" />
              <field name="GreaterThan" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="15" />
              <field name="GreaterThanOrEqual" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="16" />
              <field name="Invoke" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="17" />
              <field name="Lambda" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="18" />
              <field name="LeftShift" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="19" />
              <field name="LessThan" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="20" />
              <field name="LessThanOrEqual" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="21" />
              <field name="ListInit" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="22" />
              <field name="MemberAccess" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="23" />
              <field name="MemberInit" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="24" />
              <field name="Modulo" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="25" />
              <field name="Multiply" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="26" />
              <field name="MultiplyChecked" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="27" />
              <field name="Negate" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="28" />
              <field name="NegateChecked" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="30" />
              <field name="New" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="31" />
              <field name="NewArrayBounds" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="33" />
              <field name="NewArrayInit" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="32" />
              <field name="Not" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="34" />
              <field name="NotEqual" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="35" />
              <field name="Or" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="36" />
              <field name="OrElse" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="37" />
              <field name="Parameter" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="38" />
              <field name="Power" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="39" />
              <field name="Quote" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="40" />
              <field name="RightShift" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="41" />
              <field name="Subtract" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="42" />
              <field name="SubtractChecked" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="43" />
              <field name="TypeAs" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="44" />
              <field name="TypeIs" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="45" />
              <field name="UnaryPlus" attrib="32854" fieldtype="System.Linq.Expressions.ExpressionType" value="29" />
            </fields>
          </class>
          <class name="InvocationExpression" type="class" base="System.Linq.Expressions.Expression" sealed="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="Arguments" attrib="0" ptype="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression]" params="">
                <methods>
                  <method name="get_Arguments()" attrib="2182" returntype="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Expression" attrib="0" ptype="System.Linq.Expressions.Expression" params="">
                <methods>
                  <method name="get_Expression()" attrib="2182" returntype="System.Linq.Expressions.Expression">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="LambdaExpression" type="class" base="System.Linq.Expressions.Expression" charset="Ansi" layout="Auto">
            <properties>
              <property name="Body" attrib="0" ptype="System.Linq.Expressions.Expression" params="">
                <methods>
                  <method name="get_Body()" attrib="2182" returntype="System.Linq.Expressions.Expression">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Parameters" attrib="0" ptype="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.ParameterExpression]" params="">
                <methods>
                  <method name="get_Parameters()" attrib="2182" returntype="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.ParameterExpression]">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Compile()" attrib="134" returntype="System.Delegate">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="ListInitExpression" type="class" base="System.Linq.Expressions.Expression" sealed="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="Initializers" attrib="0" ptype="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.ElementInit]" params="">
                <methods>
                  <method name="get_Initializers()" attrib="2182" returntype="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.ElementInit]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NewExpression" attrib="0" ptype="System.Linq.Expressions.NewExpression" params="">
                <methods>
                  <method name="get_NewExpression()" attrib="2182" returntype="System.Linq.Expressions.NewExpression">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="MemberAssignment" type="class" base="System.Linq.Expressions.MemberBinding" sealed="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="Expression" attrib="0" ptype="System.Linq.Expressions.Expression" params="">
                <methods>
                  <method name="get_Expression()" attrib="2182" returntype="System.Linq.Expressions.Expression">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="MemberBinding" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Linq.Expressions.MemberBindingType, System.Reflection.MemberInfo)" attrib="6276">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Linq.Expressions.MemberBindingType" />
                  <parameter name="member" position="1" attrib="0" type="System.Reflection.MemberInfo" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="BindingType" attrib="0" ptype="System.Linq.Expressions.MemberBindingType" params="">
                <methods>
                  <method name="get_BindingType()" attrib="2182" returntype="System.Linq.Expressions.MemberBindingType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Member" attrib="0" ptype="System.Reflection.MemberInfo" params="">
                <methods>
                  <method name="get_Member()" attrib="2182" returntype="System.Reflection.MemberInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="MemberBindingType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <fields>
              <field name="Assignment" attrib="32854" fieldtype="System.Linq.Expressions.MemberBindingType" value="0" />
              <field name="ListBinding" attrib="32854" fieldtype="System.Linq.Expressions.MemberBindingType" value="2" />
              <field name="MemberBinding" attrib="32854" fieldtype="System.Linq.Expressions.MemberBindingType" value="1" />
            </fields>
          </class>
          <class name="MemberExpression" type="class" base="System.Linq.Expressions.Expression" sealed="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="Expression" attrib="0" ptype="System.Linq.Expressions.Expression" params="">
                <methods>
                  <method name="get_Expression()" attrib="2182" returntype="System.Linq.Expressions.Expression">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Member" attrib="0" ptype="System.Reflection.MemberInfo" params="">
                <methods>
                  <method name="get_Member()" attrib="2182" returntype="System.Reflection.MemberInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="MemberInitExpression" type="class" base="System.Linq.Expressions.Expression" sealed="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="Bindings" attrib="0" ptype="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.MemberBinding]" params="">
                <methods>
                  <method name="get_Bindings()" attrib="2182" returntype="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.MemberBinding]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NewExpression" attrib="0" ptype="System.Linq.Expressions.NewExpression" params="">
                <methods>
                  <method name="get_NewExpression()" attrib="2182" returntype="System.Linq.Expressions.NewExpression">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="MemberListBinding" type="class" base="System.Linq.Expressions.MemberBinding" sealed="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="Initializers" attrib="0" ptype="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.ElementInit]" params="">
                <methods>
                  <method name="get_Initializers()" attrib="2182" returntype="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.ElementInit]">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="MemberMemberBinding" type="class" base="System.Linq.Expressions.MemberBinding" sealed="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="Bindings" attrib="0" ptype="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.MemberBinding]" params="">
                <methods>
                  <method name="get_Bindings()" attrib="2182" returntype="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.MemberBinding]">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="MethodCallExpression" type="class" base="System.Linq.Expressions.Expression" sealed="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="Arguments" attrib="0" ptype="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression]" params="">
                <methods>
                  <method name="get_Arguments()" attrib="2182" returntype="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Method" attrib="0" ptype="System.Reflection.MethodInfo" params="">
                <methods>
                  <method name="get_Method()" attrib="2182" returntype="System.Reflection.MethodInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Object" attrib="0" ptype="System.Linq.Expressions.Expression" params="">
                <methods>
                  <method name="get_Object()" attrib="2182" returntype="System.Linq.Expressions.Expression">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="NewArrayExpression" type="class" base="System.Linq.Expressions.Expression" sealed="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="Expressions" attrib="0" ptype="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression]" params="">
                <methods>
                  <method name="get_Expressions()" attrib="2182" returntype="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression]">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="NewExpression" type="class" base="System.Linq.Expressions.Expression" sealed="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="Arguments" attrib="0" ptype="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression]" params="">
                <methods>
                  <method name="get_Arguments()" attrib="2182" returntype="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Constructor" attrib="0" ptype="System.Reflection.ConstructorInfo" params="">
                <methods>
                  <method name="get_Constructor()" attrib="2182" returntype="System.Reflection.ConstructorInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Members" attrib="0" ptype="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Reflection.MemberInfo]" params="">
                <methods>
                  <method name="get_Members()" attrib="2182" returntype="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Reflection.MemberInfo]">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="ParameterExpression" type="class" base="System.Linq.Expressions.Expression" sealed="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="TypeBinaryExpression" type="class" base="System.Linq.Expressions.Expression" sealed="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="Expression" attrib="0" ptype="System.Linq.Expressions.Expression" params="">
                <methods>
                  <method name="get_Expression()" attrib="2182" returntype="System.Linq.Expressions.Expression">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TypeOperand" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_TypeOperand()" attrib="2182" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="UnaryExpression" type="class" base="System.Linq.Expressions.Expression" sealed="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="IsLifted" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsLifted()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsLiftedToNull" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsLiftedToNull()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Method" attrib="0" ptype="System.Reflection.MethodInfo" params="">
                <methods>
                  <method name="get_Method()" attrib="2182" returntype="System.Reflection.MethodInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Operand" attrib="0" ptype="System.Linq.Expressions.Expression" params="">
                <methods>
                  <method name="get_Operand()" attrib="2182" returntype="System.Linq.Expressions.Expression">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Runtime.CompilerServices">
        <classes>
          <class name="ExecutionScope" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <fields>
              <field name="Globals" attrib="6" fieldtype="System.Object[]" />
              <field name="Locals" attrib="6" fieldtype="System.Object[]" />
              <field name="Parent" attrib="6" fieldtype="System.Runtime.CompilerServices.ExecutionScope" />
            </fields>
            <methods>
              <method name="CreateDelegate(System.Int32, System.Object[])" attrib="134" returntype="System.Delegate">
                <parameters>
                  <parameter name="indexLambda" position="0" attrib="0" type="System.Int32" />
                  <parameter name="locals" position="1" attrib="0" type="System.Object[]" />
                </parameters>
              </method>
              <method name="CreateHoistedLocals()" attrib="134" returntype="System.Object[]">
                <parameters />
              </method>
              <method name="IsolateExpression(System.Linq.Expressions.Expression, System.Object[])" attrib="134" returntype="System.Linq.Expressions.Expression">
                <parameters>
                  <parameter name="expression" position="0" attrib="0" type="System.Linq.Expressions.Expression" />
                  <parameter name="locals" position="1" attrib="0" type="System.Object[]" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="ExtensionAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="IStrongBox" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="Value" attrib="0" ptype="System.Object" params="">
                <methods>
                  <method name="get_Value()" attrib="3526" abstract="true" virtual="true" returntype="System.Object">
                    <parameters />
                  </method>
                  <method name="set_Value(System.Object)" attrib="3526" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Object" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="StrongBox`1" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Runtime.CompilerServices.IStrongBox" />
            </interfaces>
            <fields>
              <field name="Value" attrib="6" fieldtype="T" />
            </fields>
            <constructors>
              <constructor name=".ctor(T)" attrib="6278">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="T" />
                </parameters>
              </constructor>
            </constructors>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Security.Cryptography">
        <classes>
          <class name="Aes" type="class" base="System.Security.Cryptography.SymmetricAlgorithm" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="AesManaged" type="class" base="System.Security.Cryptography.Aes" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="IV" attrib="0" ptype="System.Byte[]" params="">
                <methods>
                  <method name="get_IV()" attrib="2246" virtual="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_IV(System.Byte[])" attrib="2246" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Key" attrib="0" ptype="System.Byte[]" params="">
                <methods>
                  <method name="get_Key()" attrib="2246" virtual="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_Key(System.Byte[])" attrib="2246" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="KeySize" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_KeySize()" attrib="2246" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_KeySize(System.Int32)" attrib="2246" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateDecryptor(System.Byte[], System.Byte[])" attrib="198" virtual="true" returntype="System.Security.Cryptography.ICryptoTransform">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="iv" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="CreateDecryptor()" attrib="198" virtual="true" returntype="System.Security.Cryptography.ICryptoTransform">
                <parameters />
              </method>
              <method name="CreateEncryptor(System.Byte[], System.Byte[])" attrib="198" virtual="true" returntype="System.Security.Cryptography.ICryptoTransform">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="iv" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="CreateEncryptor()" attrib="198" virtual="true" returntype="System.Security.Cryptography.ICryptoTransform">
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GenerateIV()" attrib="198" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="GenerateKey()" attrib="198" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
    </namespaces>
  </assembly>
</assemblies>