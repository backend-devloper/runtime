<?xml version="1.0"?>
<assemblies>
  <assembly name="System.Net" version="2.0.5.0">
    <attributes>
      <attribute name="System.Runtime.CompilerServices.CompilationRelaxationsAttribute" />
      <attribute name="System.Reflection.AssemblyKeyFileAttribute" />
      <attribute name="System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
        <properties>
          <property name="WrapNonExceptionThrows" value="True" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyCompanyAttribute" />
      <attribute name="System.Reflection.AssemblyDelaySignAttribute" />
      <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
      <attribute name="System.CLSCompliantAttribute" />
      <attribute name="System.Reflection.AssemblyTitleAttribute" />
      <attribute name="System.Reflection.AssemblyDescriptionAttribute" />
      <attribute name="System.Reflection.AssemblyDefaultAliasAttribute" />
      <attribute name="System.Diagnostics.DebuggableAttribute" />
      <attribute name="System.Reflection.AssemblyProductAttribute" />
      <attribute name="System.Reflection.AssemblyCopyrightAttribute" />
      <attribute name="System.Reflection.AssemblyFileVersionAttribute" />
      <attribute name="System.Reflection.AssemblyInformationalVersionAttribute" />
      <attribute name="System.Resources.SatelliteContractVersionAttribute" />
      <attribute name="System.Resources.NeutralResourcesLanguageAttribute" />
    </attributes>
    <namespaces>
      <namespace name="System.Net">
        <classes>
          <class name="DnsEndPoint" type="class" base="System.Net.EndPoint" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.String, System.Int32, System.Net.Sockets.AddressFamily)" attrib="6278">
                <parameters>
                  <parameter name="host" position="0" attrib="0" type="System.String" />
                  <parameter name="port" position="1" attrib="0" type="System.Int32" />
                  <parameter name="addressFamily" position="2" attrib="0" type="System.Net.Sockets.AddressFamily" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="host" position="0" attrib="0" type="System.String" />
                  <parameter name="port" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="AddressFamily" attrib="0" ptype="System.Net.Sockets.AddressFamily" params="">
                <methods>
                  <method name="get_AddressFamily()" attrib="2246" virtual="true" returntype="System.Net.Sockets.AddressFamily">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Host" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Host()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Port" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Port()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="comparand" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="EndPoint" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="AddressFamily" attrib="0" ptype="System.Net.Sockets.AddressFamily" params="">
                <methods>
                  <method name="get_AddressFamily()" attrib="2502" virtual="true" returntype="System.Net.Sockets.AddressFamily">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Create(System.Net.SocketAddress)" attrib="454" virtual="true" returntype="System.Net.EndPoint">
                <parameters>
                  <parameter name="socketAddress" position="0" attrib="0" type="System.Net.SocketAddress" />
                </parameters>
              </method>
              <method name="Serialize()" attrib="454" virtual="true" returntype="System.Net.SocketAddress">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="HttpRequestHeader" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <fields>
              <field name="Accept" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="20" />
              <field name="AcceptCharset" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="21" />
              <field name="AcceptEncoding" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="22" />
              <field name="AcceptLanguage" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="23" />
              <field name="Allow" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="10" />
              <field name="Authorization" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="24" />
              <field name="CacheControl" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="0" />
              <field name="Connection" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="1" />
              <field name="ContentEncoding" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="13" />
              <field name="ContentLanguage" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="14" />
              <field name="ContentLength" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="11" />
              <field name="ContentLocation" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="15" />
              <field name="ContentMd5" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="16" />
              <field name="ContentRange" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="17" />
              <field name="ContentType" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="12" />
              <field name="Cookie" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="25" />
              <field name="Date" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="2" />
              <field name="Expect" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="26" />
              <field name="Expires" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="18" />
              <field name="From" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="27" />
              <field name="Host" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="28" />
              <field name="IfMatch" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="29" />
              <field name="IfModifiedSince" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="30" />
              <field name="IfNoneMatch" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="31" />
              <field name="IfRange" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="32" />
              <field name="IfUnmodifiedSince" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="33" />
              <field name="KeepAlive" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="3" />
              <field name="LastModified" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="19" />
              <field name="MaxForwards" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="34" />
              <field name="Pragma" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="4" />
              <field name="ProxyAuthorization" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="35" />
              <field name="Range" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="37" />
              <field name="Referer" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="36" />
              <field name="Te" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="38" />
              <field name="Trailer" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="5" />
              <field name="TransferEncoding" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="6" />
              <field name="Translate" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="39" />
              <field name="Upgrade" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="7" />
              <field name="UserAgent" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="40" />
              <field name="Via" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="8" />
              <field name="Warning" attrib="32854" fieldtype="System.Net.HttpRequestHeader" value="9" />
            </fields>
          </class>
          <class name="HttpStatusCode" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <fields>
              <field name="NotFound" attrib="32854" fieldtype="System.Net.HttpStatusCode" value="404" />
              <field name="OK" attrib="32854" fieldtype="System.Net.HttpStatusCode" value="200" />
            </fields>
          </class>
          <class name="HttpWebRequest" type="class" base="System.Net.WebRequest" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="ContentType" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_ContentType()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_ContentType(System.String)" attrib="2246" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="HaveResponse" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_HaveResponse()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Headers" attrib="0" ptype="System.Net.WebHeaderCollection" params="">
                <methods>
                  <method name="get_Headers()" attrib="2246" virtual="true" returntype="System.Net.WebHeaderCollection">
                    <parameters />
                  </method>
                  <method name="set_Headers(System.Net.WebHeaderCollection)" attrib="2246" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Net.WebHeaderCollection" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Method" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Method()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Method(System.String)" attrib="2246" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="RequestUri" attrib="0" ptype="System.Uri" params="">
                <methods>
                  <method name="get_RequestUri()" attrib="2246" virtual="true" returntype="System.Uri">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Abort()" attrib="198" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="BeginGetRequestStream(System.AsyncCallback, System.Object)" attrib="198" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="callback" position="0" attrib="0" type="System.AsyncCallback" />
                  <parameter name="state" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="BeginGetResponse(System.AsyncCallback, System.Object)" attrib="198" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="callback" position="0" attrib="0" type="System.AsyncCallback" />
                  <parameter name="state" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndGetRequestStream(System.IAsyncResult)" attrib="198" virtual="true" returntype="System.IO.Stream">
                <parameters>
                  <parameter name="asyncResult" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="EndGetResponse(System.IAsyncResult)" attrib="198" virtual="true" returntype="System.Net.WebResponse">
                <parameters>
                  <parameter name="asyncResult" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="HttpWebResponse" type="class" base="System.Net.WebResponse" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Method" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Method()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="StatusCode" attrib="0" ptype="System.Net.HttpStatusCode" params="">
                <methods>
                  <method name="get_StatusCode()" attrib="3526" abstract="true" virtual="true" returntype="System.Net.HttpStatusCode">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="StatusDescription" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_StatusDescription()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="IPAddress" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <fields>
              <field name="Any" attrib="54" fieldtype="System.Net.IPAddress" />
              <field name="Broadcast" attrib="54" fieldtype="System.Net.IPAddress" />
              <field name="IPv6Any" attrib="54" fieldtype="System.Net.IPAddress" />
              <field name="IPv6Loopback" attrib="54" fieldtype="System.Net.IPAddress" />
              <field name="IPv6None" attrib="54" fieldtype="System.Net.IPAddress" />
              <field name="Loopback" attrib="54" fieldtype="System.Net.IPAddress" />
              <field name="None" attrib="54" fieldtype="System.Net.IPAddress" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="address" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte[], System.Int64)" attrib="6278">
                <parameters>
                  <parameter name="address" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="scopeid" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int64)" attrib="6278">
                <parameters>
                  <parameter name="newAddress" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Address" attrib="0" ptype="System.Int64" params="">
                <attributes>
                  <attribute name="System.ObsoleteAttribute" />
                </attributes>
                <methods>
                  <method name="get_Address()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                  <method name="set_Address(System.Int64)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int64" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="AddressFamily" attrib="0" ptype="System.Net.Sockets.AddressFamily" params="">
                <methods>
                  <method name="get_AddressFamily()" attrib="2182" returntype="System.Net.Sockets.AddressFamily">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsIPv6LinkLocal" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsIPv6LinkLocal()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsIPv6Multicast" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsIPv6Multicast()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsIPv6SiteLocal" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsIPv6SiteLocal()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ScopeId" attrib="0" ptype="System.Int64" params="">
                <methods>
                  <method name="get_ScopeId()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                  <method name="set_ScopeId(System.Int64)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int64" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="comparand" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetAddressBytes()" attrib="134" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="HostToNetworkOrder(System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="host" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="HostToNetworkOrder(System.Int16)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="host" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="HostToNetworkOrder(System.Int64)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="host" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="IsLoopback(System.Net.IPAddress)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="address" position="0" attrib="0" type="System.Net.IPAddress" />
                </parameters>
              </method>
              <method name="NetworkToHostOrder(System.Int16)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="network" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="NetworkToHostOrder(System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="network" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="NetworkToHostOrder(System.Int64)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="network" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="Parse(System.String)" attrib="150" static="true" returntype="System.Net.IPAddress">
                <parameters>
                  <parameter name="ipString" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="TryParse(System.String, out System.Net.IPAddress&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="ipString" position="0" attrib="0" type="System.String" />
                  <parameter name="address" position="1" attrib="2" type="System.Net.IPAddress&amp;" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IPEndPoint" type="class" base="System.Net.EndPoint" charset="Ansi" layout="Auto">
            <fields>
              <field name="MaxPort" attrib="32854" fieldtype="System.Int32" value="65535" />
              <field name="MinPort" attrib="32854" fieldtype="System.Int32" value="0" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Net.IPAddress, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="address" position="0" attrib="0" type="System.Net.IPAddress" />
                  <parameter name="port" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int64, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="address" position="0" attrib="0" type="System.Int64" />
                  <parameter name="port" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Address" attrib="0" ptype="System.Net.IPAddress" params="">
                <methods>
                  <method name="get_Address()" attrib="2182" returntype="System.Net.IPAddress">
                    <parameters />
                  </method>
                  <method name="set_Address(System.Net.IPAddress)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Net.IPAddress" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="AddressFamily" attrib="0" ptype="System.Net.Sockets.AddressFamily" params="">
                <methods>
                  <method name="get_AddressFamily()" attrib="2246" virtual="true" returntype="System.Net.Sockets.AddressFamily">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Port" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Port()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_Port(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Create(System.Net.SocketAddress)" attrib="198" virtual="true" returntype="System.Net.EndPoint">
                <parameters>
                  <parameter name="socketAddress" position="0" attrib="0" type="System.Net.SocketAddress" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="comparand" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Serialize()" attrib="198" virtual="true" returntype="System.Net.SocketAddress">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="IWebRequestCreate" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="Create(System.Uri)" attrib="1478" abstract="true" virtual="true" returntype="System.Net.WebRequest">
                <parameters>
                  <parameter name="uri" position="0" attrib="0" type="System.Uri" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="ProtocolViolationException" type="class" base="System.InvalidOperationException" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="SocketAddress" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Net.Sockets.AddressFamily, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="family" position="0" attrib="0" type="System.Net.Sockets.AddressFamily" />
                  <parameter name="size" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Net.Sockets.AddressFamily)" attrib="6278">
                <parameters>
                  <parameter name="family" position="0" attrib="0" type="System.Net.Sockets.AddressFamily" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Family" attrib="0" ptype="System.Net.Sockets.AddressFamily" params="">
                <methods>
                  <method name="get_Family()" attrib="2182" returntype="System.Net.Sockets.AddressFamily">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="System.Byte" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2182" returntype="System.Byte">
                    <parameters>
                      <parameter name="offset" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="set_Item(System.Int32, System.Byte)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="offset" position="0" attrib="0" type="System.Int32" />
                      <parameter name="value" position="1" attrib="0" type="System.Byte" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Size" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Size()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="comparand" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="WebException" type="class" base="System.InvalidOperationException" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.String, System.Net.WebExceptionStatus)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="status" position="1" attrib="0" type="System.Net.WebExceptionStatus" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Exception, System.Net.WebExceptionStatus, System.Net.HttpWebResponse)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                  <parameter name="status" position="2" attrib="0" type="System.Net.WebExceptionStatus" />
                  <parameter name="response" position="3" attrib="0" type="System.Net.HttpWebResponse" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Response" attrib="0" ptype="System.Net.HttpWebResponse" params="">
                <methods>
                  <method name="get_Response()" attrib="2182" returntype="System.Net.HttpWebResponse">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Status" attrib="0" ptype="System.Net.WebExceptionStatus" params="">
                <methods>
                  <method name="get_Status()" attrib="2182" returntype="System.Net.WebExceptionStatus">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="WebExceptionStatus" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <fields>
              <field name="ConnectFailure" attrib="32854" fieldtype="System.Net.WebExceptionStatus" value="2" />
              <field name="Pending" attrib="32854" fieldtype="System.Net.WebExceptionStatus" value="13" />
              <field name="RequestCanceled" attrib="32854" fieldtype="System.Net.WebExceptionStatus" value="6" />
              <field name="SendFailure" attrib="32854" fieldtype="System.Net.WebExceptionStatus" value="4" />
              <field name="Success" attrib="32854" fieldtype="System.Net.WebExceptionStatus" value="0" />
              <field name="UnknownError" attrib="32854" fieldtype="System.Net.WebExceptionStatus" value="16" />
            </fields>
          </class>
          <class name="WebHeaderCollection" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Count" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Count()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Headers" attrib="0" ptype="System.Collections.Generic.ICollection`1[System.String]" params="">
                <methods>
                  <method name="get_Headers()" attrib="2182" returntype="System.Collections.Generic.ICollection`1[System.String]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="System.String" params="System.Net.HttpRequestHeader">
                <methods>
                  <method name="get_Item(System.Net.HttpRequestHeader)" attrib="2182" returntype="System.String">
                    <parameters>
                      <parameter name="header" position="0" attrib="0" type="System.Net.HttpRequestHeader" />
                    </parameters>
                  </method>
                  <method name="set_Item(System.Net.HttpRequestHeader, System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="header" position="0" attrib="0" type="System.Net.HttpRequestHeader" />
                      <parameter name="value" position="1" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="System.String" params="System.String">
                <methods>
                  <method name="get_Item(System.String)" attrib="2182" returntype="System.String">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                  <method name="set_Item(System.String, System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                      <parameter name="value" position="1" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="WebRequest" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="ContentType" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_ContentType()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_ContentType(System.String)" attrib="3526" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Headers" attrib="0" ptype="System.Net.WebHeaderCollection" params="">
                <methods>
                  <method name="get_Headers()" attrib="3526" abstract="true" virtual="true" returntype="System.Net.WebHeaderCollection">
                    <parameters />
                  </method>
                  <method name="set_Headers(System.Net.WebHeaderCollection)" attrib="3526" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Net.WebHeaderCollection" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Method" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Method()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Method(System.String)" attrib="3526" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="RequestUri" attrib="0" ptype="System.Uri" params="">
                <methods>
                  <method name="get_RequestUri()" attrib="3526" abstract="true" virtual="true" returntype="System.Uri">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Abort()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="BeginGetRequestStream(System.AsyncCallback, System.Object)" attrib="1478" abstract="true" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="callback" position="0" attrib="0" type="System.AsyncCallback" />
                  <parameter name="state" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="BeginGetResponse(System.AsyncCallback, System.Object)" attrib="1478" abstract="true" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="callback" position="0" attrib="0" type="System.AsyncCallback" />
                  <parameter name="state" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Create(System.Uri)" attrib="150" static="true" returntype="System.Net.WebRequest">
                <parameters>
                  <parameter name="requestUri" position="0" attrib="0" type="System.Uri" />
                </parameters>
              </method>
              <method name="EndGetRequestStream(System.IAsyncResult)" attrib="1478" abstract="true" virtual="true" returntype="System.IO.Stream">
                <parameters>
                  <parameter name="asyncResult" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="EndGetResponse(System.IAsyncResult)" attrib="1478" abstract="true" virtual="true" returntype="System.Net.WebResponse">
                <parameters>
                  <parameter name="asyncResult" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="RegisterPrefix(System.String, System.Net.IWebRequestCreate)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="prefix" position="0" attrib="0" type="System.String" />
                  <parameter name="creator" position="1" attrib="0" type="System.Net.IWebRequestCreate" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="WebResponse" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="ContentLength" attrib="0" ptype="System.Int64" params="">
                <methods>
                  <method name="get_ContentLength()" attrib="3526" abstract="true" virtual="true" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ContentType" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_ContentType()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ResponseUri" attrib="0" ptype="System.Uri" params="">
                <methods>
                  <method name="get_ResponseUri()" attrib="3526" abstract="true" virtual="true" returntype="System.Uri">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Close()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="1476" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="explicitDisposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetResponseStream()" attrib="1478" abstract="true" virtual="true" returntype="System.IO.Stream">
                <parameters />
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Net.Sockets">
        <classes>
          <class name="AddressFamily" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <fields>
              <field name="InterNetwork" attrib="32854" fieldtype="System.Net.Sockets.AddressFamily" value="2" />
              <field name="InterNetworkV6" attrib="32854" fieldtype="System.Net.Sockets.AddressFamily" value="23" />
              <field name="Unknown" attrib="32854" fieldtype="System.Net.Sockets.AddressFamily" value="-1" />
              <field name="Unspecified" attrib="32854" fieldtype="System.Net.Sockets.AddressFamily" value="0" />
            </fields>
          </class>
          <class name="ProtocolType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <fields>
              <field name="Tcp" attrib="32854" fieldtype="System.Net.Sockets.ProtocolType" value="6" />
              <field name="Unknown" attrib="32854" fieldtype="System.Net.Sockets.ProtocolType" value="-1" />
              <field name="Unspecified" attrib="32854" fieldtype="System.Net.Sockets.ProtocolType" value="0" />
            </fields>
          </class>
          <class name="Socket" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Security.SecuritySafeCriticalAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Net.Sockets.AddressFamily, System.Net.Sockets.SocketType, System.Net.Sockets.ProtocolType)" attrib="6278">
                <parameters>
                  <parameter name="addressFamily" position="0" attrib="0" type="System.Net.Sockets.AddressFamily" />
                  <parameter name="socketType" position="1" attrib="0" type="System.Net.Sockets.SocketType" />
                  <parameter name="protocolType" position="2" attrib="0" type="System.Net.Sockets.ProtocolType" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="AddressFamily" attrib="0" ptype="System.Net.Sockets.AddressFamily" params="">
                <methods>
                  <method name="get_AddressFamily()" attrib="2182" returntype="System.Net.Sockets.AddressFamily">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Connected" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_Connected()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NoDelay" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_NoDelay()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_NoDelay(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="OSSupportsIPv4" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_OSSupportsIPv4()" attrib="2198" static="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OSSupportsIPv6" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_OSSupportsIPv6()" attrib="2198" static="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ProtocolType" attrib="0" ptype="System.Net.Sockets.ProtocolType" params="">
                <methods>
                  <method name="get_ProtocolType()" attrib="2182" returntype="System.Net.Sockets.ProtocolType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReceiveBufferSize" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_ReceiveBufferSize()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_ReceiveBufferSize(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="RemoteEndPoint" attrib="0" ptype="System.Net.EndPoint" params="">
                <methods>
                  <method name="get_RemoteEndPoint()" attrib="2182" returntype="System.Net.EndPoint">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SendBufferSize" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_SendBufferSize()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_SendBufferSize(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Ttl" attrib="0" ptype="System.Int16" params="">
                <methods>
                  <method name="get_Ttl()" attrib="2182" returntype="System.Int16">
                    <parameters />
                  </method>
                  <method name="set_Ttl(System.Int16)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int16" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="e" position="0" attrib="0" type="System.Net.Sockets.SocketAsyncEventArgs" />
                </parameters>
              </method>
              <method name="Close(System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="timeout" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Close()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="ConnectAsync(System.Net.Sockets.SocketType, System.Net.Sockets.ProtocolType, System.Net.Sockets.SocketAsyncEventArgs)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="socketType" position="0" attrib="0" type="System.Net.Sockets.SocketType" />
                  <parameter name="protocolType" position="1" attrib="0" type="System.Net.Sockets.ProtocolType" />
                  <parameter name="e" position="2" attrib="0" type="System.Net.Sockets.SocketAsyncEventArgs" />
                </parameters>
              </method>
              <method name="ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="e" position="0" attrib="0" type="System.Net.Sockets.SocketAsyncEventArgs" />
                </parameters>
              </method>
              <method name="Dispose(System.Boolean)" attrib="452" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Dispose()" attrib="486" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Finalize()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="e" position="0" attrib="0" type="System.Net.Sockets.SocketAsyncEventArgs" />
                </parameters>
              </method>
              <method name="SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="e" position="0" attrib="0" type="System.Net.Sockets.SocketAsyncEventArgs" />
                </parameters>
              </method>
              <method name="Shutdown(System.Net.Sockets.SocketShutdown)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="how" position="0" attrib="0" type="System.Net.Sockets.SocketShutdown" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SocketAsyncEventArgs" type="class" base="System.EventArgs" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Buffer" attrib="0" ptype="System.Byte[]" params="">
                <methods>
                  <method name="get_Buffer()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="BufferList" attrib="0" ptype="System.Collections.Generic.IList`1[System.ArraySegment`1[System.Byte]]" params="">
                <methods>
                  <method name="get_BufferList()" attrib="2182" returntype="System.Collections.Generic.IList`1[System.ArraySegment`1[System.Byte]]">
                    <parameters />
                  </method>
                  <method name="set_BufferList(System.Collections.Generic.IList`1[System.ArraySegment`1[System.Byte]])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Collections.Generic.IList`1[System.ArraySegment`1[System.Byte]]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="BytesTransferred" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_BytesTransferred()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ConnectSocket" attrib="0" ptype="System.Net.Sockets.Socket" params="">
                <methods>
                  <method name="get_ConnectSocket()" attrib="2182" returntype="System.Net.Sockets.Socket">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Count" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Count()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LastOperation" attrib="0" ptype="System.Net.Sockets.SocketAsyncOperation" params="">
                <methods>
                  <method name="get_LastOperation()" attrib="2182" returntype="System.Net.Sockets.SocketAsyncOperation">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Offset" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Offset()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="RemoteEndPoint" attrib="0" ptype="System.Net.EndPoint" params="">
                <methods>
                  <method name="get_RemoteEndPoint()" attrib="2182" returntype="System.Net.EndPoint">
                    <parameters />
                  </method>
                  <method name="set_RemoteEndPoint(System.Net.EndPoint)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Net.EndPoint" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SocketError" attrib="0" ptype="System.Net.Sockets.SocketError" params="">
                <methods>
                  <method name="get_SocketError()" attrib="2182" returntype="System.Net.Sockets.SocketError">
                    <parameters />
                  </method>
                  <method name="set_SocketError(System.Net.Sockets.SocketError)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Net.Sockets.SocketError" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="UserToken" attrib="0" ptype="System.Object" params="">
                <methods>
                  <method name="get_UserToken()" attrib="2182" returntype="System.Object">
                    <parameters />
                  </method>
                  <method name="set_UserToken(System.Object)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Object" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <events>
              <event name="Completed" attrib="0" eventtype="System.EventHandler`1[System.Net.Sockets.SocketAsyncEventArgs]" />
            </events>
            <methods>
              <method name="Dispose()" attrib="486" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Finalize()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)" attrib="452" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="e" position="0" attrib="0" type="System.Net.Sockets.SocketAsyncEventArgs" />
                </parameters>
              </method>
              <method name="SetBuffer(System.Byte[], System.Int32, System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="SetBuffer(System.Int32, System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="offset" position="0" attrib="0" type="System.Int32" />
                  <parameter name="count" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SocketAsyncOperation" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <fields>
              <field name="Connect" attrib="32854" fieldtype="System.Net.Sockets.SocketAsyncOperation" value="1" />
              <field name="None" attrib="32854" fieldtype="System.Net.Sockets.SocketAsyncOperation" value="0" />
              <field name="Receive" attrib="32854" fieldtype="System.Net.Sockets.SocketAsyncOperation" value="2" />
              <field name="Send" attrib="32854" fieldtype="System.Net.Sockets.SocketAsyncOperation" value="3" />
            </fields>
          </class>
          <class name="SocketError" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <fields>
              <field name="AccessDenied" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10013" />
              <field name="AddressAlreadyInUse" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10048" />
              <field name="AddressFamilyNotSupported" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10047" />
              <field name="AddressNotAvailable" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10049" />
              <field name="AlreadyInProgress" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10037" />
              <field name="ConnectionAborted" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10053" />
              <field name="ConnectionRefused" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10061" />
              <field name="ConnectionReset" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10054" />
              <field name="DestinationAddressRequired" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10039" />
              <field name="Disconnecting" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10101" />
              <field name="Fault" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10014" />
              <field name="HostDown" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10064" />
              <field name="HostNotFound" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="11001" />
              <field name="HostUnreachable" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10065" />
              <field name="InProgress" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10036" />
              <field name="Interrupted" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10004" />
              <field name="InvalidArgument" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10022" />
              <field name="IOPending" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="997" />
              <field name="IsConnected" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10056" />
              <field name="MessageSize" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10040" />
              <field name="NetworkDown" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10050" />
              <field name="NetworkReset" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10052" />
              <field name="NetworkUnreachable" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10051" />
              <field name="NoBufferSpaceAvailable" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10055" />
              <field name="NoData" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="11004" />
              <field name="NoRecovery" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="11003" />
              <field name="NotConnected" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10057" />
              <field name="NotInitialized" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10093" />
              <field name="NotSocket" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10038" />
              <field name="OperationAborted" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="995" />
              <field name="OperationNotSupported" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10045" />
              <field name="ProcessLimit" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10067" />
              <field name="ProtocolFamilyNotSupported" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10046" />
              <field name="ProtocolNotSupported" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10043" />
              <field name="ProtocolOption" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10042" />
              <field name="ProtocolType" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10041" />
              <field name="Shutdown" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10058" />
              <field name="SocketError" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="-1" />
              <field name="SocketNotSupported" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10044" />
              <field name="Success" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="0" />
              <field name="SystemNotReady" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10091" />
              <field name="TimedOut" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10060" />
              <field name="TooManyOpenSockets" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10024" />
              <field name="TryAgain" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="11002" />
              <field name="TypeNotFound" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10109" />
              <field name="VersionNotSupported" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10092" />
              <field name="WouldBlock" attrib="32854" fieldtype="System.Net.Sockets.SocketError" value="10035" />
            </fields>
          </class>
          <class name="SocketException" type="class" base="System.Exception" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="errorCode" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="ErrorCode" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_ErrorCode()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NativeErrorCode" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_NativeErrorCode()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SocketErrorCode" attrib="0" ptype="System.Net.Sockets.SocketError" params="">
                <methods>
                  <method name="get_SocketErrorCode()" attrib="2182" returntype="System.Net.Sockets.SocketError">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="SocketPolicyException" type="class" base="System.Exception" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="SocketSecurityState" type="class" base="System.Security.SecurityState" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Security.SecurityCriticalAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="OriginHost" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_OriginHost()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_OriginHost(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="OriginIP" attrib="0" ptype="System.Net.IPAddress" params="">
                <methods>
                  <method name="get_OriginIP()" attrib="2182" returntype="System.Net.IPAddress">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UIThreadId" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_UIThreadId()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_UIThreadId(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="EnsureState()" attrib="198" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="SocketShutdown" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <fields>
              <field name="Both" attrib="32854" fieldtype="System.Net.Sockets.SocketShutdown" value="2" />
              <field name="Receive" attrib="32854" fieldtype="System.Net.Sockets.SocketShutdown" value="0" />
              <field name="Send" attrib="32854" fieldtype="System.Net.Sockets.SocketShutdown" value="1" />
            </fields>
          </class>
          <class name="SocketType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <fields>
              <field name="Stream" attrib="32854" fieldtype="System.Net.Sockets.SocketType" value="1" />
              <field name="Unknown" attrib="32854" fieldtype="System.Net.Sockets.SocketType" value="-1" />
            </fields>
          </class>
        </classes>
      </namespace>
    </namespaces>
  </assembly>
</assemblies>