<?xml version="1.0"?>
<assemblies>
  <assembly name="mscorlib" version="2.0.5.0">
    <attributes>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AllInternalsVisible" value="False" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AllInternalsVisible" value="False" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AllInternalsVisible" value="False" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AllInternalsVisible" value="False" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AllInternalsVisible" value="False" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AllInternalsVisible" value="False" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AllInternalsVisible" value="False" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AllInternalsVisible" value="False" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AllInternalsVisible" value="False" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AllInternalsVisible" value="False" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AllInternalsVisible" value="False" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AllInternalsVisible" value="False" />
        </properties>
      </attribute>
      <attribute name="System.Diagnostics.DebuggableAttribute" />
      <attribute name="System.Runtime.CompilerServices.CompilationRelaxationsAttribute" />
      <attribute name="System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
        <properties>
          <property name="WrapNonExceptionThrows" value="True" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
      <attribute name="System.CLSCompliantAttribute" />
      <attribute name="System.Reflection.AssemblyTitleAttribute" />
      <attribute name="System.Reflection.AssemblyDescriptionAttribute" />
      <attribute name="System.Reflection.AssemblyDefaultAliasAttribute" />
      <attribute name="System.Reflection.AssemblyCompanyAttribute" />
      <attribute name="System.Reflection.AssemblyProductAttribute" />
      <attribute name="System.Reflection.AssemblyCopyrightAttribute" />
      <attribute name="System.Reflection.AssemblyFileVersionAttribute" />
      <attribute name="System.Reflection.AssemblyInformationalVersionAttribute" />
      <attribute name="System.Resources.SatelliteContractVersionAttribute" />
      <attribute name="System.Resources.NeutralResourcesLanguageAttribute" />
      <attribute name="System.Reflection.AssemblyDelaySignAttribute" />
      <attribute name="System.Reflection.AssemblyKeyFileAttribute" />
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AllInternalsVisible" value="False" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AllInternalsVisible" value="False" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AllInternalsVisible" value="False" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AllInternalsVisible" value="False" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AllInternalsVisible" value="False" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AllInternalsVisible" value="False" />
        </properties>
      </attribute>
    </attributes>
    <namespaces>
      <namespace name="Microsoft.Win32.SafeHandles">
        <classes>
          <class name="CriticalHandleMinusOneIsInvalid" type="class" base="System.Runtime.InteropServices.CriticalHandle" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Security.SecurityCriticalAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <attributes />
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="IsInvalid" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsInvalid()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="SafeHandleMinusOneIsInvalid" type="class" base="System.Runtime.InteropServices.SafeHandle" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Security.SecurityCriticalAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Boolean)" attrib="6276">
                <attributes />
                <parameters>
                  <parameter name="ownsHandle" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="IsInvalid" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsInvalid()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="SafeHandleZeroOrMinusOneIsInvalid" type="class" base="System.Runtime.InteropServices.SafeHandle" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Security.SecurityCriticalAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Boolean)" attrib="6276">
                <attributes />
                <parameters>
                  <parameter name="ownsHandle" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="IsInvalid" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsInvalid()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="SafeWaitHandle" type="class" base="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Security.SecurityCriticalAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.IntPtr, System.Boolean)" attrib="6278">
                <attributes />
                <parameters>
                  <parameter name="existingHandle" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="ownsHandle" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="ReleaseHandle()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="System">
        <classes>
          <class name="AccessViolationException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="Action`1" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(T, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="T" />
                  <parameter name="callback" position="1" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(T)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="T" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Activator" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
            </attributes>
            <interfaces />
            <methods>
              <method name="CreateInstance()" attrib="150" static="true" returntype="T">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="CreateInstance(System.Type)" attrib="150" static="true" returntype="System.Object">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="CreateInstance(System.Type, System.Object[])" attrib="150" static="true" returntype="System.Object">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="args" position="1" attrib="0" type="System.Object[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
            </methods>
          </class>
          <class name="AppDomain" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces />
            <properties>
              <property name="CurrentDomain" attrib="0" ptype="System.AppDomain" params="">
                <methods>
                  <method name="get_CurrentDomain()" attrib="2198" static="true" returntype="System.AppDomain">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DomainManager" attrib="0" ptype="System.AppDomainManager" params="">
                <methods>
                  <method name="get_DomainManager()" attrib="2182" returntype="System.AppDomainManager">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="FriendlyName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_FriendlyName()" attrib="2534" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <events>
              <event name="AssemblyResolve" attrib="0" eventtype="System.ResolveEventHandler" />
              <event name="UnhandledException" attrib="0" eventtype="System.UnhandledExceptionEventHandler" />
            </events>
            <methods>
              <method name="DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)" attrib="486" virtual="true" returntype="System.Reflection.Emit.AssemblyBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.Reflection.AssemblyName" />
                  <parameter name="access" position="1" attrib="0" type="System.Reflection.Emit.AssemblyBuilderAccess" />
                </parameters>
              </method>
              <method name="ExecuteAssemblyByName(System.String)" attrib="134" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="assemblyName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetData(System.String)" attrib="486" virtual="true" returntype="System.Object">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetType()" attrib="486" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="SetData(System.String, System.Object)" attrib="486" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="data" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
            </methods>
          </class>
          <class name="AppDomainManager" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Security.SecurityCriticalAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="CheckSecuritySettings(System.Security.SecurityState)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="state" position="0" attrib="0" type="System.Security.SecurityState" />
                </parameters>
              </method>
              <method name="InitializeNewDomain(System.AppDomainSetup)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="appDomainInfo" position="0" attrib="0" type="System.AppDomainSetup" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="AppDomainSetup" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="ApplicationBase" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_ApplicationBase()" attrib="2182" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_ApplicationBase(System.String)" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ApplicationName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_ApplicationName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_ApplicationName(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="LoaderOptimization" attrib="0" ptype="System.LoaderOptimization" params="">
                <methods>
                  <method name="get_LoaderOptimization()" attrib="2182" returntype="System.LoaderOptimization">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="AppDomainUnloadedException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="ArgumentException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="paramName" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Message" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Message()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="ArgumentNullException" type="class" base="System.ArgumentException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.String)" attrib="6278">
                <parameters>
                  <parameter name="paramName" position="0" attrib="0" type="System.String" />
                  <parameter name="message" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="paramName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
          </class>
          <class name="ArgumentOutOfRangeException" type="class" base="System.ArgumentException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.String)" attrib="6278">
                <parameters>
                  <parameter name="paramName" position="0" attrib="0" type="System.String" />
                  <parameter name="message" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="paramName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Message" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Message()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="ArithmeticException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="Array" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.Collections.IList" />
              <interface name="System.Collections.ICollection" />
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
            <properties>
              <property name="IsFixedSize" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsFixedSize()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsReadOnly" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsReadOnly()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsSynchronized" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsSynchronized()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Length" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Length()" attrib="2182" returntype="System.Int32">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Rank" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Rank()" attrib="2182" returntype="System.Int32">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SyncRoot" attrib="0" ptype="System.Object" params="">
                <methods>
                  <method name="get_SyncRoot()" attrib="2534" virtual="true" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AsReadOnly(T[])" attrib="150" static="true" returntype="System.Collections.ObjectModel.ReadOnlyCollection`1[T]">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                </parameters>
              </method>
              <method name="BinarySearch(T[], T, System.Collections.Generic.IComparer`1[T])" attrib="150" static="true" returntype="System.Int32">
                <attributes />
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                  <parameter name="value" position="1" attrib="0" type="T" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IComparer`1[T]" />
                </parameters>
              </method>
              <method name="BinarySearch(T[], System.Int32, System.Int32, T)" attrib="150" static="true" returntype="System.Int32">
                <attributes />
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="length" position="2" attrib="0" type="System.Int32" />
                  <parameter name="value" position="3" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="BinarySearch(T[], System.Int32, System.Int32, T, System.Collections.Generic.IComparer`1[T])" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="length" position="2" attrib="0" type="System.Int32" />
                  <parameter name="value" position="3" attrib="0" type="T" />
                  <parameter name="comparer" position="4" attrib="0" type="System.Collections.Generic.IComparer`1[T]" />
                </parameters>
              </method>
              <method name="BinarySearch(System.Array, System.Object)" attrib="150" static="true" returntype="System.Int32">
                <attributes />
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Array" />
                  <parameter name="value" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="BinarySearch(System.Array, System.Int32, System.Int32, System.Object, System.Collections.IComparer)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Array" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="length" position="2" attrib="0" type="System.Int32" />
                  <parameter name="value" position="3" attrib="0" type="System.Object" />
                  <parameter name="comparer" position="4" attrib="0" type="System.Collections.IComparer" />
                </parameters>
              </method>
              <method name="BinarySearch(T[], T)" attrib="150" static="true" returntype="System.Int32">
                <attributes />
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                  <parameter name="value" position="1" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="Clear(System.Array, System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Array" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="length" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Clone()" attrib="486" virtual="true" returntype="System.Object">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="Copy(System.Array, System.Array, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="sourceArray" position="0" attrib="0" type="System.Array" />
                  <parameter name="destinationArray" position="1" attrib="0" type="System.Array" />
                  <parameter name="length" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Copy(System.Array, System.Int32, System.Array, System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="sourceArray" position="0" attrib="0" type="System.Array" />
                  <parameter name="sourceIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="destinationArray" position="2" attrib="0" type="System.Array" />
                  <parameter name="destinationIndex" position="3" attrib="0" type="System.Int32" />
                  <parameter name="length" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="CopyTo(System.Array, System.Int32)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Array" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="CreateInstance(System.Type, System.Int32)" attrib="150" static="true" returntype="System.Array">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="elementType" position="0" attrib="0" type="System.Type" />
                  <parameter name="length" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="CreateInstance(System.Type, System.Int32[])" attrib="150" static="true" returntype="System.Array">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="elementType" position="0" attrib="0" type="System.Type" />
                  <parameter name="lengths" position="1" attrib="0" type="System.Int32[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="ForEach(T[], System.Action`1[T])" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                  <parameter name="action" position="1" attrib="0" type="System.Action`1[T]" />
                </parameters>
              </method>
              <method name="GetEnumerator()" attrib="486" virtual="true" returntype="System.Collections.IEnumerator">
                <parameters />
              </method>
              <method name="GetLength(System.Int32)" attrib="134" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="dimension" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetLowerBound(System.Int32)" attrib="134" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="dimension" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetUpperBound(System.Int32)" attrib="134" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="dimension" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetValue(System.Int32[])" attrib="134" returntype="System.Object">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="indices" position="0" attrib="0" type="System.Int32[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="GetValue(System.Int32)" attrib="134" returntype="System.Object">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IndexOf(T[], T, System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                  <parameter name="value" position="1" attrib="0" type="T" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="count" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IndexOf(T[], T)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                  <parameter name="value" position="1" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="IndexOf(T[], T, System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                  <parameter name="value" position="1" attrib="0" type="T" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IndexOf(System.Array, System.Object, System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Array" />
                  <parameter name="value" position="1" attrib="0" type="System.Object" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="count" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Initialize()" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="LastIndexOf(T[], T)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                  <parameter name="value" position="1" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="LastIndexOf(T[], T, System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                  <parameter name="value" position="1" attrib="0" type="T" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="LastIndexOf(T[], T, System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                  <parameter name="value" position="1" attrib="0" type="T" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="count" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="LastIndexOf(System.Array, System.Object, System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Array" />
                  <parameter name="value" position="1" attrib="0" type="System.Object" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="count" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Resize(T[]&amp;, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]&amp;" direction="ref" />
                  <parameter name="newSize" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Reverse(System.Array, System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Array" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="length" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Reverse(System.Array)" attrib="150" static="true" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Array" />
                </parameters>
              </method>
              <method name="SetValue(System.Object, System.Int32[])" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="indices" position="1" attrib="0" type="System.Int32[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="SetValue(System.Object, System.Int32)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Sort(TKey[], TValue[], System.Collections.Generic.IComparer`1[TKey])" attrib="150" static="true" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="keys" position="0" attrib="0" type="TKey[]" />
                  <parameter name="items" position="1" attrib="0" type="TValue[]" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="Sort(T[], System.Collections.Generic.IComparer`1[T])" attrib="150" static="true" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                  <parameter name="comparer" position="1" attrib="0" type="System.Collections.Generic.IComparer`1[T]" />
                </parameters>
              </method>
              <method name="Sort(TKey[], TValue[], System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="keys" position="0" attrib="0" type="TKey[]" />
                  <parameter name="items" position="1" attrib="0" type="TValue[]" />
                  <parameter name="index" position="2" attrib="0" type="System.Int32" />
                  <parameter name="length" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Sort(T[], System.Comparison`1[T])" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                  <parameter name="comparison" position="1" attrib="0" type="System.Comparison`1[T]" />
                </parameters>
              </method>
              <method name="Sort(TKey[], TValue[], System.Int32, System.Int32, System.Collections.Generic.IComparer`1[TKey])" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="keys" position="0" attrib="0" type="TKey[]" />
                  <parameter name="items" position="1" attrib="0" type="TValue[]" />
                  <parameter name="index" position="2" attrib="0" type="System.Int32" />
                  <parameter name="length" position="3" attrib="0" type="System.Int32" />
                  <parameter name="comparer" position="4" attrib="0" type="System.Collections.Generic.IComparer`1[TKey]" />
                </parameters>
              </method>
              <method name="Sort(T[], System.Int32, System.Int32, System.Collections.Generic.IComparer`1[T])" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="length" position="2" attrib="0" type="System.Int32" />
                  <parameter name="comparer" position="3" attrib="0" type="System.Collections.Generic.IComparer`1[T]" />
                </parameters>
              </method>
              <method name="Sort(T[], System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="length" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Sort(System.Array, System.Array, System.Collections.IComparer)" attrib="150" static="true" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="keys" position="0" attrib="0" type="System.Array" />
                  <parameter name="items" position="1" attrib="0" type="System.Array" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.IComparer" />
                </parameters>
              </method>
              <method name="Sort(System.Array, System.Collections.IComparer)" attrib="150" static="true" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Array" />
                  <parameter name="comparer" position="1" attrib="0" type="System.Collections.IComparer" />
                </parameters>
              </method>
              <method name="Sort(System.Array)" attrib="150" static="true" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Array" />
                </parameters>
              </method>
              <method name="Sort(System.Array, System.Int32, System.Int32, System.Collections.IComparer)" attrib="150" static="true" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Array" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="length" position="2" attrib="0" type="System.Int32" />
                  <parameter name="comparer" position="3" attrib="0" type="System.Collections.IComparer" />
                </parameters>
              </method>
              <method name="Sort(TKey[], TValue[])" attrib="150" static="true" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="keys" position="0" attrib="0" type="TKey[]" />
                  <parameter name="items" position="1" attrib="0" type="TValue[]" />
                </parameters>
              </method>
              <method name="Sort(T[])" attrib="150" static="true" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                </parameters>
              </method>
              <method name="Sort(System.Array, System.Array, System.Int32, System.Int32, System.Collections.IComparer)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="keys" position="0" attrib="0" type="System.Array" />
                  <parameter name="items" position="1" attrib="0" type="System.Array" />
                  <parameter name="index" position="2" attrib="0" type="System.Int32" />
                  <parameter name="length" position="3" attrib="0" type="System.Int32" />
                  <parameter name="comparer" position="4" attrib="0" type="System.Collections.IComparer" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="ArraySegment`1" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <constructors>
              <constructor name=".ctor(T[], System.Int32, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(T[])" attrib="6278">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Array" attrib="0" ptype="T[]" params="">
                <methods>
                  <method name="get_Array()" attrib="2182" returntype="T[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Count" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Count()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Offset" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Offset()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.ArraySegment`1[T])" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.ArraySegment`1[T]" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(System.ArraySegment`1[T], System.ArraySegment`1[T])" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.ArraySegment`1[T]" />
                  <parameter name="b" position="1" attrib="0" type="System.ArraySegment`1[T]" />
                </parameters>
              </method>
              <method name="op_Inequality(System.ArraySegment`1[T], System.ArraySegment`1[T])" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.ArraySegment`1[T]" />
                  <parameter name="b" position="1" attrib="0" type="System.ArraySegment`1[T]" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="ArrayTypeMismatchException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="AsyncCallback" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.IAsyncResult, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="ar" position="0" attrib="0" type="System.IAsyncResult" />
                  <parameter name="callback" position="1" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="ar" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Attribute" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="False" />
                  <property name="Inherited" value="True" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
            </attributes>
            <interfaces />
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean)" attrib="150" static="true" returntype="System.Attribute">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.Module" />
                  <parameter name="attributeType" position="1" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean)" attrib="150" static="true" returntype="System.Attribute">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.MemberInfo" />
                  <parameter name="attributeType" position="1" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttribute(System.Reflection.Module, System.Type)" attrib="150" static="true" returntype="System.Attribute">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.Module" />
                  <parameter name="attributeType" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean)" attrib="150" static="true" returntype="System.Attribute">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.ParameterInfo" />
                  <parameter name="attributeType" position="1" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttribute(System.Reflection.ParameterInfo, System.Type)" attrib="150" static="true" returntype="System.Attribute">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.ParameterInfo" />
                  <parameter name="attributeType" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetCustomAttribute(System.Reflection.MemberInfo, System.Type)" attrib="150" static="true" returntype="System.Attribute">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.MemberInfo" />
                  <parameter name="attributeType" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetCustomAttribute(System.Reflection.Assembly, System.Type)" attrib="150" static="true" returntype="System.Attribute">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.Assembly" />
                  <parameter name="attributeType" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean)" attrib="150" static="true" returntype="System.Attribute">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.Assembly" />
                  <parameter name="attributeType" position="1" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Reflection.Module, System.Boolean)" attrib="150" static="true" returntype="System.Attribute[]">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.Module" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Reflection.Module)" attrib="150" static="true" returntype="System.Attribute[]">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.Module" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean)" attrib="150" static="true" returntype="System.Attribute[]">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.Module" />
                  <parameter name="attributeType" position="1" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Reflection.Assembly, System.Type)" attrib="150" static="true" returntype="System.Attribute[]">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.Assembly" />
                  <parameter name="attributeType" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean)" attrib="150" static="true" returntype="System.Attribute[]">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.Assembly" />
                  <parameter name="attributeType" position="1" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Reflection.Assembly, System.Boolean)" attrib="150" static="true" returntype="System.Attribute[]">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.Assembly" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Reflection.Assembly)" attrib="150" static="true" returntype="System.Attribute[]">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.Assembly" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Reflection.Module, System.Type)" attrib="150" static="true" returntype="System.Attribute[]">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.Module" />
                  <parameter name="attributeType" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Reflection.ParameterInfo, System.Type)" attrib="150" static="true" returntype="System.Attribute[]">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.ParameterInfo" />
                  <parameter name="attributeType" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean)" attrib="150" static="true" returntype="System.Attribute[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.ParameterInfo" />
                  <parameter name="attributeType" position="1" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean)" attrib="150" static="true" returntype="System.Attribute[]">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.MemberInfo" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Reflection.ParameterInfo)" attrib="150" static="true" returntype="System.Attribute[]">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.ParameterInfo" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Reflection.MemberInfo)" attrib="150" static="true" returntype="System.Attribute[]">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.MemberInfo" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Reflection.MemberInfo, System.Type)" attrib="150" static="true" returntype="System.Attribute[]">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.MemberInfo" />
                  <parameter name="type" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean)" attrib="150" static="true" returntype="System.Attribute[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.ParameterInfo" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean)" attrib="150" static="true" returntype="System.Attribute[]">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.MemberInfo" />
                  <parameter name="type" position="1" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="IsDefined(System.Reflection.Assembly, System.Type)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.Assembly" />
                  <parameter name="attributeType" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="IsDefined(System.Reflection.Assembly, System.Type, System.Boolean)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.Assembly" />
                  <parameter name="attributeType" position="1" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="IsDefined(System.Reflection.Module, System.Type)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.Module" />
                  <parameter name="attributeType" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="IsDefined(System.Reflection.ParameterInfo, System.Type)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.ParameterInfo" />
                  <parameter name="attributeType" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.ParameterInfo" />
                  <parameter name="attributeType" position="1" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="IsDefined(System.Reflection.MemberInfo, System.Type)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.MemberInfo" />
                  <parameter name="attributeType" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.MemberInfo" />
                  <parameter name="attributeType" position="1" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="IsDefined(System.Reflection.Module, System.Type, System.Boolean)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="element" position="0" attrib="0" type="System.Reflection.Module" />
                  <parameter name="attributeType" position="1" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Match(System.Object)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="AttributeTargets" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.FlagsAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="All" attrib="32854" fieldtype="System.AttributeTargets" value="32767" />
              <field name="Assembly" attrib="32854" fieldtype="System.AttributeTargets" value="1" />
              <field name="Class" attrib="32854" fieldtype="System.AttributeTargets" value="4" />
              <field name="Constructor" attrib="32854" fieldtype="System.AttributeTargets" value="32" />
              <field name="Delegate" attrib="32854" fieldtype="System.AttributeTargets" value="4096" />
              <field name="Enum" attrib="32854" fieldtype="System.AttributeTargets" value="16" />
              <field name="Event" attrib="32854" fieldtype="System.AttributeTargets" value="512" />
              <field name="Field" attrib="32854" fieldtype="System.AttributeTargets" value="256" />
              <field name="GenericParameter" attrib="32854" fieldtype="System.AttributeTargets" value="16384" />
              <field name="Interface" attrib="32854" fieldtype="System.AttributeTargets" value="1024" />
              <field name="Method" attrib="32854" fieldtype="System.AttributeTargets" value="64" />
              <field name="Module" attrib="32854" fieldtype="System.AttributeTargets" value="2" />
              <field name="Parameter" attrib="32854" fieldtype="System.AttributeTargets" value="2048" />
              <field name="Property" attrib="32854" fieldtype="System.AttributeTargets" value="128" />
              <field name="ReturnValue" attrib="32854" fieldtype="System.AttributeTargets" value="8192" />
              <field name="Struct" attrib="32854" fieldtype="System.AttributeTargets" value="8" />
            </fields>
          </class>
          <class name="AttributeUsageAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="True" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.AttributeTargets)" attrib="6278">
                <parameters>
                  <parameter name="validOn" position="0" attrib="0" type="System.AttributeTargets" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="AllowMultiple" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_AllowMultiple()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_AllowMultiple(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Inherited" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_Inherited()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_Inherited(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ValidOn" attrib="0" ptype="System.AttributeTargets" params="">
                <methods>
                  <method name="get_ValidOn()" attrib="2182" returntype="System.AttributeTargets">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="BadImageFormatException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Message" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Message()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
            </methods>
          </class>
          <class name="BitConverter" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <fields>
              <field name="IsLittleEndian" attrib="54" fieldtype="System.Boolean" />
            </fields>
            <methods>
              <method name="GetBytes(System.UInt32)" attrib="150" static="true" returntype="System.Byte[]">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="GetBytes(System.UInt16)" attrib="150" static="true" returntype="System.Byte[]">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="GetBytes(System.UInt64)" attrib="150" static="true" returntype="System.Byte[]">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="GetBytes(System.Double)" attrib="150" static="true" returntype="System.Byte[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="GetBytes(System.Single)" attrib="150" static="true" returntype="System.Byte[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="GetBytes(System.Char)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="GetBytes(System.Boolean)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetBytes(System.Int16)" attrib="150" static="true" returntype="System.Byte[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="GetBytes(System.Int64)" attrib="150" static="true" returntype="System.Byte[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="GetBytes(System.Int32)" attrib="150" static="true" returntype="System.Byte[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToBoolean(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToChar(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Char">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToDouble(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToInt16(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Int16">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToInt32(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToInt64(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToSingle(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Single">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToString(System.Byte[])" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="ToString(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToString(System.Byte[], System.Int32, System.Int32)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="length" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToUInt16(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToUInt32(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToUInt64(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Boolean" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IComparable`1[System.Boolean]" />
              <interface name="System.IEquatable`1[System.Boolean]" />
            </interfaces>
            <fields>
              <field name="FalseString" attrib="54" fieldtype="System.String" />
              <field name="TrueString" attrib="54" fieldtype="System.String" />
            </fields>
            <methods>
              <method name="CompareTo(System.Object)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="CompareTo(System.Boolean)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Equals(System.Boolean)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetTypeCode()" attrib="486" virtual="true" returntype="System.TypeCode">
                <parameters />
              </method>
              <method name="Parse(System.String)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ToString(System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="TryParse(System.String, out System.Boolean&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="result" position="1" attrib="2" type="System.Boolean&amp;" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Buffer" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <methods>
              <method name="BlockCopy(System.Array, System.Int32, System.Array, System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="src" position="0" attrib="0" type="System.Array" />
                  <parameter name="srcOffset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="dst" position="2" attrib="0" type="System.Array" />
                  <parameter name="dstOffset" position="3" attrib="0" type="System.Int32" />
                  <parameter name="count" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ByteLength(System.Array)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Array" />
                </parameters>
              </method>
              <method name="GetByte(System.Array, System.Int32)" attrib="150" static="true" returntype="System.Byte">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Array" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="SetByte(System.Array, System.Int32, System.Byte)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Array" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="value" position="2" attrib="0" type="System.Byte" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Byte" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IFormattable" />
              <interface name="System.IConvertible" />
              <interface name="System.IComparable`1[System.Byte]" />
              <interface name="System.IEquatable`1[System.Byte]" />
            </interfaces>
            <fields>
              <field name="MaxValue" attrib="32854" fieldtype="System.Byte" value="255" />
              <field name="MinValue" attrib="32854" fieldtype="System.Byte" value="0" />
            </fields>
            <methods>
              <method name="CompareTo(System.Byte)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="CompareTo(System.Object)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Equals(System.Byte)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetTypeCode()" attrib="486" virtual="true" returntype="System.TypeCode">
                <parameters />
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles, System.IFormatProvider)" attrib="150" static="true" returntype="System.Byte">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="Parse(System.String)" attrib="150" static="true" returntype="System.Byte">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles)" attrib="150" static="true" returntype="System.Byte">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                </parameters>
              </method>
              <method name="ToString(System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.String, System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.String)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="TryParse(System.String, out System.Byte&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="result" position="1" attrib="2" type="System.Byte&amp;" direction="out" />
                </parameters>
              </method>
              <method name="TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, out System.Byte&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                  <parameter name="result" position="3" attrib="2" type="System.Byte&amp;" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="CannotUnloadAppDomainException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="Char" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IComparable`1[System.Char]" />
              <interface name="System.IEquatable`1[System.Char]" />
            </interfaces>
            <fields>
              <field name="MaxValue" attrib="32854" fieldtype="System.Char" value="&#xFFFF;" />
              <field name="MinValue" attrib="32854" fieldtype="System.Char" value="&#x0;" />
            </fields>
            <methods>
              <method name="CompareTo(System.Object)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="CompareTo(System.Char)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="Equals(System.Char)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetNumericValue(System.Char)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="GetNumericValue(System.String, System.Int32)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetTypeCode()" attrib="486" virtual="true" returntype="System.TypeCode">
                <parameters />
              </method>
              <method name="GetUnicodeCategory(System.Char)" attrib="150" static="true" returntype="System.Globalization.UnicodeCategory">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="GetUnicodeCategory(System.String, System.Int32)" attrib="150" static="true" returntype="System.Globalization.UnicodeCategory">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsControl(System.Char)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="IsControl(System.String, System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsDigit(System.String, System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsDigit(System.Char)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="IsLetter(System.String, System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsLetter(System.Char)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="IsLetterOrDigit(System.String, System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsLetterOrDigit(System.Char)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="IsLower(System.Char)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="IsLower(System.String, System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsNumber(System.String, System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsNumber(System.Char)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="IsPunctuation(System.String, System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsPunctuation(System.Char)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="IsSeparator(System.Char)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="IsSeparator(System.String, System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsSurrogate(System.String, System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsSurrogate(System.Char)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="IsSurrogatePair(System.String, System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsSurrogatePair(System.Char, System.Char)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="highSurrogate" position="0" attrib="0" type="System.Char" />
                  <parameter name="lowSurrogate" position="1" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="IsSymbol(System.Char)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="IsSymbol(System.String, System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsUpper(System.String, System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsUpper(System.Char)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="IsWhiteSpace(System.String, System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsWhiteSpace(System.Char)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="ToLower(System.Char)" attrib="150" static="true" returntype="System.Char">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="ToLower(System.Char, System.Globalization.CultureInfo)" attrib="150" static="true" returntype="System.Char">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Char" />
                  <parameter name="culture" position="1" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
              <method name="ToString(System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ToString(System.Char)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="ToUpper(System.Char, System.Globalization.CultureInfo)" attrib="150" static="true" returntype="System.Char">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Char" />
                  <parameter name="culture" position="1" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
              <method name="ToUpper(System.Char)" attrib="150" static="true" returntype="System.Char">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="TryParse(System.String, out System.Char&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="result" position="1" attrib="2" type="System.Char&amp;" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="CLSCompliantAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="False" />
                  <property name="Inherited" value="True" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="isCompliant" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="IsCompliant" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsCompliant()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="Comparison`1" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(T, T, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="T" />
                  <parameter name="y" position="1" attrib="0" type="T" />
                  <parameter name="callback" position="2" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(T, T)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="T" />
                  <parameter name="y" position="1" attrib="0" type="T" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Console" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="Error" attrib="0" ptype="System.IO.TextWriter" params="">
                <methods>
                  <method name="get_Error()" attrib="18582" static="true" returntype="System.IO.TextWriter">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="In" attrib="0" ptype="System.IO.TextReader" params="">
                <methods>
                  <method name="get_In()" attrib="18582" static="true" returntype="System.IO.TextReader">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Out" attrib="0" ptype="System.IO.TextWriter" params="">
                <methods>
                  <method name="get_Out()" attrib="18582" static="true" returntype="System.IO.TextWriter">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="ReadLine()" attrib="16534" static="true" returntype="System.String">
                <parameters />
              </method>
              <method name="SetError(System.IO.TextWriter)" attrib="16534" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="newError" position="0" attrib="0" type="System.IO.TextWriter" />
                </parameters>
              </method>
              <method name="SetIn(System.IO.TextReader)" attrib="16534" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="newIn" position="0" attrib="0" type="System.IO.TextReader" />
                </parameters>
              </method>
              <method name="SetOut(System.IO.TextWriter)" attrib="16534" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="newOut" position="0" attrib="0" type="System.IO.TextWriter" />
                </parameters>
              </method>
              <method name="Write(System.String, System.Object[])" attrib="16534" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="arg" position="1" attrib="0" type="System.Object[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="Write(System.Char)" attrib="16534" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="Write(System.String, System.Object, System.Object, System.Object)" attrib="16534" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="arg0" position="1" attrib="0" type="System.Object" />
                  <parameter name="arg1" position="2" attrib="0" type="System.Object" />
                  <parameter name="arg2" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Write(System.String, System.Object)" attrib="16534" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="arg0" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Write(System.String, System.Object, System.Object)" attrib="16534" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="arg0" position="1" attrib="0" type="System.Object" />
                  <parameter name="arg1" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Write(System.Object)" attrib="16534" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Write(System.String)" attrib="16534" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Write(System.Int32)" attrib="16534" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Write(System.Char[])" attrib="16534" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Char[]" />
                </parameters>
              </method>
              <method name="Write(System.Char[], System.Int32, System.Int32)" attrib="16534" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteLine(System.Int32)" attrib="16534" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteLine(System.Object)" attrib="16534" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="WriteLine(System.Char[])" attrib="16534" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Char[]" />
                </parameters>
              </method>
              <method name="WriteLine()" attrib="16534" static="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="WriteLine(System.Char)" attrib="16534" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="WriteLine(System.String, System.Object, System.Object, System.Object)" attrib="16534" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="arg0" position="1" attrib="0" type="System.Object" />
                  <parameter name="arg1" position="2" attrib="0" type="System.Object" />
                  <parameter name="arg2" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="WriteLine(System.String, System.Object[])" attrib="16534" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="arg" position="1" attrib="0" type="System.Object[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="WriteLine(System.String, System.Object, System.Object)" attrib="16534" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="arg0" position="1" attrib="0" type="System.Object" />
                  <parameter name="arg1" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="WriteLine(System.String)" attrib="16534" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteLine(System.String, System.Object)" attrib="16534" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="arg0" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="ContextStaticAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.ObsoleteAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="Convert" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <fields>
              <field name="DBNull" attrib="54" fieldtype="System.Object" />
            </fields>
            <methods>
              <method name="ChangeType(System.Object, System.TypeCode, System.IFormatProvider)" attrib="150" static="true" returntype="System.Object">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="typeCode" position="1" attrib="0" type="System.TypeCode" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ChangeType(System.Object, System.Type, System.IFormatProvider)" attrib="150" static="true" returntype="System.Object">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="conversionType" position="1" attrib="0" type="System.Type" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="FromBase64CharArray(System.Char[], System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Byte[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="inArray" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="length" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="FromBase64String(System.String)" attrib="150" static="true" returntype="System.Byte[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetTypeCode(System.Object)" attrib="150" static="true" returntype="System.TypeCode">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="IsDBNull(System.Object)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ToBase64CharArray(System.Byte[], System.Int32, System.Int32, System.Char[], System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="inArray" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offsetIn" position="1" attrib="0" type="System.Int32" />
                  <parameter name="length" position="2" attrib="0" type="System.Int32" />
                  <parameter name="outArray" position="3" attrib="0" type="System.Char[]" />
                  <parameter name="offsetOut" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToBase64String(System.Byte[], System.Int32, System.Int32)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="inArray" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="length" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToBase64String(System.Byte[])" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="inArray" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="ToBoolean(System.Decimal)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToBoolean(System.Boolean)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToBoolean(System.Single)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="ToBoolean(System.Double)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="ToBoolean(System.Char)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="ToBoolean(System.SByte)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="ToBoolean(System.Object, System.IFormatProvider)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToBoolean(System.Object)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ToBoolean(System.String, System.IFormatProvider)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToBoolean(System.UInt16)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="ToBoolean(System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToBoolean(System.Byte)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="ToBoolean(System.Int16)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="ToBoolean(System.UInt64)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="ToBoolean(System.String)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToBoolean(System.UInt32)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="ToBoolean(System.Int64)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="ToByte(System.Int16)" attrib="150" static="true" returntype="System.Byte">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="ToByte(System.SByte)" attrib="150" static="true" returntype="System.Byte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="ToByte(System.Int32)" attrib="150" static="true" returntype="System.Byte">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToByte(System.UInt16)" attrib="150" static="true" returntype="System.Byte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="ToByte(System.Char)" attrib="150" static="true" returntype="System.Byte">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="ToByte(System.Object, System.IFormatProvider)" attrib="150" static="true" returntype="System.Byte">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToByte(System.Object)" attrib="150" static="true" returntype="System.Byte">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ToByte(System.Byte)" attrib="150" static="true" returntype="System.Byte">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="ToByte(System.Boolean)" attrib="150" static="true" returntype="System.Byte">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToByte(System.String)" attrib="150" static="true" returntype="System.Byte">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToByte(System.Decimal)" attrib="150" static="true" returntype="System.Byte">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToByte(System.String, System.Int32)" attrib="150" static="true" returntype="System.Byte">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="fromBase" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToByte(System.String, System.IFormatProvider)" attrib="150" static="true" returntype="System.Byte">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToByte(System.Double)" attrib="150" static="true" returntype="System.Byte">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="ToByte(System.Int64)" attrib="150" static="true" returntype="System.Byte">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="ToByte(System.UInt32)" attrib="150" static="true" returntype="System.Byte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="ToByte(System.Single)" attrib="150" static="true" returntype="System.Byte">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="ToByte(System.UInt64)" attrib="150" static="true" returntype="System.Byte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="ToChar(System.UInt64)" attrib="150" static="true" returntype="System.Char">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="ToChar(System.String)" attrib="150" static="true" returntype="System.Char">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToChar(System.UInt32)" attrib="150" static="true" returntype="System.Char">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="ToChar(System.Int64)" attrib="150" static="true" returntype="System.Char">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="ToChar(System.Double)" attrib="150" static="true" returntype="System.Char">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="ToChar(System.Decimal)" attrib="150" static="true" returntype="System.Char">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToChar(System.String, System.IFormatProvider)" attrib="150" static="true" returntype="System.Char">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToChar(System.Single)" attrib="150" static="true" returntype="System.Char">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="ToChar(System.SByte)" attrib="150" static="true" returntype="System.Char">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="ToChar(System.Char)" attrib="150" static="true" returntype="System.Char">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="ToChar(System.Int16)" attrib="150" static="true" returntype="System.Char">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="ToChar(System.Byte)" attrib="150" static="true" returntype="System.Char">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="ToChar(System.UInt16)" attrib="150" static="true" returntype="System.Char">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="ToChar(System.Int32)" attrib="150" static="true" returntype="System.Char">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToChar(System.Object, System.IFormatProvider)" attrib="150" static="true" returntype="System.Char">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToChar(System.Object)" attrib="150" static="true" returntype="System.Char">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ToDateTime(System.Object, System.IFormatProvider)" attrib="150" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToDateTime(System.Object)" attrib="150" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ToDateTime(System.String, System.IFormatProvider)" attrib="150" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToDateTime(System.String)" attrib="150" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToDecimal(System.String)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToDecimal(System.String, System.IFormatProvider)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToDecimal(System.Single)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="ToDecimal(System.Double)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="ToDecimal(System.Object)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ToDecimal(System.Byte)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="ToDecimal(System.Char)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="ToDecimal(System.Object, System.IFormatProvider)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToDecimal(System.SByte)" attrib="150" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="ToDecimal(System.Decimal)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToDecimal(System.Boolean)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToDecimal(System.UInt16)" attrib="150" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="ToDecimal(System.Int16)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="ToDecimal(System.Int32)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToDecimal(System.Int64)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="ToDecimal(System.UInt64)" attrib="150" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="ToDecimal(System.DateTime)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="ToDecimal(System.UInt32)" attrib="150" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="ToDouble(System.Boolean)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToDouble(System.Double)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="ToDouble(System.Single)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="ToDouble(System.UInt64)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="ToDouble(System.String, System.IFormatProvider)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToDouble(System.String)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToDouble(System.Decimal)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToDouble(System.Byte)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="ToDouble(System.Int16)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="ToDouble(System.SByte)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="ToDouble(System.Object)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ToDouble(System.Object, System.IFormatProvider)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToDouble(System.UInt32)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="ToDouble(System.Int64)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="ToDouble(System.Int32)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToDouble(System.Char)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="ToDouble(System.UInt16)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="ToInt16(System.String, System.Int32)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="fromBase" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToInt16(System.Byte)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="ToInt16(System.SByte)" attrib="150" static="true" returntype="System.Int16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="ToInt16(System.Int32)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToInt16(System.UInt16)" attrib="150" static="true" returntype="System.Int16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="ToInt16(System.Object, System.IFormatProvider)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToInt16(System.Object)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ToInt16(System.Char)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="ToInt16(System.Boolean)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToInt16(System.UInt32)" attrib="150" static="true" returntype="System.Int16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="ToInt16(System.Decimal)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToInt16(System.Double)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="ToInt16(System.String, System.IFormatProvider)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToInt16(System.String)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToInt16(System.Single)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="ToInt16(System.Int64)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="ToInt16(System.Int16)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="ToInt16(System.UInt64)" attrib="150" static="true" returntype="System.Int16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="ToInt32(System.String)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToInt32(System.String, System.IFormatProvider)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToInt32(System.String, System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="fromBase" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToInt32(System.Object, System.IFormatProvider)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToInt32(System.Boolean)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToInt32(System.Char)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="ToInt32(System.Object)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ToInt32(System.Byte)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="ToInt32(System.Int16)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="ToInt32(System.UInt16)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="ToInt32(System.SByte)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="ToInt32(System.Single)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="ToInt32(System.Double)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="ToInt32(System.Decimal)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToInt32(System.UInt64)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="ToInt32(System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToInt32(System.UInt32)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="ToInt32(System.Int64)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="ToInt64(System.UInt64)" attrib="150" static="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="ToInt64(System.Int64)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="ToInt64(System.UInt16)" attrib="150" static="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="ToInt64(System.Int32)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToInt64(System.UInt32)" attrib="150" static="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="ToInt64(System.String)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToInt64(System.String, System.IFormatProvider)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToInt64(System.Decimal)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToInt64(System.Single)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="ToInt64(System.Double)" attrib="150" static="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="ToInt64(System.Int16)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="ToInt64(System.Object, System.IFormatProvider)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToInt64(System.Object)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ToInt64(System.String, System.Int32)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="fromBase" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToInt64(System.Boolean)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToInt64(System.Byte)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="ToInt64(System.SByte)" attrib="150" static="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="ToInt64(System.Char)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="ToSByte(System.String, System.IFormatProvider)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToSByte(System.String)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToSByte(System.Double)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="ToSByte(System.Decimal)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToSByte(System.Object, System.IFormatProvider)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToSByte(System.Object)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ToSByte(System.SByte)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="ToSByte(System.Boolean)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToSByte(System.Single)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="ToSByte(System.Byte)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="ToSByte(System.Char)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="ToSByte(System.Int16)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="ToSByte(System.String, System.Int32)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="fromBase" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToSByte(System.UInt16)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="ToSByte(System.Int64)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="ToSByte(System.UInt64)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="ToSByte(System.Int32)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToSByte(System.UInt32)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="ToSingle(System.UInt64)" attrib="150" static="true" returntype="System.Single">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="ToSingle(System.Single)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="ToSingle(System.UInt32)" attrib="150" static="true" returntype="System.Single">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="ToSingle(System.Int64)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="ToSingle(System.Double)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="ToSingle(System.String, System.IFormatProvider)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToSingle(System.Boolean)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToSingle(System.Decimal)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToSingle(System.String)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToSingle(System.Int32)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToSingle(System.SByte)" attrib="150" static="true" returntype="System.Single">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="ToSingle(System.Object, System.IFormatProvider)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToSingle(System.Object)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ToSingle(System.Byte)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="ToSingle(System.UInt16)" attrib="150" static="true" returntype="System.Single">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="ToSingle(System.Int16)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="ToSingle(System.Char)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="ToString(System.Byte, System.Int32)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                  <parameter name="toBase" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToString(System.Int16, System.Int32)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                  <parameter name="toBase" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToString(System.UInt64)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="ToString(System.Int64, System.IFormatProvider)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.Object)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ToString(System.Object, System.IFormatProvider)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.Int32, System.Int32)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="toBase" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToString(System.Int64, System.Int32)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                  <parameter name="toBase" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToString(System.UInt64, System.IFormatProvider)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.Decimal, System.IFormatProvider)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.Decimal)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToString(System.DateTime, System.IFormatProvider)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.DateTime)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="ToString(System.Single, System.IFormatProvider)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.Single)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="ToString(System.Double, System.IFormatProvider)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.Double)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="ToString(System.Int64)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="ToString(System.UInt32, System.IFormatProvider)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.Int16)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="ToString(System.Int16, System.IFormatProvider)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.UInt32)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="ToString(System.UInt16, System.IFormatProvider)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt16" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.UInt16)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="ToString(System.Int32, System.IFormatProvider)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.Int32)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToString(System.Char)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="ToString(System.Char, System.IFormatProvider)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.Boolean)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToString(System.Boolean, System.IFormatProvider)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.SByte)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="ToString(System.Byte)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="ToString(System.Byte, System.IFormatProvider)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.SByte, System.IFormatProvider)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToUInt16(System.String, System.Int32)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="fromBase" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToUInt16(System.Int64)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="ToUInt16(System.UInt64)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="ToUInt16(System.UInt16)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="ToUInt16(System.UInt32)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="ToUInt16(System.Single)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="ToUInt16(System.String)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToUInt16(System.String, System.IFormatProvider)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToUInt16(System.Double)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="ToUInt16(System.Decimal)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToUInt16(System.Boolean)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToUInt16(System.Char)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="ToUInt16(System.Object)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ToUInt16(System.Object, System.IFormatProvider)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToUInt16(System.Int16)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="ToUInt16(System.Int32)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToUInt16(System.SByte)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="ToUInt16(System.Byte)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="ToUInt32(System.String, System.Int32)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="fromBase" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToUInt32(System.UInt64)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="ToUInt32(System.Single)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="ToUInt32(System.UInt32)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="ToUInt32(System.Int64)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="ToUInt32(System.String)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToUInt32(System.String, System.IFormatProvider)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToUInt32(System.Double)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="ToUInt32(System.Decimal)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToUInt32(System.Int32)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToUInt32(System.Boolean)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToUInt32(System.Char)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="ToUInt32(System.Object)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ToUInt32(System.Object, System.IFormatProvider)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToUInt32(System.Int16)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="ToUInt32(System.UInt16)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="ToUInt32(System.SByte)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="ToUInt32(System.Byte)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="ToUInt64(System.Int64)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="ToUInt64(System.UInt64)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="ToUInt64(System.Int32)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToUInt64(System.UInt32)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="ToUInt64(System.Single)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="ToUInt64(System.String)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToUInt64(System.String, System.IFormatProvider)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToUInt64(System.Double)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="ToUInt64(System.Decimal)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToUInt64(System.Boolean)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToUInt64(System.Char)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="ToUInt64(System.Object)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ToUInt64(System.Object, System.IFormatProvider)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToUInt64(System.SByte)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="ToUInt64(System.UInt16)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="ToUInt64(System.String, System.Int32)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="fromBase" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToUInt64(System.Byte)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="ToUInt64(System.Int16)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Converter`2" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(TInput, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="TInput" />
                  <parameter name="callback" position="1" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="TOutput">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(TInput)" attrib="454" virtual="true" returntype="TOutput">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="TInput" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="DataMisalignedException" type="class" base="System.SystemException" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
          </class>
          <class name="DateTime" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IFormattable" />
              <interface name="System.IConvertible" />
              <interface name="System.IComparable`1[System.DateTime]" />
              <interface name="System.IEquatable`1[System.DateTime]" />
            </interfaces>
            <fields>
              <field name="MaxValue" attrib="54" fieldtype="System.DateTime" />
              <field name="MinValue" attrib="54" fieldtype="System.DateTime" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="hour" position="3" attrib="0" type="System.Int32" />
                  <parameter name="minute" position="4" attrib="0" type="System.Int32" />
                  <parameter name="second" position="5" attrib="0" type="System.Int32" />
                  <parameter name="millisecond" position="6" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Globalization.Calendar)" attrib="6278">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="hour" position="3" attrib="0" type="System.Int32" />
                  <parameter name="minute" position="4" attrib="0" type="System.Int32" />
                  <parameter name="second" position="5" attrib="0" type="System.Int32" />
                  <parameter name="calendar" position="6" attrib="0" type="System.Globalization.Calendar" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.DateTimeKind)" attrib="6278">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="hour" position="3" attrib="0" type="System.Int32" />
                  <parameter name="minute" position="4" attrib="0" type="System.Int32" />
                  <parameter name="second" position="5" attrib="0" type="System.Int32" />
                  <parameter name="millisecond" position="6" attrib="0" type="System.Int32" />
                  <parameter name="kind" position="7" attrib="0" type="System.DateTimeKind" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Globalization.Calendar, System.DateTimeKind)" attrib="6278">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="hour" position="3" attrib="0" type="System.Int32" />
                  <parameter name="minute" position="4" attrib="0" type="System.Int32" />
                  <parameter name="second" position="5" attrib="0" type="System.Int32" />
                  <parameter name="millisecond" position="6" attrib="0" type="System.Int32" />
                  <parameter name="calendar" position="7" attrib="0" type="System.Globalization.Calendar" />
                  <parameter name="kind" position="8" attrib="0" type="System.DateTimeKind" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Globalization.Calendar)" attrib="6278">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="hour" position="3" attrib="0" type="System.Int32" />
                  <parameter name="minute" position="4" attrib="0" type="System.Int32" />
                  <parameter name="second" position="5" attrib="0" type="System.Int32" />
                  <parameter name="millisecond" position="6" attrib="0" type="System.Int32" />
                  <parameter name="calendar" position="7" attrib="0" type="System.Globalization.Calendar" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.DateTimeKind)" attrib="6278">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="hour" position="3" attrib="0" type="System.Int32" />
                  <parameter name="minute" position="4" attrib="0" type="System.Int32" />
                  <parameter name="second" position="5" attrib="0" type="System.Int32" />
                  <parameter name="kind" position="6" attrib="0" type="System.DateTimeKind" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int64, System.DateTimeKind)" attrib="6278">
                <parameters>
                  <parameter name="ticks" position="0" attrib="0" type="System.Int64" />
                  <parameter name="kind" position="1" attrib="0" type="System.DateTimeKind" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int64)" attrib="6278">
                <parameters>
                  <parameter name="ticks" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32, System.Int32, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="hour" position="3" attrib="0" type="System.Int32" />
                  <parameter name="minute" position="4" attrib="0" type="System.Int32" />
                  <parameter name="second" position="5" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32, System.Int32, System.Int32, System.Globalization.Calendar)" attrib="6278">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="calendar" position="3" attrib="0" type="System.Globalization.Calendar" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Date" attrib="0" ptype="System.DateTime" params="">
                <methods>
                  <method name="get_Date()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Day" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Day()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DayOfWeek" attrib="0" ptype="System.DayOfWeek" params="">
                <methods>
                  <method name="get_DayOfWeek()" attrib="2182" returntype="System.DayOfWeek">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DayOfYear" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_DayOfYear()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Hour" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Hour()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Kind" attrib="0" ptype="System.DateTimeKind" params="">
                <methods>
                  <method name="get_Kind()" attrib="2182" returntype="System.DateTimeKind">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Millisecond" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Millisecond()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Minute" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Minute()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Month" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Month()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Now" attrib="0" ptype="System.DateTime" params="">
                <methods>
                  <method name="get_Now()" attrib="2198" static="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Second" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Second()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Ticks" attrib="0" ptype="System.Int64" params="">
                <methods>
                  <method name="get_Ticks()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TimeOfDay" attrib="0" ptype="System.TimeSpan" params="">
                <methods>
                  <method name="get_TimeOfDay()" attrib="2182" returntype="System.TimeSpan">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Today" attrib="0" ptype="System.DateTime" params="">
                <methods>
                  <method name="get_Today()" attrib="2198" static="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UtcNow" attrib="0" ptype="System.DateTime" params="">
                <methods>
                  <method name="get_UtcNow()" attrib="2198" static="true" returntype="System.DateTime">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Year" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Year()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(System.TimeSpan)" attrib="134" returntype="System.DateTime">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="AddDays(System.Double)" attrib="134" returntype="System.DateTime">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="AddHours(System.Double)" attrib="134" returntype="System.DateTime">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="AddMilliseconds(System.Double)" attrib="134" returntype="System.DateTime">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="AddMinutes(System.Double)" attrib="134" returntype="System.DateTime">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="AddMonths(System.Int32)" attrib="134" returntype="System.DateTime">
                <parameters>
                  <parameter name="months" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="AddSeconds(System.Double)" attrib="134" returntype="System.DateTime">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="AddTicks(System.Int64)" attrib="134" returntype="System.DateTime">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="AddYears(System.Int32)" attrib="134" returntype="System.DateTime">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Compare(System.DateTime, System.DateTime)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="t1" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="t2" position="1" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="CompareTo(System.DateTime)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="CompareTo(System.Object)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="DaysInMonth(System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Equals(System.DateTime, System.DateTime)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="t1" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="t2" position="1" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="Equals(System.DateTime)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="FromFileTime(System.Int64)" attrib="150" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="fileTime" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="FromFileTimeUtc(System.Int64)" attrib="150" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="fileTime" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="FromOADate(System.Double)" attrib="150" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetTypeCode()" attrib="486" virtual="true" returntype="System.TypeCode">
                <parameters />
              </method>
              <method name="IsDaylightSavingTime()" attrib="134" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsLeapYear(System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="op_Addition(System.DateTime, System.TimeSpan)" attrib="2198" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="t" position="1" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="op_Equality(System.DateTime, System.DateTime)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="d2" position="1" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="op_GreaterThan(System.DateTime, System.DateTime)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="t1" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="t2" position="1" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="op_GreaterThanOrEqual(System.DateTime, System.DateTime)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="t1" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="t2" position="1" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="op_Inequality(System.DateTime, System.DateTime)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="d2" position="1" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="op_LessThan(System.DateTime, System.DateTime)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="t1" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="t2" position="1" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="op_LessThanOrEqual(System.DateTime, System.DateTime)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="t1" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="t2" position="1" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="op_Subtraction(System.DateTime, System.TimeSpan)" attrib="2198" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="t" position="1" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="op_Subtraction(System.DateTime, System.DateTime)" attrib="2198" static="true" returntype="System.TimeSpan">
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="d2" position="1" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="Parse(System.String)" attrib="150" static="true" returntype="System.DateTime">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.IFormatProvider, System.Globalization.DateTimeStyles)" attrib="150" static="true" returntype="System.DateTime">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                  <parameter name="styles" position="2" attrib="0" type="System.Globalization.DateTimeStyles" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.IFormatProvider)" attrib="150" static="true" returntype="System.DateTime">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ParseExact(System.String, System.String, System.IFormatProvider, System.Globalization.DateTimeStyles)" attrib="150" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="format" position="1" attrib="0" type="System.String" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                  <parameter name="style" position="3" attrib="0" type="System.Globalization.DateTimeStyles" />
                </parameters>
              </method>
              <method name="ParseExact(System.String, System.String[], System.IFormatProvider, System.Globalization.DateTimeStyles)" attrib="150" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="formats" position="1" attrib="0" type="System.String[]" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                  <parameter name="style" position="3" attrib="0" type="System.Globalization.DateTimeStyles" />
                </parameters>
              </method>
              <method name="ParseExact(System.String, System.String, System.IFormatProvider)" attrib="150" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="format" position="1" attrib="0" type="System.String" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="SpecifyKind(System.DateTime, System.DateTimeKind)" attrib="150" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="kind" position="1" attrib="0" type="System.DateTimeKind" />
                </parameters>
              </method>
              <method name="Subtract(System.TimeSpan)" attrib="134" returntype="System.DateTime">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="Subtract(System.DateTime)" attrib="134" returntype="System.TimeSpan">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="ToFileTime()" attrib="134" returntype="System.Int64">
                <parameters />
              </method>
              <method name="ToFileTimeUtc()" attrib="134" returntype="System.Int64">
                <parameters />
              </method>
              <method name="ToLocalTime()" attrib="134" returntype="System.DateTime">
                <parameters />
              </method>
              <method name="ToLongDateString()" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToLongTimeString()" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToOADate()" attrib="134" returntype="System.Double">
                <parameters />
              </method>
              <method name="ToShortDateString()" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToShortTimeString()" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToString(System.String)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString(System.String, System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToUniversalTime()" attrib="134" returntype="System.DateTime">
                <parameters />
              </method>
              <method name="TryParse(System.String, out System.DateTime&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="result" position="1" attrib="2" type="System.DateTime&amp;" direction="out" />
                </parameters>
              </method>
              <method name="TryParse(System.String, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                  <parameter name="styles" position="2" attrib="0" type="System.Globalization.DateTimeStyles" />
                  <parameter name="result" position="3" attrib="2" type="System.DateTime&amp;" direction="out" />
                </parameters>
              </method>
              <method name="TryParseExact(System.String, System.String, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="format" position="1" attrib="0" type="System.String" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                  <parameter name="style" position="3" attrib="0" type="System.Globalization.DateTimeStyles" />
                  <parameter name="result" position="4" attrib="2" type="System.DateTime&amp;" direction="out" />
                </parameters>
              </method>
              <method name="TryParseExact(System.String, System.String[], System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="formats" position="1" attrib="0" type="System.String[]" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                  <parameter name="style" position="3" attrib="0" type="System.Globalization.DateTimeStyles" />
                  <parameter name="result" position="4" attrib="2" type="System.DateTime&amp;" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="DateTimeKind" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Local" attrib="32854" fieldtype="System.DateTimeKind" value="2" />
              <field name="Unspecified" attrib="32854" fieldtype="System.DateTimeKind" value="0" />
              <field name="Utc" attrib="32854" fieldtype="System.DateTimeKind" value="1" />
            </fields>
          </class>
          <class name="DateTimeOffset" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IFormattable" />
              <interface name="System.IComparable`1[System.DateTimeOffset]" />
              <interface name="System.IEquatable`1[System.DateTimeOffset]" />
            </interfaces>
            <fields>
              <field name="MaxValue" attrib="54" fieldtype="System.DateTimeOffset" />
              <field name="MinValue" attrib="54" fieldtype="System.DateTimeOffset" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.TimeSpan)" attrib="6278">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="hour" position="3" attrib="0" type="System.Int32" />
                  <parameter name="minute" position="4" attrib="0" type="System.Int32" />
                  <parameter name="second" position="5" attrib="0" type="System.Int32" />
                  <parameter name="offset" position="6" attrib="0" type="System.TimeSpan" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.TimeSpan)" attrib="6278">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="hour" position="3" attrib="0" type="System.Int32" />
                  <parameter name="minute" position="4" attrib="0" type="System.Int32" />
                  <parameter name="second" position="5" attrib="0" type="System.Int32" />
                  <parameter name="millisecond" position="6" attrib="0" type="System.Int32" />
                  <parameter name="offset" position="7" attrib="0" type="System.TimeSpan" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Globalization.Calendar, System.TimeSpan)" attrib="6278">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="hour" position="3" attrib="0" type="System.Int32" />
                  <parameter name="minute" position="4" attrib="0" type="System.Int32" />
                  <parameter name="second" position="5" attrib="0" type="System.Int32" />
                  <parameter name="millisecond" position="6" attrib="0" type="System.Int32" />
                  <parameter name="calendar" position="7" attrib="0" type="System.Globalization.Calendar" />
                  <parameter name="offset" position="8" attrib="0" type="System.TimeSpan" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int64, System.TimeSpan)" attrib="6278">
                <parameters>
                  <parameter name="ticks" position="0" attrib="0" type="System.Int64" />
                  <parameter name="offset" position="1" attrib="0" type="System.TimeSpan" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.DateTime)" attrib="6278">
                <parameters>
                  <parameter name="dateTime" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.DateTime, System.TimeSpan)" attrib="6278">
                <parameters>
                  <parameter name="dateTime" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="offset" position="1" attrib="0" type="System.TimeSpan" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Date" attrib="0" ptype="System.DateTime" params="">
                <methods>
                  <method name="get_Date()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DateTime" attrib="0" ptype="System.DateTime" params="">
                <methods>
                  <method name="get_DateTime()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Day" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Day()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DayOfWeek" attrib="0" ptype="System.DayOfWeek" params="">
                <methods>
                  <method name="get_DayOfWeek()" attrib="2182" returntype="System.DayOfWeek">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DayOfYear" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_DayOfYear()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Hour" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Hour()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LocalDateTime" attrib="0" ptype="System.DateTime" params="">
                <methods>
                  <method name="get_LocalDateTime()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Millisecond" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Millisecond()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Minute" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Minute()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Month" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Month()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Now" attrib="0" ptype="System.DateTimeOffset" params="">
                <methods>
                  <method name="get_Now()" attrib="2198" static="true" returntype="System.DateTimeOffset">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Offset" attrib="0" ptype="System.TimeSpan" params="">
                <methods>
                  <method name="get_Offset()" attrib="2182" returntype="System.TimeSpan">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Second" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Second()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Ticks" attrib="0" ptype="System.Int64" params="">
                <methods>
                  <method name="get_Ticks()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TimeOfDay" attrib="0" ptype="System.TimeSpan" params="">
                <methods>
                  <method name="get_TimeOfDay()" attrib="2182" returntype="System.TimeSpan">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UtcDateTime" attrib="0" ptype="System.DateTime" params="">
                <methods>
                  <method name="get_UtcDateTime()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UtcNow" attrib="0" ptype="System.DateTimeOffset" params="">
                <methods>
                  <method name="get_UtcNow()" attrib="2198" static="true" returntype="System.DateTimeOffset">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UtcTicks" attrib="0" ptype="System.Int64" params="">
                <methods>
                  <method name="get_UtcTicks()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Year" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Year()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(System.TimeSpan)" attrib="134" returntype="System.DateTimeOffset">
                <parameters>
                  <parameter name="timeSpan" position="0" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="AddDays(System.Double)" attrib="134" returntype="System.DateTimeOffset">
                <parameters>
                  <parameter name="days" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="AddHours(System.Double)" attrib="134" returntype="System.DateTimeOffset">
                <parameters>
                  <parameter name="hours" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="AddMilliseconds(System.Double)" attrib="134" returntype="System.DateTimeOffset">
                <parameters>
                  <parameter name="milliseconds" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="AddMinutes(System.Double)" attrib="134" returntype="System.DateTimeOffset">
                <parameters>
                  <parameter name="minutes" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="AddMonths(System.Int32)" attrib="134" returntype="System.DateTimeOffset">
                <parameters>
                  <parameter name="months" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="AddSeconds(System.Double)" attrib="134" returntype="System.DateTimeOffset">
                <parameters>
                  <parameter name="seconds" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="AddTicks(System.Int64)" attrib="134" returntype="System.DateTimeOffset">
                <parameters>
                  <parameter name="ticks" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="AddYears(System.Int32)" attrib="134" returntype="System.DateTimeOffset">
                <parameters>
                  <parameter name="years" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Compare(System.DateTimeOffset, System.DateTimeOffset)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="first" position="0" attrib="0" type="System.DateTimeOffset" />
                  <parameter name="second" position="1" attrib="0" type="System.DateTimeOffset" />
                </parameters>
              </method>
              <method name="CompareTo(System.DateTimeOffset)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="System.DateTimeOffset" />
                </parameters>
              </method>
              <method name="Equals(System.DateTimeOffset)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="System.DateTimeOffset" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Equals(System.DateTimeOffset, System.DateTimeOffset)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="first" position="0" attrib="0" type="System.DateTimeOffset" />
                  <parameter name="second" position="1" attrib="0" type="System.DateTimeOffset" />
                </parameters>
              </method>
              <method name="EqualsExact(System.DateTimeOffset)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="System.DateTimeOffset" />
                </parameters>
              </method>
              <method name="FromFileTime(System.Int64)" attrib="150" static="true" returntype="System.DateTimeOffset">
                <parameters>
                  <parameter name="fileTime" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Addition(System.DateTimeOffset, System.TimeSpan)" attrib="2198" static="true" returntype="System.DateTimeOffset">
                <parameters>
                  <parameter name="dateTimeOffset" position="0" attrib="0" type="System.DateTimeOffset" />
                  <parameter name="timeSpan" position="1" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="op_Equality(System.DateTimeOffset, System.DateTimeOffset)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.DateTimeOffset" />
                  <parameter name="right" position="1" attrib="0" type="System.DateTimeOffset" />
                </parameters>
              </method>
              <method name="op_GreaterThan(System.DateTimeOffset, System.DateTimeOffset)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.DateTimeOffset" />
                  <parameter name="right" position="1" attrib="0" type="System.DateTimeOffset" />
                </parameters>
              </method>
              <method name="op_GreaterThanOrEqual(System.DateTimeOffset, System.DateTimeOffset)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.DateTimeOffset" />
                  <parameter name="right" position="1" attrib="0" type="System.DateTimeOffset" />
                </parameters>
              </method>
              <method name="op_Implicit(System.DateTime)" attrib="2198" static="true" returntype="System.DateTimeOffset">
                <parameters>
                  <parameter name="dateTime" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="op_Inequality(System.DateTimeOffset, System.DateTimeOffset)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.DateTimeOffset" />
                  <parameter name="right" position="1" attrib="0" type="System.DateTimeOffset" />
                </parameters>
              </method>
              <method name="op_LessThan(System.DateTimeOffset, System.DateTimeOffset)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.DateTimeOffset" />
                  <parameter name="right" position="1" attrib="0" type="System.DateTimeOffset" />
                </parameters>
              </method>
              <method name="op_LessThanOrEqual(System.DateTimeOffset, System.DateTimeOffset)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.DateTimeOffset" />
                  <parameter name="right" position="1" attrib="0" type="System.DateTimeOffset" />
                </parameters>
              </method>
              <method name="op_Subtraction(System.DateTimeOffset, System.TimeSpan)" attrib="2198" static="true" returntype="System.DateTimeOffset">
                <parameters>
                  <parameter name="dateTimeOffset" position="0" attrib="0" type="System.DateTimeOffset" />
                  <parameter name="timeSpan" position="1" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="op_Subtraction(System.DateTimeOffset, System.DateTimeOffset)" attrib="2198" static="true" returntype="System.TimeSpan">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.DateTimeOffset" />
                  <parameter name="right" position="1" attrib="0" type="System.DateTimeOffset" />
                </parameters>
              </method>
              <method name="Parse(System.String)" attrib="150" static="true" returntype="System.DateTimeOffset">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.IFormatProvider)" attrib="150" static="true" returntype="System.DateTimeOffset">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.String" />
                  <parameter name="formatProvider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.IFormatProvider, System.Globalization.DateTimeStyles)" attrib="150" static="true" returntype="System.DateTimeOffset">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.String" />
                  <parameter name="formatProvider" position="1" attrib="0" type="System.IFormatProvider" />
                  <parameter name="styles" position="2" attrib="0" type="System.Globalization.DateTimeStyles" />
                </parameters>
              </method>
              <method name="ParseExact(System.String, System.String, System.IFormatProvider, System.Globalization.DateTimeStyles)" attrib="150" static="true" returntype="System.DateTimeOffset">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.String" />
                  <parameter name="format" position="1" attrib="0" type="System.String" />
                  <parameter name="formatProvider" position="2" attrib="0" type="System.IFormatProvider" />
                  <parameter name="styles" position="3" attrib="0" type="System.Globalization.DateTimeStyles" />
                </parameters>
              </method>
              <method name="ParseExact(System.String, System.String[], System.IFormatProvider, System.Globalization.DateTimeStyles)" attrib="150" static="true" returntype="System.DateTimeOffset">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.String" />
                  <parameter name="formats" position="1" attrib="0" type="System.String[]" />
                  <parameter name="formatProvider" position="2" attrib="0" type="System.IFormatProvider" />
                  <parameter name="styles" position="3" attrib="0" type="System.Globalization.DateTimeStyles" />
                </parameters>
              </method>
              <method name="ParseExact(System.String, System.String, System.IFormatProvider)" attrib="150" static="true" returntype="System.DateTimeOffset">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.String" />
                  <parameter name="format" position="1" attrib="0" type="System.String" />
                  <parameter name="formatProvider" position="2" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="Subtract(System.TimeSpan)" attrib="134" returntype="System.DateTimeOffset">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="Subtract(System.DateTimeOffset)" attrib="134" returntype="System.TimeSpan">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.DateTimeOffset" />
                </parameters>
              </method>
              <method name="ToFileTime()" attrib="134" returntype="System.Int64">
                <parameters />
              </method>
              <method name="ToLocalTime()" attrib="134" returntype="System.DateTimeOffset">
                <parameters />
              </method>
              <method name="ToOffset(System.TimeSpan)" attrib="134" returntype="System.DateTimeOffset">
                <parameters>
                  <parameter name="offset" position="0" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToString(System.String, System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="formatProvider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.IFormatProvider)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="formatProvider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.String)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToUniversalTime()" attrib="134" returntype="System.DateTimeOffset">
                <parameters />
              </method>
              <method name="TryParse(System.String, out System.DateTimeOffset&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.String" />
                  <parameter name="result" position="1" attrib="2" type="System.DateTimeOffset&amp;" direction="out" />
                </parameters>
              </method>
              <method name="TryParse(System.String, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTimeOffset&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.String" />
                  <parameter name="formatProvider" position="1" attrib="0" type="System.IFormatProvider" />
                  <parameter name="styles" position="2" attrib="0" type="System.Globalization.DateTimeStyles" />
                  <parameter name="result" position="3" attrib="2" type="System.DateTimeOffset&amp;" direction="out" />
                </parameters>
              </method>
              <method name="TryParseExact(System.String, System.String[], System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTimeOffset&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.String" />
                  <parameter name="formats" position="1" attrib="0" type="System.String[]" />
                  <parameter name="formatProvider" position="2" attrib="0" type="System.IFormatProvider" />
                  <parameter name="styles" position="3" attrib="0" type="System.Globalization.DateTimeStyles" />
                  <parameter name="result" position="4" attrib="2" type="System.DateTimeOffset&amp;" direction="out" />
                </parameters>
              </method>
              <method name="TryParseExact(System.String, System.String, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTimeOffset&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.String" />
                  <parameter name="format" position="1" attrib="0" type="System.String" />
                  <parameter name="formatProvider" position="2" attrib="0" type="System.IFormatProvider" />
                  <parameter name="styles" position="3" attrib="0" type="System.Globalization.DateTimeStyles" />
                  <parameter name="result" position="4" attrib="2" type="System.DateTimeOffset&amp;" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="DayOfWeek" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Friday" attrib="32854" fieldtype="System.DayOfWeek" value="5" />
              <field name="Monday" attrib="32854" fieldtype="System.DayOfWeek" value="1" />
              <field name="Saturday" attrib="32854" fieldtype="System.DayOfWeek" value="6" />
              <field name="Sunday" attrib="32854" fieldtype="System.DayOfWeek" value="0" />
              <field name="Thursday" attrib="32854" fieldtype="System.DayOfWeek" value="4" />
              <field name="Tuesday" attrib="32854" fieldtype="System.DayOfWeek" value="2" />
              <field name="Wednesday" attrib="32854" fieldtype="System.DayOfWeek" value="3" />
            </fields>
          </class>
          <class name="DBNull" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IConvertible" />
            </interfaces>
            <fields>
              <field name="Value" attrib="54" fieldtype="System.DBNull" />
            </fields>
            <methods>
              <method name="GetTypeCode()" attrib="486" virtual="true" returntype="System.TypeCode">
                <parameters />
              </method>
              <method name="ToString(System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="Decimal" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IFormattable" />
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IComparable`1[System.Decimal]" />
              <interface name="System.IEquatable`1[System.Decimal]" />
            </interfaces>
            <fields>
              <field name="MaxValue" attrib="54" fieldtype="System.Decimal">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.DecimalConstantAttribute" />
                </attributes>
              </field>
              <field name="MinusOne" attrib="54" fieldtype="System.Decimal">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.DecimalConstantAttribute" />
                </attributes>
              </field>
              <field name="MinValue" attrib="54" fieldtype="System.Decimal">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.DecimalConstantAttribute" />
                </attributes>
              </field>
              <field name="One" attrib="54" fieldtype="System.Decimal">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.DecimalConstantAttribute" />
                </attributes>
              </field>
              <field name="Zero" attrib="54" fieldtype="System.Decimal">
                <attributes>
                  <attribute name="System.Runtime.CompilerServices.DecimalConstantAttribute" />
                </attributes>
              </field>
            </fields>
            <constructors>
              <constructor name=".ctor(System.Double)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Single)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32, System.Int32, System.Int32, System.Boolean, System.Byte)" attrib="6278">
                <parameters>
                  <parameter name="lo" position="0" attrib="0" type="System.Int32" />
                  <parameter name="mid" position="1" attrib="0" type="System.Int32" />
                  <parameter name="hi" position="2" attrib="0" type="System.Int32" />
                  <parameter name="isNegative" position="3" attrib="0" type="System.Boolean" />
                  <parameter name="scale" position="4" attrib="0" type="System.Byte" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32[])" attrib="6278">
                <parameters>
                  <parameter name="bits" position="0" attrib="0" type="System.Int32[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.UInt32)" attrib="6278">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.UInt64)" attrib="6278">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int64)" attrib="6278">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="Add(System.Decimal, System.Decimal)" attrib="150" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.Decimal" />
                  <parameter name="d2" position="1" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="Compare(System.Decimal, System.Decimal)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.Decimal" />
                  <parameter name="d2" position="1" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="CompareTo(System.Decimal)" attrib="486" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="CompareTo(System.Object)" attrib="486" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Divide(System.Decimal, System.Decimal)" attrib="150" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.Decimal" />
                  <parameter name="d2" position="1" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="Equals(System.Decimal, System.Decimal)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.Decimal" />
                  <parameter name="d2" position="1" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="Equals(System.Decimal)" attrib="486" virtual="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Floor(System.Decimal)" attrib="150" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="GetBits(System.Decimal)" attrib="150" static="true" returntype="System.Int32[]">
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetTypeCode()" attrib="486" virtual="true" returntype="System.TypeCode">
                <parameters />
              </method>
              <method name="Multiply(System.Decimal, System.Decimal)" attrib="150" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.Decimal" />
                  <parameter name="d2" position="1" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="Negate(System.Decimal)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_Addition(System.Decimal, System.Decimal)" attrib="2198" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.Decimal" />
                  <parameter name="d2" position="1" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_Decrement(System.Decimal)" attrib="2198" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_Division(System.Decimal, System.Decimal)" attrib="2198" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.Decimal" />
                  <parameter name="d2" position="1" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_Equality(System.Decimal, System.Decimal)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.Decimal" />
                  <parameter name="d2" position="1" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Decimal)" attrib="2198" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Decimal)" attrib="2198" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Double)" attrib="2198" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Single)" attrib="2198" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Decimal)" attrib="2198" static="true" returntype="System.Byte">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Decimal)" attrib="2198" static="true" returntype="System.Char">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Decimal)" attrib="2198" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Decimal)" attrib="2198" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Decimal)" attrib="2198" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Decimal)" attrib="2198" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Decimal)" attrib="2198" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Decimal)" attrib="2198" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Decimal)" attrib="2198" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_GreaterThan(System.Decimal, System.Decimal)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.Decimal" />
                  <parameter name="d2" position="1" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_GreaterThanOrEqual(System.Decimal, System.Decimal)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.Decimal" />
                  <parameter name="d2" position="1" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_Implicit(System.Int32)" attrib="2198" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="op_Implicit(System.Char)" attrib="2198" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="op_Implicit(System.UInt16)" attrib="2198" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="op_Implicit(System.UInt64)" attrib="2198" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="op_Implicit(System.Int64)" attrib="2198" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="op_Implicit(System.UInt32)" attrib="2198" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="op_Implicit(System.Int16)" attrib="2198" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="op_Implicit(System.Byte)" attrib="2198" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="op_Implicit(System.SByte)" attrib="2198" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="op_Increment(System.Decimal)" attrib="2198" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Decimal, System.Decimal)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.Decimal" />
                  <parameter name="d2" position="1" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_LessThan(System.Decimal, System.Decimal)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.Decimal" />
                  <parameter name="d2" position="1" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_LessThanOrEqual(System.Decimal, System.Decimal)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.Decimal" />
                  <parameter name="d2" position="1" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_Modulus(System.Decimal, System.Decimal)" attrib="2198" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.Decimal" />
                  <parameter name="d2" position="1" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_Multiply(System.Decimal, System.Decimal)" attrib="2198" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.Decimal" />
                  <parameter name="d2" position="1" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_Subtraction(System.Decimal, System.Decimal)" attrib="2198" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.Decimal" />
                  <parameter name="d2" position="1" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_UnaryNegation(System.Decimal)" attrib="2198" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="op_UnaryPlus(System.Decimal)" attrib="2198" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles, System.IFormatProvider)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="Parse(System.String)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.IFormatProvider)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="Remainder(System.Decimal, System.Decimal)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.Decimal" />
                  <parameter name="d2" position="1" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="Round(System.Decimal, System.Int32)" attrib="150" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Decimal" />
                  <parameter name="decimals" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Subtract(System.Decimal, System.Decimal)" attrib="150" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.Decimal" />
                  <parameter name="d2" position="1" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToByte(System.Decimal)" attrib="150" static="true" returntype="System.Byte">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToDouble(System.Decimal)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToInt16(System.Decimal)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToInt32(System.Decimal)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToInt64(System.Decimal)" attrib="150" static="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToSByte(System.Decimal)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToSingle(System.Decimal)" attrib="150" static="true" returntype="System.Single">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToString(System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.String, System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToString(System.String)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToUInt16(System.Decimal)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToUInt32(System.Decimal)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="ToUInt64(System.Decimal)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="Truncate(System.Decimal)" attrib="150" static="true" returntype="System.Decimal">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, out System.Decimal&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                  <parameter name="result" position="3" attrib="2" type="System.Decimal&amp;" direction="out" />
                </parameters>
              </method>
              <method name="TryParse(System.String, out System.Decimal&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="result" position="1" attrib="2" type="System.Decimal&amp;" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Delegate" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces />
            <constructors>
              <constructor name=".ctor(System.Type, System.String)" attrib="6276">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="target" position="0" attrib="0" type="System.Type" />
                  <parameter name="method" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Object, System.String)" attrib="6276">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="target" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Method" attrib="0" ptype="System.Reflection.MethodInfo" params="">
                <methods>
                  <method name="get_Method()" attrib="2182" returntype="System.Reflection.MethodInfo">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Target" attrib="0" ptype="System.Object" params="">
                <methods>
                  <method name="get_Target()" attrib="2182" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Combine(System.Delegate, System.Delegate)" attrib="150" static="true" returntype="System.Delegate">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Delegate" />
                  <parameter name="b" position="1" attrib="0" type="System.Delegate" />
                </parameters>
              </method>
              <method name="CombineImpl(System.Delegate)" attrib="452" virtual="true" returntype="System.Delegate">
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Delegate" />
                </parameters>
              </method>
              <method name="CreateDelegate(System.Type, System.Type, System.String, System.Boolean)" attrib="150" static="true" returntype="System.Delegate">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="target" position="1" attrib="0" type="System.Type" />
                  <parameter name="method" position="2" attrib="0" type="System.String" />
                  <parameter name="ignoreCase" position="3" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="CreateDelegate(System.Type, System.Object, System.String, System.Boolean, System.Boolean)" attrib="150" static="true" returntype="System.Delegate">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="target" position="1" attrib="0" type="System.Object" />
                  <parameter name="method" position="2" attrib="0" type="System.String" />
                  <parameter name="ignoreCase" position="3" attrib="0" type="System.Boolean" />
                  <parameter name="throwOnBindFailure" position="4" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="CreateDelegate(System.Type, System.Type, System.String)" attrib="150" static="true" returntype="System.Delegate">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="target" position="1" attrib="0" type="System.Type" />
                  <parameter name="method" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateDelegate(System.Type, System.Type, System.String, System.Boolean, System.Boolean)" attrib="150" static="true" returntype="System.Delegate">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="target" position="1" attrib="0" type="System.Type" />
                  <parameter name="method" position="2" attrib="0" type="System.String" />
                  <parameter name="ignoreCase" position="3" attrib="0" type="System.Boolean" />
                  <parameter name="throwOnBindFailure" position="4" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="CreateDelegate(System.Type, System.Object, System.Reflection.MethodInfo, System.Boolean)" attrib="150" static="true" returntype="System.Delegate">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="firstArgument" position="1" attrib="0" type="System.Object" />
                  <parameter name="method" position="2" attrib="0" type="System.Reflection.MethodInfo" />
                  <parameter name="throwOnBindFailure" position="3" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="CreateDelegate(System.Type, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Delegate">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="method" position="1" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="CreateDelegate(System.Type, System.Reflection.MethodInfo, System.Boolean)" attrib="150" static="true" returntype="System.Delegate">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="method" position="1" attrib="0" type="System.Reflection.MethodInfo" />
                  <parameter name="throwOnBindFailure" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="CreateDelegate(System.Type, System.Object, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Delegate">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="firstArgument" position="1" attrib="0" type="System.Object" />
                  <parameter name="method" position="2" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="CreateDelegate(System.Type, System.Object, System.String)" attrib="150" static="true" returntype="System.Delegate">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="target" position="1" attrib="0" type="System.Object" />
                  <parameter name="method" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateDelegate(System.Type, System.Object, System.String, System.Boolean)" attrib="150" static="true" returntype="System.Delegate">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="target" position="1" attrib="0" type="System.Object" />
                  <parameter name="method" position="2" attrib="0" type="System.String" />
                  <parameter name="ignoreCase" position="3" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="DynamicInvoke(System.Object[])" attrib="134" returntype="System.Object">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="args" position="0" attrib="0" type="System.Object[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetInvocationList()" attrib="454" virtual="true" returntype="System.Delegate[]">
                <parameters />
              </method>
              <method name="op_Equality(System.Delegate, System.Delegate)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.Delegate" />
                  <parameter name="d2" position="1" attrib="0" type="System.Delegate" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Delegate, System.Delegate)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.Delegate" />
                  <parameter name="d2" position="1" attrib="0" type="System.Delegate" />
                </parameters>
              </method>
              <method name="Remove(System.Delegate, System.Delegate)" attrib="150" static="true" returntype="System.Delegate">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Delegate" />
                  <parameter name="value" position="1" attrib="0" type="System.Delegate" />
                </parameters>
              </method>
              <method name="RemoveImpl(System.Delegate)" attrib="452" virtual="true" returntype="System.Delegate">
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Delegate" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="DivideByZeroException" type="class" base="System.ArithmeticException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="DllNotFoundException" type="class" base="System.TypeLoadException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="Double" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IFormattable" />
              <interface name="System.IConvertible" />
              <interface name="System.IComparable`1[System.Double]" />
              <interface name="System.IEquatable`1[System.Double]" />
            </interfaces>
            <fields>
              <field name="Epsilon" attrib="32854" fieldtype="System.Double" value="4.94065645841247E-324" />
              <field name="MaxValue" attrib="32854" fieldtype="System.Double" value="1.79769313486232E+308" />
              <field name="MinValue" attrib="32854" fieldtype="System.Double" value="-1.79769313486232E+308" />
              <field name="NaN" attrib="32854" fieldtype="System.Double" value="NaN" />
              <field name="NegativeInfinity" attrib="32854" fieldtype="System.Double" value="-Infinity" />
              <field name="PositiveInfinity" attrib="32854" fieldtype="System.Double" value="Infinity" />
            </fields>
            <methods>
              <method name="CompareTo(System.Double)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="CompareTo(System.Object)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Equals(System.Double)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetTypeCode()" attrib="486" virtual="true" returntype="System.TypeCode">
                <parameters />
              </method>
              <method name="IsInfinity(System.Double)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="IsNaN(System.Double)" attrib="150" static="true" returntype="System.Boolean">
                <attributes />
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="IsNegativeInfinity(System.Double)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="IsPositiveInfinity(System.Double)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                </parameters>
              </method>
              <method name="Parse(System.String)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles, System.IFormatProvider)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.IFormatProvider)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.String)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToString(System.String, System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, out System.Double&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                  <parameter name="result" position="3" attrib="2" type="System.Double&amp;" direction="out" />
                </parameters>
              </method>
              <method name="TryParse(System.String, out System.Double&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="result" position="1" attrib="2" type="System.Double&amp;" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="EntryPointNotFoundException" type="class" base="System.TypeLoadException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="Enum" type="class" base="System.ValueType" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IFormattable" />
              <interface name="System.IConvertible" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="CompareTo(System.Object)" attrib="486" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="target" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetName(System.Type, System.Object)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="enumType" position="0" attrib="0" type="System.Type" />
                  <parameter name="value" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetTypeCode()" attrib="486" virtual="true" returntype="System.TypeCode">
                <parameters />
              </method>
              <method name="GetUnderlyingType(System.Type)" attrib="150" static="true" returntype="System.Type">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="enumType" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="IsDefined(System.Type, System.Object)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="enumType" position="0" attrib="0" type="System.Type" />
                  <parameter name="value" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Parse(System.Type, System.String, System.Boolean)" attrib="150" static="true" returntype="System.Object">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="enumType" position="0" attrib="0" type="System.Type" />
                  <parameter name="value" position="1" attrib="0" type="System.String" />
                  <parameter name="ignoreCase" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToObject(System.Type, System.Object)" attrib="150" static="true" returntype="System.Object">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="enumType" position="0" attrib="0" type="System.Type" />
                  <parameter name="value" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ToString(System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.ObsoleteAttribute" />
                </attributes>
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.String)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ToString(System.String, System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.ObsoleteAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Environment" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <properties>
              <property name="CurrentDirectory" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_CurrentDirectory()" attrib="2198" static="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_CurrentDirectory(System.String)" attrib="2198" static="true" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ExitCode" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_ExitCode()" attrib="2198" static="true" returntype="System.Int32">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_ExitCode(System.Int32)" attrib="2198" static="true" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="HasShutdownStarted" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_HasShutdownStarted()" attrib="2198" static="true" returntype="System.Boolean">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NewLine" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_NewLine()" attrib="2198" static="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OSVersion" attrib="0" ptype="System.OperatingSystem" params="">
                <methods>
                  <method name="get_OSVersion()" attrib="2198" static="true" returntype="System.OperatingSystem">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ProcessorCount" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_ProcessorCount()" attrib="2198" static="true" returntype="System.Int32">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TickCount" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_TickCount()" attrib="2198" static="true" returntype="System.Int32">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Version" attrib="0" ptype="System.Version" params="">
                <methods>
                  <method name="get_Version()" attrib="2198" static="true" returntype="System.Version">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetFolderPath(System.Environment+SpecialFolder)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="folder" position="0" attrib="0" type="System.Environment+SpecialFolder" />
                </parameters>
              </method>
            </methods>
            <classes>
              <class name="SpecialFolder" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <fields>
                  <field name="ApplicationData" attrib="32854" fieldtype="System.Environment+SpecialFolder" value="26" />
                  <field name="CommonApplicationData" attrib="32854" fieldtype="System.Environment+SpecialFolder" value="35" />
                  <field name="CommonProgramFiles" attrib="32854" fieldtype="System.Environment+SpecialFolder" value="43">
                    <attributes />
                  </field>
                  <field name="Cookies" attrib="32854" fieldtype="System.Environment+SpecialFolder" value="33" />
                  <field name="Desktop" attrib="32854" fieldtype="System.Environment+SpecialFolder" value="0" />
                  <field name="DesktopDirectory" attrib="32854" fieldtype="System.Environment+SpecialFolder" value="16" />
                  <field name="Favorites" attrib="32854" fieldtype="System.Environment+SpecialFolder" value="6" />
                  <field name="History" attrib="32854" fieldtype="System.Environment+SpecialFolder" value="34">
                    <attributes />
                  </field>
                  <field name="InternetCache" attrib="32854" fieldtype="System.Environment+SpecialFolder" value="32" />
                  <field name="LocalApplicationData" attrib="32854" fieldtype="System.Environment+SpecialFolder" value="28" />
                  <field name="MyComputer" attrib="32854" fieldtype="System.Environment+SpecialFolder" value="17" />
                  <field name="MyDocuments" attrib="32854" fieldtype="System.Environment+SpecialFolder" value="5" />
                  <field name="MyMusic" attrib="32854" fieldtype="System.Environment+SpecialFolder" value="13" />
                  <field name="MyPictures" attrib="32854" fieldtype="System.Environment+SpecialFolder" value="39" />
                  <field name="Personal" attrib="32854" fieldtype="System.Environment+SpecialFolder" value="5" />
                  <field name="ProgramFiles" attrib="32854" fieldtype="System.Environment+SpecialFolder" value="38" />
                  <field name="Programs" attrib="32854" fieldtype="System.Environment+SpecialFolder" value="2" />
                  <field name="Recent" attrib="32854" fieldtype="System.Environment+SpecialFolder" value="8">
                    <attributes />
                  </field>
                  <field name="SendTo" attrib="32854" fieldtype="System.Environment+SpecialFolder" value="9">
                    <attributes />
                  </field>
                  <field name="StartMenu" attrib="32854" fieldtype="System.Environment+SpecialFolder" value="11">
                    <attributes />
                  </field>
                  <field name="Startup" attrib="32854" fieldtype="System.Environment+SpecialFolder" value="7">
                    <attributes />
                  </field>
                  <field name="System" attrib="32854" fieldtype="System.Environment+SpecialFolder" value="37">
                    <attributes />
                  </field>
                  <field name="Templates" attrib="32854" fieldtype="System.Environment+SpecialFolder" value="21">
                    <attributes />
                  </field>
                </fields>
              </class>
            </classes>
          </class>
          <class name="EventArgs" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Empty" attrib="54" fieldtype="System.EventArgs" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="EventHandler" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Object, System.EventArgs, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="sender" position="0" attrib="0" type="System.Object" />
                  <parameter name="e" position="1" attrib="0" type="System.EventArgs" />
                  <parameter name="callback" position="2" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Object, System.EventArgs)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="sender" position="0" attrib="0" type="System.Object" />
                  <parameter name="e" position="1" attrib="0" type="System.EventArgs" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="EventHandler`1" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Object, TEventArgs, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="sender" position="0" attrib="0" type="System.Object" />
                  <parameter name="e" position="1" attrib="0" type="TEventArgs" />
                  <parameter name="callback" position="2" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Object, TEventArgs)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="sender" position="0" attrib="0" type="System.Object" />
                  <parameter name="e" position="1" attrib="0" type="TEventArgs" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Exception" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
            </attributes>
            <interfaces />
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Data" attrib="0" ptype="System.Collections.IDictionary" params="">
                <methods>
                  <method name="get_Data()" attrib="2502" virtual="true" returntype="System.Collections.IDictionary">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="HResult" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_HResult()" attrib="2180" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_HResult(System.Int32)" attrib="2180" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="InnerException" attrib="0" ptype="System.Exception" params="">
                <methods>
                  <method name="get_InnerException()" attrib="2534" virtual="true" returntype="System.Exception">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Message" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Message()" attrib="2502" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="StackTrace" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_StackTrace()" attrib="2502" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetBaseException()" attrib="454" virtual="true" returntype="System.Exception">
                <parameters />
              </method>
              <method name="GetType()" attrib="486" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
            </methods>
          </class>
          <class name="ExecutionEngineException" type="class" base="System.SystemException" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
          </class>
          <class name="FieldAccessException" type="class" base="System.MemberAccessException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
          </class>
          <class name="FlagsAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="FormatException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="GC" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="MaxGeneration" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_MaxGeneration()" attrib="2198" static="true" returntype="System.Int32">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Collect()" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetTotalMemory(System.Boolean)" attrib="150" static="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="forceFullCollection" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="KeepAlive(System.Object)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ReRegisterForFinalize(System.Object)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="SuppressFinalize(System.Object)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="WaitForPendingFinalizers()" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
            </methods>
          </class>
          <class name="Guid" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IFormattable" />
              <interface name="System.IComparable" />
              <interface name="System.IComparable`1[System.Guid]" />
              <interface name="System.IEquatable`1[System.Guid]" />
            </interfaces>
            <fields>
              <field name="Empty" attrib="54" fieldtype="System.Guid" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Int32, System.Int16, System.Int16, System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Int32" />
                  <parameter name="b" position="1" attrib="0" type="System.Int16" />
                  <parameter name="c" position="2" attrib="0" type="System.Int16" />
                  <parameter name="d" position="3" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32, System.Int16, System.Int16, System.Byte, System.Byte, System.Byte, System.Byte, System.Byte, System.Byte, System.Byte, System.Byte)" attrib="6278">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Int32" />
                  <parameter name="b" position="1" attrib="0" type="System.Int16" />
                  <parameter name="c" position="2" attrib="0" type="System.Int16" />
                  <parameter name="d" position="3" attrib="0" type="System.Byte" />
                  <parameter name="e" position="4" attrib="0" type="System.Byte" />
                  <parameter name="f" position="5" attrib="0" type="System.Byte" />
                  <parameter name="g" position="6" attrib="0" type="System.Byte" />
                  <parameter name="h" position="7" attrib="0" type="System.Byte" />
                  <parameter name="i" position="8" attrib="0" type="System.Byte" />
                  <parameter name="j" position="9" attrib="0" type="System.Byte" />
                  <parameter name="k" position="10" attrib="0" type="System.Byte" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="b" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="g" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="CompareTo(System.Object)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="CompareTo(System.Guid)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Guid" />
                </parameters>
              </method>
              <method name="Equals(System.Guid)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="g" position="0" attrib="0" type="System.Guid" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="NewGuid()" attrib="150" static="true" returntype="System.Guid">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="op_Equality(System.Guid, System.Guid)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Guid" />
                  <parameter name="b" position="1" attrib="0" type="System.Guid" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Guid, System.Guid)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Guid" />
                  <parameter name="b" position="1" attrib="0" type="System.Guid" />
                </parameters>
              </method>
              <method name="ToByteArray()" attrib="134" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="ToString(System.String, System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.String)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="IAsyncResult" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <properties>
              <property name="AsyncState" attrib="0" ptype="System.Object" params="">
                <methods>
                  <method name="get_AsyncState()" attrib="3526" abstract="true" virtual="true" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="AsyncWaitHandle" attrib="0" ptype="System.Threading.WaitHandle" params="">
                <methods>
                  <method name="get_AsyncWaitHandle()" attrib="3526" abstract="true" virtual="true" returntype="System.Threading.WaitHandle">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CompletedSynchronously" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CompletedSynchronously()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsCompleted" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsCompleted()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="IComparable" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <methods>
              <method name="CompareTo(System.Object)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IComparable`1" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="CompareTo(T)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="T" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IConvertible" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.CLSCompliantAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <methods>
              <method name="GetTypeCode()" attrib="1478" abstract="true" virtual="true" returntype="System.TypeCode">
                <parameters />
              </method>
              <method name="ToBoolean(System.IFormatProvider)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToByte(System.IFormatProvider)" attrib="1478" abstract="true" virtual="true" returntype="System.Byte">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToChar(System.IFormatProvider)" attrib="1478" abstract="true" virtual="true" returntype="System.Char">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToDateTime(System.IFormatProvider)" attrib="1478" abstract="true" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToDecimal(System.IFormatProvider)" attrib="1478" abstract="true" virtual="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToDouble(System.IFormatProvider)" attrib="1478" abstract="true" virtual="true" returntype="System.Double">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToInt16(System.IFormatProvider)" attrib="1478" abstract="true" virtual="true" returntype="System.Int16">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToInt32(System.IFormatProvider)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToInt64(System.IFormatProvider)" attrib="1478" abstract="true" virtual="true" returntype="System.Int64">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToSByte(System.IFormatProvider)" attrib="1478" abstract="true" virtual="true" returntype="System.SByte">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToSingle(System.IFormatProvider)" attrib="1478" abstract="true" virtual="true" returntype="System.Single">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.IFormatProvider)" attrib="1478" abstract="true" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToType(System.Type, System.IFormatProvider)" attrib="1478" abstract="true" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="conversionType" position="0" attrib="0" type="System.Type" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToUInt16(System.IFormatProvider)" attrib="1478" abstract="true" virtual="true" returntype="System.UInt16">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToUInt32(System.IFormatProvider)" attrib="1478" abstract="true" virtual="true" returntype="System.UInt32">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToUInt64(System.IFormatProvider)" attrib="1478" abstract="true" virtual="true" returntype="System.UInt64">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="ICustomFormatter" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <methods>
              <method name="Format(System.String, System.Object, System.IFormatProvider)" attrib="1478" abstract="true" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="arg" position="1" attrib="0" type="System.Object" />
                  <parameter name="formatProvider" position="2" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IDisposable" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <methods>
              <method name="Dispose()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="IEquatable`1" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="Equals(T)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="T" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IFormatProvider" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <methods>
              <method name="GetFormat(System.Type)" attrib="1478" abstract="true" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="formatType" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IFormattable" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <methods>
              <method name="ToString(System.String, System.IFormatProvider)" attrib="1478" abstract="true" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="formatProvider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IndexOutOfRangeException" type="class" base="System.SystemException" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="Int16" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IFormattable" />
              <interface name="System.IConvertible" />
              <interface name="System.IComparable`1[System.Int16]" />
              <interface name="System.IEquatable`1[System.Int16]" />
            </interfaces>
            <fields>
              <field name="MaxValue" attrib="32854" fieldtype="System.Int16" value="32767" />
              <field name="MinValue" attrib="32854" fieldtype="System.Int16" value="-32768" />
            </fields>
            <methods>
              <method name="CompareTo(System.Int16)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="CompareTo(System.Object)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Equals(System.Int16)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetTypeCode()" attrib="486" virtual="true" returntype="System.TypeCode">
                <parameters />
              </method>
              <method name="Parse(System.String)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles, System.IFormatProvider)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToString(System.String, System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.String)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, out System.Int16&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                  <parameter name="result" position="3" attrib="2" type="System.Int16&amp;" direction="out" />
                </parameters>
              </method>
              <method name="TryParse(System.String, out System.Int16&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="result" position="1" attrib="2" type="System.Int16&amp;" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Int32" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IFormattable" />
              <interface name="System.IConvertible" />
              <interface name="System.IComparable`1[System.Int32]" />
              <interface name="System.IEquatable`1[System.Int32]" />
            </interfaces>
            <fields>
              <field name="MaxValue" attrib="32854" fieldtype="System.Int32" value="2147483647" />
              <field name="MinValue" attrib="32854" fieldtype="System.Int32" value="-2147483648" />
            </fields>
            <methods>
              <method name="CompareTo(System.Int32)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="CompareTo(System.Object)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Equals(System.Int32)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetTypeCode()" attrib="486" virtual="true" returntype="System.TypeCode">
                <parameters />
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                </parameters>
              </method>
              <method name="Parse(System.String)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles, System.IFormatProvider)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.IFormatProvider)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.String)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToString(System.String, System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                  <parameter name="result" position="3" attrib="2" type="System.Int32&amp;" direction="out" />
                </parameters>
              </method>
              <method name="TryParse(System.String, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="result" position="1" attrib="2" type="System.Int32&amp;" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Int64" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IFormattable" />
              <interface name="System.IConvertible" />
              <interface name="System.IComparable`1[System.Int64]" />
              <interface name="System.IEquatable`1[System.Int64]" />
            </interfaces>
            <fields>
              <field name="MaxValue" attrib="32854" fieldtype="System.Int64" value="9223372036854775807" />
              <field name="MinValue" attrib="32854" fieldtype="System.Int64" value="-9223372036854775808" />
            </fields>
            <methods>
              <method name="CompareTo(System.Int64)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="CompareTo(System.Object)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Equals(System.Int64)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetTypeCode()" attrib="486" virtual="true" returntype="System.TypeCode">
                <parameters />
              </method>
              <method name="Parse(System.String)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles, System.IFormatProvider)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToString(System.String, System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.String)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, out System.Int64&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                  <parameter name="result" position="3" attrib="2" type="System.Int64&amp;" direction="out" />
                </parameters>
              </method>
              <method name="TryParse(System.String, out System.Int64&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="result" position="1" attrib="2" type="System.Int64&amp;" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IntPtr" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Zero" attrib="54" fieldtype="System.IntPtr" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Void*)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Void*" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int64)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Size" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Size()" attrib="2198" static="true" returntype="System.Int32">
                    <attributes />
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="op_Equality(System.IntPtr, System.IntPtr)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="value2" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="op_Explicit(System.IntPtr)" attrib="2198" static="true" returntype="System.Void*">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Void*)" attrib="2198" static="true" returntype="System.IntPtr">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Void*" />
                </parameters>
              </method>
              <method name="op_Explicit(System.IntPtr)" attrib="2198" static="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="op_Explicit(System.IntPtr)" attrib="2198" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Int32)" attrib="2198" static="true" returntype="System.IntPtr">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Int64)" attrib="2198" static="true" returntype="System.IntPtr">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="op_Inequality(System.IntPtr, System.IntPtr)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="value2" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="ToInt32()" attrib="134" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToInt64()" attrib="134" returntype="System.Int64">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToPointer()" attrib="134" returntype="System.Void*">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
            </methods>
          </class>
          <class name="InvalidCastException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="InvalidOperationException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="InvalidProgramException" type="class" base="System.SystemException" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="IServiceProvider" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="GetService(System.Type)" attrib="1478" abstract="true" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="serviceType" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="LoaderOptimization" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="MultiDomain" attrib="32854" fieldtype="System.LoaderOptimization" value="2" />
              <field name="MultiDomainHost" attrib="32854" fieldtype="System.LoaderOptimization" value="3" />
              <field name="NotSpecified" attrib="32854" fieldtype="System.LoaderOptimization" value="0" />
              <field name="SingleDomain" attrib="32854" fieldtype="System.LoaderOptimization" value="1" />
            </fields>
          </class>
          <class name="Math" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <fields>
              <field name="E" attrib="32854" fieldtype="System.Double" value="2.71828182845905" />
              <field name="PI" attrib="32854" fieldtype="System.Double" value="3.14159265358979" />
            </fields>
            <methods>
              <method name="Abs(System.Single)" attrib="150" static="true" returntype="System.Single">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Abs(System.Double)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Abs(System.Decimal)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="Abs(System.Int64)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="Abs(System.SByte)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="Abs(System.Int16)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="Abs(System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Acos(System.Double)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Asin(System.Double)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Atan(System.Double)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Atan2(System.Double, System.Double)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="y" position="0" attrib="0" type="System.Double" />
                  <parameter name="x" position="1" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Ceiling(System.Double)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Cos(System.Double)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Cosh(System.Double)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Exp(System.Double)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Floor(System.Double)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="IEEERemainder(System.Double, System.Double)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="System.Double" />
                  <parameter name="y" position="1" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Log(System.Double)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Log(System.Double, System.Double)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Double" />
                  <parameter name="newBase" position="1" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Log10(System.Double)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Max(System.Byte, System.Byte)" attrib="150" static="true" returntype="System.Byte">
                <attributes />
                <parameters>
                  <parameter name="val1" position="0" attrib="0" type="System.Byte" />
                  <parameter name="val2" position="1" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="Max(System.Single, System.Single)" attrib="150" static="true" returntype="System.Single">
                <attributes />
                <parameters>
                  <parameter name="val1" position="0" attrib="0" type="System.Single" />
                  <parameter name="val2" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Max(System.UInt64, System.UInt64)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="val1" position="0" attrib="0" type="System.UInt64" />
                  <parameter name="val2" position="1" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="Max(System.Decimal, System.Decimal)" attrib="150" static="true" returntype="System.Decimal">
                <attributes />
                <parameters>
                  <parameter name="val1" position="0" attrib="0" type="System.Decimal" />
                  <parameter name="val2" position="1" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="Max(System.Double, System.Double)" attrib="150" static="true" returntype="System.Double">
                <attributes />
                <parameters>
                  <parameter name="val1" position="0" attrib="0" type="System.Double" />
                  <parameter name="val2" position="1" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Max(System.Int64, System.Int64)" attrib="150" static="true" returntype="System.Int64">
                <attributes />
                <parameters>
                  <parameter name="val1" position="0" attrib="0" type="System.Int64" />
                  <parameter name="val2" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="Max(System.UInt16, System.UInt16)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="val1" position="0" attrib="0" type="System.UInt16" />
                  <parameter name="val2" position="1" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="Max(System.Int16, System.Int16)" attrib="150" static="true" returntype="System.Int16">
                <attributes />
                <parameters>
                  <parameter name="val1" position="0" attrib="0" type="System.Int16" />
                  <parameter name="val2" position="1" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="Max(System.UInt32, System.UInt32)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="val1" position="0" attrib="0" type="System.UInt32" />
                  <parameter name="val2" position="1" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="Max(System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <attributes />
                <parameters>
                  <parameter name="val1" position="0" attrib="0" type="System.Int32" />
                  <parameter name="val2" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Max(System.SByte, System.SByte)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="val1" position="0" attrib="0" type="System.SByte" />
                  <parameter name="val2" position="1" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="Min(System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <attributes />
                <parameters>
                  <parameter name="val1" position="0" attrib="0" type="System.Int32" />
                  <parameter name="val2" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Min(System.UInt32, System.UInt32)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="val1" position="0" attrib="0" type="System.UInt32" />
                  <parameter name="val2" position="1" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="Min(System.UInt16, System.UInt16)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="val1" position="0" attrib="0" type="System.UInt16" />
                  <parameter name="val2" position="1" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="Min(System.Byte, System.Byte)" attrib="150" static="true" returntype="System.Byte">
                <attributes />
                <parameters>
                  <parameter name="val1" position="0" attrib="0" type="System.Byte" />
                  <parameter name="val2" position="1" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="Min(System.Int16, System.Int16)" attrib="150" static="true" returntype="System.Int16">
                <attributes />
                <parameters>
                  <parameter name="val1" position="0" attrib="0" type="System.Int16" />
                  <parameter name="val2" position="1" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="Min(System.Double, System.Double)" attrib="150" static="true" returntype="System.Double">
                <attributes />
                <parameters>
                  <parameter name="val1" position="0" attrib="0" type="System.Double" />
                  <parameter name="val2" position="1" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Min(System.Decimal, System.Decimal)" attrib="150" static="true" returntype="System.Decimal">
                <attributes />
                <parameters>
                  <parameter name="val1" position="0" attrib="0" type="System.Decimal" />
                  <parameter name="val2" position="1" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="Min(System.Single, System.Single)" attrib="150" static="true" returntype="System.Single">
                <attributes />
                <parameters>
                  <parameter name="val1" position="0" attrib="0" type="System.Single" />
                  <parameter name="val2" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Min(System.Int64, System.Int64)" attrib="150" static="true" returntype="System.Int64">
                <attributes />
                <parameters>
                  <parameter name="val1" position="0" attrib="0" type="System.Int64" />
                  <parameter name="val2" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="Min(System.UInt64, System.UInt64)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="val1" position="0" attrib="0" type="System.UInt64" />
                  <parameter name="val2" position="1" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="Min(System.SByte, System.SByte)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="val1" position="0" attrib="0" type="System.SByte" />
                  <parameter name="val2" position="1" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="Pow(System.Double, System.Double)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="System.Double" />
                  <parameter name="y" position="1" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Round(System.Double, System.Int32)" attrib="150" static="true" returntype="System.Double">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                  <parameter name="digits" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Round(System.Decimal)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="Round(System.Decimal, System.Int32)" attrib="150" static="true" returntype="System.Decimal">
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Decimal" />
                  <parameter name="decimals" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Round(System.Double)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Sign(System.Int16)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="Sign(System.SByte)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="Sign(System.Int64)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="Sign(System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Sign(System.Single)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Sign(System.Double)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Sign(System.Decimal)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="Sin(System.Double)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Sinh(System.Double)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Sqrt(System.Double)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Tan(System.Double)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Tanh(System.Double)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="MemberAccessException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="MethodAccessException" type="class" base="System.MemberAccessException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="MissingFieldException" type="class" base="System.MissingMemberException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Message" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Message()" attrib="2246" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="MissingMemberException" type="class" base="System.MemberAccessException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Message" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Message()" attrib="2246" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="MissingMethodException" type="class" base="System.MissingMemberException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Message" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Message()" attrib="2246" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="MulticastDelegate" type="delegate" base="System.Delegate" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Object, System.String)" attrib="6276">
                <parameters>
                  <parameter name="target" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="CombineImpl(System.Delegate)" attrib="228" virtual="true" returntype="System.Delegate">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="follow" position="0" attrib="0" type="System.Delegate" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="230" virtual="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="230" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetInvocationList()" attrib="230" virtual="true" returntype="System.Delegate[]">
                <parameters />
              </method>
              <method name="op_Equality(System.MulticastDelegate, System.MulticastDelegate)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.MulticastDelegate" />
                  <parameter name="d2" position="1" attrib="0" type="System.MulticastDelegate" />
                </parameters>
              </method>
              <method name="op_Inequality(System.MulticastDelegate, System.MulticastDelegate)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="d1" position="0" attrib="0" type="System.MulticastDelegate" />
                  <parameter name="d2" position="1" attrib="0" type="System.MulticastDelegate" />
                </parameters>
              </method>
              <method name="RemoveImpl(System.Delegate)" attrib="228" virtual="true" returntype="System.Delegate">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Delegate" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="MulticastNotSupportedException" type="class" base="System.SystemException" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="NotFiniteNumberException" type="class" base="System.ArithmeticException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="NotImplementedException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="NotSupportedException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="Nullable" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <methods>
              <method name="Compare(System.Nullable`1[T], System.Nullable`1[T])" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="n1" position="0" attrib="0" type="System.Nullable`1[T]" />
                  <parameter name="n2" position="1" attrib="0" type="System.Nullable`1[T]" />
                </parameters>
              </method>
              <method name="Equals(System.Nullable`1[T], System.Nullable`1[T])" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="n1" position="0" attrib="0" type="System.Nullable`1[T]" />
                  <parameter name="n2" position="1" attrib="0" type="System.Nullable`1[T]" />
                </parameters>
              </method>
              <method name="GetUnderlyingType(System.Type)" attrib="150" static="true" returntype="System.Type">
                <parameters>
                  <parameter name="nullableType" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Nullable`1" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes />
            <constructors>
              <constructor name=".ctor(T)" attrib="6278">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="T" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="HasValue" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_HasValue()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="T" params="">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="T">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetValueOrDefault()" attrib="134" returntype="T">
                <parameters />
              </method>
              <method name="GetValueOrDefault(T)" attrib="134" returntype="T">
                <parameters>
                  <parameter name="defaultValue" position="0" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Nullable`1[T])" attrib="2198" static="true" returntype="T">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Nullable`1[T]" />
                </parameters>
              </method>
              <method name="op_Implicit(T)" attrib="2198" static="true" returntype="System.Nullable`1[T]">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="NullReferenceException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="Object" type="class" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <attributes />
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Equals(System.Object, System.Object)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="objA" position="0" attrib="0" type="System.Object" />
                  <parameter name="objB" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Finalize()" attrib="452" virtual="true" returntype="System.Void">
                <attributes />
                <parameters />
              </method>
              <method name="GetHashCode()" attrib="454" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetType()" attrib="134" returntype="System.Type">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="MemberwiseClone()" attrib="132" returntype="System.Object">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ReferenceEquals(System.Object, System.Object)" attrib="150" static="true" returntype="System.Boolean">
                <attributes />
                <parameters>
                  <parameter name="objA" position="0" attrib="0" type="System.Object" />
                  <parameter name="objB" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ToString()" attrib="454" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="ObjectDisposedException" type="class" base="System.InvalidOperationException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.String)" attrib="6278">
                <parameters>
                  <parameter name="objectName" position="0" attrib="0" type="System.String" />
                  <parameter name="message" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="objectName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Message" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Message()" attrib="2246" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ObjectName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_ObjectName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="ObsoleteAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="error" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="IsError" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsError()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Message" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Message()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="OperatingSystem" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces />
            <constructors>
              <constructor name=".ctor(System.PlatformID, System.Version)" attrib="6278">
                <parameters>
                  <parameter name="platform" position="0" attrib="0" type="System.PlatformID" />
                  <parameter name="version" position="1" attrib="0" type="System.Version" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Platform" attrib="0" ptype="System.PlatformID" params="">
                <methods>
                  <method name="get_Platform()" attrib="2182" returntype="System.PlatformID">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Version" attrib="0" ptype="System.Version" params="">
                <methods>
                  <method name="get_Version()" attrib="2182" returntype="System.Version">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Clone()" attrib="486" virtual="true" returntype="System.Object">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="OutOfMemoryException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="OverflowException" type="class" base="System.ArithmeticException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="ParamArrayAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="False" />
                  <property name="Inherited" value="True" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="PlatformID" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="MacOSX" attrib="32854" fieldtype="System.PlatformID" value="6" />
              <field name="Unix" attrib="32854" fieldtype="System.PlatformID" value="4" />
              <field name="Win32NT" attrib="32854" fieldtype="System.PlatformID" value="2" />
              <field name="Win32S" attrib="32854" fieldtype="System.PlatformID" value="0" />
              <field name="Win32Windows" attrib="32854" fieldtype="System.PlatformID" value="1" />
              <field name="WinCE" attrib="32854" fieldtype="System.PlatformID" value="3" />
              <field name="Xbox" attrib="32854" fieldtype="System.PlatformID" value="5" />
            </fields>
          </class>
          <class name="PlatformNotSupportedException" type="class" base="System.NotSupportedException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="Predicate`1" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(T, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="T" />
                  <parameter name="callback" position="1" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(T)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="T" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Random" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="Seed" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Next(System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="minValue" position="0" attrib="0" type="System.Int32" />
                  <parameter name="maxValue" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Next(System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="maxValue" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Next()" attrib="454" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="NextBytes(System.Byte[])" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="NextDouble()" attrib="454" virtual="true" returntype="System.Double">
                <parameters />
              </method>
              <method name="Sample()" attrib="452" virtual="true" returntype="System.Double">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="RankException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="ResolveEventArgs" type="class" base="System.EventArgs" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="ResolveEventHandler" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Object, System.ResolveEventArgs, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="sender" position="0" attrib="0" type="System.Object" />
                  <parameter name="args" position="1" attrib="0" type="System.ResolveEventArgs" />
                  <parameter name="callback" position="2" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Reflection.Assembly">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Object, System.ResolveEventArgs)" attrib="454" virtual="true" returntype="System.Reflection.Assembly">
                <parameters>
                  <parameter name="sender" position="0" attrib="0" type="System.Object" />
                  <parameter name="args" position="1" attrib="0" type="System.ResolveEventArgs" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="RuntimeArgumentHandle" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
          </class>
          <class name="RuntimeFieldHandle" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <properties>
              <property name="Value" attrib="0" ptype="System.IntPtr" params="">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="System.IntPtr">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.RuntimeFieldHandle)" attrib="134" returntype="System.Boolean">
                <attributes />
                <parameters>
                  <parameter name="handle" position="0" attrib="0" type="System.RuntimeFieldHandle" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <attributes />
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="RuntimeMethodHandle" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <properties>
              <property name="Value" attrib="0" ptype="System.IntPtr" params="">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="System.IntPtr">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.RuntimeMethodHandle)" attrib="134" returntype="System.Boolean">
                <attributes />
                <parameters>
                  <parameter name="handle" position="0" attrib="0" type="System.RuntimeMethodHandle" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <attributes />
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(System.RuntimeMethodHandle, System.RuntimeMethodHandle)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.RuntimeMethodHandle" />
                  <parameter name="right" position="1" attrib="0" type="System.RuntimeMethodHandle" />
                </parameters>
              </method>
              <method name="op_Inequality(System.RuntimeMethodHandle, System.RuntimeMethodHandle)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.RuntimeMethodHandle" />
                  <parameter name="right" position="1" attrib="0" type="System.RuntimeMethodHandle" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="RuntimeTypeHandle" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <methods>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <attributes />
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Equals(System.RuntimeTypeHandle)" attrib="134" returntype="System.Boolean">
                <attributes />
                <parameters>
                  <parameter name="handle" position="0" attrib="0" type="System.RuntimeTypeHandle" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(System.RuntimeTypeHandle, System.Object)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.RuntimeTypeHandle" />
                  <parameter name="right" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="op_Inequality(System.RuntimeTypeHandle, System.Object)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="left" position="0" attrib="0" type="System.RuntimeTypeHandle" />
                  <parameter name="right" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SByte" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.CLSCompliantAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IFormattable" />
              <interface name="System.IConvertible" />
              <interface name="System.IComparable`1[System.SByte]" />
              <interface name="System.IEquatable`1[System.SByte]" />
            </interfaces>
            <fields>
              <field name="MaxValue" attrib="32854" fieldtype="System.SByte" value="127" />
              <field name="MinValue" attrib="32854" fieldtype="System.SByte" value="-128" />
            </fields>
            <methods>
              <method name="CompareTo(System.SByte)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="CompareTo(System.Object)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Equals(System.SByte)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetTypeCode()" attrib="486" virtual="true" returntype="System.TypeCode">
                <parameters />
              </method>
              <method name="Parse(System.String)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles, System.IFormatProvider)" attrib="150" static="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToString(System.String, System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.String)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, out System.SByte&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                  <parameter name="result" position="3" attrib="2" type="System.SByte&amp;" direction="out" />
                </parameters>
              </method>
              <method name="TryParse(System.String, out System.SByte&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="result" position="1" attrib="2" type="System.SByte&amp;" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Single" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IFormattable" />
              <interface name="System.IConvertible" />
              <interface name="System.IComparable`1[System.Single]" />
              <interface name="System.IEquatable`1[System.Single]" />
            </interfaces>
            <fields>
              <field name="Epsilon" attrib="32854" fieldtype="System.Single" value="1.401298E-45" />
              <field name="MaxValue" attrib="32854" fieldtype="System.Single" value="3.402823E+38" />
              <field name="MinValue" attrib="32854" fieldtype="System.Single" value="-3.402823E+38" />
              <field name="NaN" attrib="32854" fieldtype="System.Single" value="NaN" />
              <field name="NegativeInfinity" attrib="32854" fieldtype="System.Single" value="-Infinity" />
              <field name="PositiveInfinity" attrib="32854" fieldtype="System.Single" value="Infinity" />
            </fields>
            <methods>
              <method name="CompareTo(System.Single)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="CompareTo(System.Object)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Equals(System.Single)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetTypeCode()" attrib="486" virtual="true" returntype="System.TypeCode">
                <parameters />
              </method>
              <method name="IsInfinity(System.Single)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="f" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="IsNaN(System.Single)" attrib="150" static="true" returntype="System.Boolean">
                <attributes />
                <parameters>
                  <parameter name="f" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="IsNegativeInfinity(System.Single)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="f" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="IsPositiveInfinity(System.Single)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="f" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                </parameters>
              </method>
              <method name="Parse(System.String)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles, System.IFormatProvider)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.IFormatProvider)" attrib="150" static="true" returntype="System.Single">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToString(System.String, System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.String)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, out System.Single&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                  <parameter name="result" position="3" attrib="2" type="System.Single&amp;" direction="out" />
                </parameters>
              </method>
              <method name="TryParse(System.String, out System.Single&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="result" position="1" attrib="2" type="System.Single&amp;" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="StackOverflowException" type="class" base="System.SystemException" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="STAThreadAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute" />
              <attribute name="System.ObsoleteAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="String" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IComparable`1[System.String]" />
              <interface name="System.Collections.Generic.IEnumerable`1[System.Char]" />
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.IEquatable`1[System.String]" />
            </interfaces>
            <fields>
              <field name="Empty" attrib="54" fieldtype="System.String" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Char[], System.Int32, System.Int32)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="length" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Char[])" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Char, System.Int32)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Char" />
                  <parameter name="count" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Char*)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char*" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Char*, System.Int32, System.Int32)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char*" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="length" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.SByte*)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte*" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Chars" attrib="0" ptype="System.Char" params="System.Int32">
                <methods>
                  <method name="get_Chars(System.Int32)" attrib="2182" returntype="System.Char">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Length" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Length()" attrib="2182" returntype="System.Int32">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Compare(System.String, System.String, System.Globalization.CultureInfo, System.Globalization.CompareOptions)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="strA" position="0" attrib="0" type="System.String" />
                  <parameter name="strB" position="1" attrib="0" type="System.String" />
                  <parameter name="culture" position="2" attrib="0" type="System.Globalization.CultureInfo" />
                  <parameter name="options" position="3" attrib="0" type="System.Globalization.CompareOptions" />
                </parameters>
              </method>
              <method name="Compare(System.String, System.Int32, System.String, System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="strA" position="0" attrib="0" type="System.String" />
                  <parameter name="indexA" position="1" attrib="0" type="System.Int32" />
                  <parameter name="strB" position="2" attrib="0" type="System.String" />
                  <parameter name="indexB" position="3" attrib="0" type="System.Int32" />
                  <parameter name="length" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Compare(System.String, System.String)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="strA" position="0" attrib="0" type="System.String" />
                  <parameter name="strB" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Compare(System.String, System.String, System.StringComparison)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="strA" position="0" attrib="0" type="System.String" />
                  <parameter name="strB" position="1" attrib="0" type="System.String" />
                  <parameter name="comparisonType" position="2" attrib="0" type="System.StringComparison" />
                </parameters>
              </method>
              <method name="Compare(System.String, System.Int32, System.String, System.Int32, System.Int32, System.StringComparison)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="strA" position="0" attrib="0" type="System.String" />
                  <parameter name="indexA" position="1" attrib="0" type="System.Int32" />
                  <parameter name="strB" position="2" attrib="0" type="System.String" />
                  <parameter name="indexB" position="3" attrib="0" type="System.Int32" />
                  <parameter name="length" position="4" attrib="0" type="System.Int32" />
                  <parameter name="comparisonType" position="5" attrib="0" type="System.StringComparison" />
                </parameters>
              </method>
              <method name="Compare(System.String, System.Int32, System.String, System.Int32, System.Int32, System.Globalization.CultureInfo, System.Globalization.CompareOptions)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="strA" position="0" attrib="0" type="System.String" />
                  <parameter name="indexA" position="1" attrib="0" type="System.Int32" />
                  <parameter name="strB" position="2" attrib="0" type="System.String" />
                  <parameter name="indexB" position="3" attrib="0" type="System.Int32" />
                  <parameter name="length" position="4" attrib="0" type="System.Int32" />
                  <parameter name="culture" position="5" attrib="0" type="System.Globalization.CultureInfo" />
                  <parameter name="options" position="6" attrib="0" type="System.Globalization.CompareOptions" />
                </parameters>
              </method>
              <method name="CompareOrdinal(System.String, System.String)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="strA" position="0" attrib="0" type="System.String" />
                  <parameter name="strB" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CompareOrdinal(System.String, System.Int32, System.String, System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="strA" position="0" attrib="0" type="System.String" />
                  <parameter name="indexA" position="1" attrib="0" type="System.Int32" />
                  <parameter name="strB" position="2" attrib="0" type="System.String" />
                  <parameter name="indexB" position="3" attrib="0" type="System.Int32" />
                  <parameter name="length" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="CompareTo(System.Object)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="CompareTo(System.String)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="strB" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Concat(System.Object, System.Object, System.Object)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="arg0" position="0" attrib="0" type="System.Object" />
                  <parameter name="arg1" position="1" attrib="0" type="System.Object" />
                  <parameter name="arg2" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Concat(System.Object, System.Object)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="arg0" position="0" attrib="0" type="System.Object" />
                  <parameter name="arg1" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Concat(System.Object)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="arg0" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Concat(System.String, System.String, System.String)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="str0" position="0" attrib="0" type="System.String" />
                  <parameter name="str1" position="1" attrib="0" type="System.String" />
                  <parameter name="str2" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Concat(System.String, System.String, System.String, System.String)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="str0" position="0" attrib="0" type="System.String" />
                  <parameter name="str1" position="1" attrib="0" type="System.String" />
                  <parameter name="str2" position="2" attrib="0" type="System.String" />
                  <parameter name="str3" position="3" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Concat(System.String[])" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="values" position="0" attrib="0" type="System.String[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="Concat(System.String, System.String)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="str0" position="0" attrib="0" type="System.String" />
                  <parameter name="str1" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Concat(System.Object[])" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="args" position="0" attrib="0" type="System.Object[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="Contains(System.String)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Copy(System.String)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="str" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CopyTo(System.Int32, System.Char[], System.Int32, System.Int32)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="sourceIndex" position="0" attrib="0" type="System.Int32" />
                  <parameter name="destination" position="1" attrib="0" type="System.Char[]" />
                  <parameter name="destinationIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="count" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="EndsWith(System.String, System.StringComparison)" attrib="134" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="comparisonType" position="1" attrib="0" type="System.StringComparison" />
                </parameters>
              </method>
              <method name="EndsWith(System.String)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Equals(System.String)" attrib="486" virtual="true" returntype="System.Boolean">
                <attributes />
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <attributes />
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Equals(System.String, System.String, System.StringComparison)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.String" />
                  <parameter name="b" position="1" attrib="0" type="System.String" />
                  <parameter name="comparisonType" position="2" attrib="0" type="System.StringComparison" />
                </parameters>
              </method>
              <method name="Equals(System.String, System.String)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.String" />
                  <parameter name="b" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Equals(System.String, System.StringComparison)" attrib="134" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="comparisonType" position="1" attrib="0" type="System.StringComparison" />
                </parameters>
              </method>
              <method name="Format(System.String, System.Object)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="arg0" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Format(System.String, System.Object[])" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="args" position="1" attrib="0" type="System.Object[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="Format(System.IFormatProvider, System.String, System.Object[])" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                  <parameter name="format" position="1" attrib="0" type="System.String" />
                  <parameter name="args" position="2" attrib="0" type="System.Object[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="Format(System.String, System.Object, System.Object)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="arg0" position="1" attrib="0" type="System.Object" />
                  <parameter name="arg1" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Format(System.String, System.Object, System.Object, System.Object)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="arg0" position="1" attrib="0" type="System.Object" />
                  <parameter name="arg1" position="2" attrib="0" type="System.Object" />
                  <parameter name="arg2" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetTypeCode()" attrib="486" virtual="true" returntype="System.TypeCode">
                <parameters />
              </method>
              <method name="IndexOf(System.String, System.Int32, System.Int32)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IndexOf(System.String, System.Int32)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IndexOf(System.String, System.StringComparison)" attrib="134" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="comparisonType" position="1" attrib="0" type="System.StringComparison" />
                </parameters>
              </method>
              <method name="IndexOf(System.String, System.Int32, System.Int32, System.StringComparison)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                  <parameter name="comparisonType" position="3" attrib="0" type="System.StringComparison" />
                </parameters>
              </method>
              <method name="IndexOf(System.String, System.Int32, System.StringComparison)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="comparisonType" position="2" attrib="0" type="System.StringComparison" />
                </parameters>
              </method>
              <method name="IndexOf(System.String)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="IndexOf(System.Char, System.Int32, System.Int32)" attrib="134" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IndexOf(System.Char, System.Int32)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IndexOf(System.Char)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="IndexOfAny(System.Char[], System.Int32, System.Int32)" attrib="134" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="anyOf" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IndexOfAny(System.Char[], System.Int32)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="anyOf" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IndexOfAny(System.Char[])" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="anyOf" position="0" attrib="0" type="System.Char[]" />
                </parameters>
              </method>
              <method name="Insert(System.Int32, System.String)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="startIndex" position="0" attrib="0" type="System.Int32" />
                  <parameter name="value" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Intern(System.String)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="str" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="IsInterned(System.String)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="str" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="IsNullOrEmpty(System.String)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Join(System.String, System.String[], System.Int32, System.Int32)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="separator" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.String[]" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="count" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Join(System.String, System.String[])" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="separator" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.String[]" />
                </parameters>
              </method>
              <method name="LastIndexOf(System.String, System.Int32, System.StringComparison)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="comparisonType" position="2" attrib="0" type="System.StringComparison" />
                </parameters>
              </method>
              <method name="LastIndexOf(System.String, System.Int32, System.Int32, System.StringComparison)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                  <parameter name="comparisonType" position="3" attrib="0" type="System.StringComparison" />
                </parameters>
              </method>
              <method name="LastIndexOf(System.String, System.StringComparison)" attrib="134" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="comparisonType" position="1" attrib="0" type="System.StringComparison" />
                </parameters>
              </method>
              <method name="LastIndexOf(System.Char)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="LastIndexOf(System.Char, System.Int32)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="LastIndexOf(System.Char, System.Int32, System.Int32)" attrib="134" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="LastIndexOf(System.String, System.Int32, System.Int32)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="LastIndexOf(System.String, System.Int32)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="LastIndexOf(System.String)" attrib="134" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="LastIndexOfAny(System.Char[], System.Int32, System.Int32)" attrib="134" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="anyOf" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="LastIndexOfAny(System.Char[], System.Int32)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="anyOf" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="LastIndexOfAny(System.Char[])" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="anyOf" position="0" attrib="0" type="System.Char[]" />
                </parameters>
              </method>
              <method name="op_Equality(System.String, System.String)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.String" />
                  <parameter name="b" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="op_Inequality(System.String, System.String)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.String" />
                  <parameter name="b" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="PadLeft(System.Int32, System.Char)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="totalWidth" position="0" attrib="0" type="System.Int32" />
                  <parameter name="paddingChar" position="1" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="PadLeft(System.Int32)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="totalWidth" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="PadRight(System.Int32)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="totalWidth" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="PadRight(System.Int32, System.Char)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="totalWidth" position="0" attrib="0" type="System.Int32" />
                  <parameter name="paddingChar" position="1" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="Remove(System.Int32, System.Int32)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="startIndex" position="0" attrib="0" type="System.Int32" />
                  <parameter name="count" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Replace(System.String, System.String)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="oldValue" position="0" attrib="0" type="System.String" />
                  <parameter name="newValue" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Replace(System.Char, System.Char)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="oldChar" position="0" attrib="0" type="System.Char" />
                  <parameter name="newChar" position="1" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="Split(System.String[], System.StringSplitOptions)" attrib="134" returntype="System.String[]">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="separator" position="0" attrib="0" type="System.String[]" />
                  <parameter name="options" position="1" attrib="0" type="System.StringSplitOptions" />
                </parameters>
              </method>
              <method name="Split(System.Char[], System.StringSplitOptions)" attrib="134" returntype="System.String[]">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="separator" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="options" position="1" attrib="0" type="System.StringSplitOptions" />
                </parameters>
              </method>
              <method name="Split(System.Char[])" attrib="134" returntype="System.String[]">
                <parameters>
                  <parameter name="separator" position="0" attrib="0" type="System.Char[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="StartsWith(System.String)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="StartsWith(System.String, System.StringComparison)" attrib="134" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="comparisonType" position="1" attrib="0" type="System.StringComparison" />
                </parameters>
              </method>
              <method name="Substring(System.Int32)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="startIndex" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Substring(System.Int32, System.Int32)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="startIndex" position="0" attrib="0" type="System.Int32" />
                  <parameter name="length" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToCharArray()" attrib="134" returntype="System.Char[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToLower()" attrib="134" returntype="System.String">
                <parameters />
              </method>
              <method name="ToLower(System.Globalization.CultureInfo)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="culture" position="0" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
              <method name="ToString(System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ToUpper(System.Globalization.CultureInfo)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="culture" position="0" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
              <method name="ToUpper()" attrib="134" returntype="System.String">
                <parameters />
              </method>
              <method name="Trim()" attrib="134" returntype="System.String">
                <parameters />
              </method>
              <method name="Trim(System.Char[])" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="trimChars" position="0" attrib="0" type="System.Char[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="TrimEnd(System.Char[])" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="trimChars" position="0" attrib="0" type="System.Char[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="TrimStart(System.Char[])" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="trimChars" position="0" attrib="0" type="System.Char[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
            </methods>
          </class>
          <class name="StringComparer" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.Collections.IComparer" />
              <interface name="System.Collections.IEqualityComparer" />
              <interface name="System.Collections.Generic.IComparer`1[System.String]" />
              <interface name="System.Collections.Generic.IEqualityComparer`1[System.String]" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="CurrentCulture" attrib="0" ptype="System.StringComparer" params="">
                <methods>
                  <method name="get_CurrentCulture()" attrib="2198" static="true" returntype="System.StringComparer">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CurrentCultureIgnoreCase" attrib="0" ptype="System.StringComparer" params="">
                <methods>
                  <method name="get_CurrentCultureIgnoreCase()" attrib="2198" static="true" returntype="System.StringComparer">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="InvariantCulture" attrib="0" ptype="System.StringComparer" params="">
                <methods>
                  <method name="get_InvariantCulture()" attrib="2198" static="true" returntype="System.StringComparer">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="InvariantCultureIgnoreCase" attrib="0" ptype="System.StringComparer" params="">
                <methods>
                  <method name="get_InvariantCultureIgnoreCase()" attrib="2198" static="true" returntype="System.StringComparer">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Ordinal" attrib="0" ptype="System.StringComparer" params="">
                <methods>
                  <method name="get_Ordinal()" attrib="2198" static="true" returntype="System.StringComparer">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OrdinalIgnoreCase" attrib="0" ptype="System.StringComparer" params="">
                <methods>
                  <method name="get_OrdinalIgnoreCase()" attrib="2198" static="true" returntype="System.StringComparer">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Compare(System.String, System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="System.String" />
                  <parameter name="y" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Compare(System.Object, System.Object)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="System.Object" />
                  <parameter name="y" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Create(System.Globalization.CultureInfo, System.Boolean)" attrib="150" static="true" returntype="System.StringComparer">
                <parameters>
                  <parameter name="culture" position="0" attrib="0" type="System.Globalization.CultureInfo" />
                  <parameter name="ignoreCase" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Equals(System.String, System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="System.String" />
                  <parameter name="y" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Equals(System.Object, System.Object)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="System.Object" />
                  <parameter name="y" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetHashCode(System.Object)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="StringComparison" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="CurrentCulture" attrib="32854" fieldtype="System.StringComparison" value="0" />
              <field name="CurrentCultureIgnoreCase" attrib="32854" fieldtype="System.StringComparison" value="1" />
              <field name="InvariantCulture" attrib="32854" fieldtype="System.StringComparison" value="2" />
              <field name="InvariantCultureIgnoreCase" attrib="32854" fieldtype="System.StringComparison" value="3" />
              <field name="Ordinal" attrib="32854" fieldtype="System.StringComparison" value="4" />
              <field name="OrdinalIgnoreCase" attrib="32854" fieldtype="System.StringComparison" value="5" />
            </fields>
          </class>
          <class name="StringSplitOptions" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <fields>
              <field name="None" attrib="32854" fieldtype="System.StringSplitOptions" value="0" />
              <field name="RemoveEmptyEntries" attrib="32854" fieldtype="System.StringSplitOptions" value="1" />
            </fields>
          </class>
          <class name="SystemException" type="class" base="System.Exception" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="ThreadStaticAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="TimeoutException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="TimeSpan" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IComparable`1[System.TimeSpan]" />
              <interface name="System.IEquatable`1[System.TimeSpan]" />
            </interfaces>
            <fields>
              <field name="MaxValue" attrib="54" fieldtype="System.TimeSpan" />
              <field name="MinValue" attrib="54" fieldtype="System.TimeSpan" />
              <field name="TicksPerDay" attrib="32854" fieldtype="System.Int64" value="864000000000" />
              <field name="TicksPerHour" attrib="32854" fieldtype="System.Int64" value="36000000000" />
              <field name="TicksPerMillisecond" attrib="32854" fieldtype="System.Int64" value="10000" />
              <field name="TicksPerMinute" attrib="32854" fieldtype="System.Int64" value="600000000" />
              <field name="TicksPerSecond" attrib="32854" fieldtype="System.Int64" value="10000000" />
              <field name="Zero" attrib="54" fieldtype="System.TimeSpan" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Int32, System.Int32, System.Int32, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="days" position="0" attrib="0" type="System.Int32" />
                  <parameter name="hours" position="1" attrib="0" type="System.Int32" />
                  <parameter name="minutes" position="2" attrib="0" type="System.Int32" />
                  <parameter name="seconds" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="days" position="0" attrib="0" type="System.Int32" />
                  <parameter name="hours" position="1" attrib="0" type="System.Int32" />
                  <parameter name="minutes" position="2" attrib="0" type="System.Int32" />
                  <parameter name="seconds" position="3" attrib="0" type="System.Int32" />
                  <parameter name="milliseconds" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int64)" attrib="6278">
                <parameters>
                  <parameter name="ticks" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32, System.Int32, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="hours" position="0" attrib="0" type="System.Int32" />
                  <parameter name="minutes" position="1" attrib="0" type="System.Int32" />
                  <parameter name="seconds" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Days" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Days()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Hours" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Hours()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Milliseconds" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Milliseconds()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Minutes" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Minutes()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Seconds" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Seconds()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Ticks" attrib="0" ptype="System.Int64" params="">
                <methods>
                  <method name="get_Ticks()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TotalDays" attrib="0" ptype="System.Double" params="">
                <methods>
                  <method name="get_TotalDays()" attrib="2182" returntype="System.Double">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TotalHours" attrib="0" ptype="System.Double" params="">
                <methods>
                  <method name="get_TotalHours()" attrib="2182" returntype="System.Double">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TotalMilliseconds" attrib="0" ptype="System.Double" params="">
                <methods>
                  <method name="get_TotalMilliseconds()" attrib="2182" returntype="System.Double">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TotalMinutes" attrib="0" ptype="System.Double" params="">
                <methods>
                  <method name="get_TotalMinutes()" attrib="2182" returntype="System.Double">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TotalSeconds" attrib="0" ptype="System.Double" params="">
                <methods>
                  <method name="get_TotalSeconds()" attrib="2182" returntype="System.Double">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(System.TimeSpan)" attrib="134" returntype="System.TimeSpan">
                <parameters>
                  <parameter name="ts" position="0" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="Compare(System.TimeSpan, System.TimeSpan)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="t1" position="0" attrib="0" type="System.TimeSpan" />
                  <parameter name="t2" position="1" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="CompareTo(System.TimeSpan)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="CompareTo(System.Object)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Duration()" attrib="134" returntype="System.TimeSpan">
                <parameters />
              </method>
              <method name="Equals(System.TimeSpan)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="Equals(System.TimeSpan, System.TimeSpan)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="t1" position="0" attrib="0" type="System.TimeSpan" />
                  <parameter name="t2" position="1" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="FromDays(System.Double)" attrib="150" static="true" returntype="System.TimeSpan">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="FromHours(System.Double)" attrib="150" static="true" returntype="System.TimeSpan">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="FromMilliseconds(System.Double)" attrib="150" static="true" returntype="System.TimeSpan">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="FromMinutes(System.Double)" attrib="150" static="true" returntype="System.TimeSpan">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="FromSeconds(System.Double)" attrib="150" static="true" returntype="System.TimeSpan">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="FromTicks(System.Int64)" attrib="150" static="true" returntype="System.TimeSpan">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Negate()" attrib="134" returntype="System.TimeSpan">
                <parameters />
              </method>
              <method name="op_Addition(System.TimeSpan, System.TimeSpan)" attrib="2198" static="true" returntype="System.TimeSpan">
                <parameters>
                  <parameter name="t1" position="0" attrib="0" type="System.TimeSpan" />
                  <parameter name="t2" position="1" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="op_Equality(System.TimeSpan, System.TimeSpan)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="t1" position="0" attrib="0" type="System.TimeSpan" />
                  <parameter name="t2" position="1" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="op_GreaterThan(System.TimeSpan, System.TimeSpan)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="t1" position="0" attrib="0" type="System.TimeSpan" />
                  <parameter name="t2" position="1" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="op_GreaterThanOrEqual(System.TimeSpan, System.TimeSpan)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="t1" position="0" attrib="0" type="System.TimeSpan" />
                  <parameter name="t2" position="1" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="op_Inequality(System.TimeSpan, System.TimeSpan)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="t1" position="0" attrib="0" type="System.TimeSpan" />
                  <parameter name="t2" position="1" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="op_LessThan(System.TimeSpan, System.TimeSpan)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="t1" position="0" attrib="0" type="System.TimeSpan" />
                  <parameter name="t2" position="1" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="op_LessThanOrEqual(System.TimeSpan, System.TimeSpan)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="t1" position="0" attrib="0" type="System.TimeSpan" />
                  <parameter name="t2" position="1" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="op_Subtraction(System.TimeSpan, System.TimeSpan)" attrib="2198" static="true" returntype="System.TimeSpan">
                <parameters>
                  <parameter name="t1" position="0" attrib="0" type="System.TimeSpan" />
                  <parameter name="t2" position="1" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="op_UnaryNegation(System.TimeSpan)" attrib="2198" static="true" returntype="System.TimeSpan">
                <parameters>
                  <parameter name="t" position="0" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="Parse(System.String)" attrib="150" static="true" returntype="System.TimeSpan">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Subtract(System.TimeSpan)" attrib="134" returntype="System.TimeSpan">
                <parameters>
                  <parameter name="ts" position="0" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
              <method name="TryParse(System.String, out System.TimeSpan&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="result" position="1" attrib="2" type="System.TimeSpan&amp;" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Type" type="class" base="System.Reflection.MemberInfo" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.Reflection.IReflect" />
            </interfaces>
            <fields>
              <field name="Delimiter" attrib="54" fieldtype="System.Char" />
              <field name="EmptyTypes" attrib="54" fieldtype="System.Type[]" />
              <field name="FilterNameIgnoreCase" attrib="54" fieldtype="System.Reflection.MemberFilter" />
              <field name="Missing" attrib="54" fieldtype="System.Object" />
            </fields>
            <properties>
              <property name="Assembly" attrib="0" ptype="System.Reflection.Assembly" params="">
                <methods>
                  <method name="get_Assembly()" attrib="3526" abstract="true" virtual="true" returntype="System.Reflection.Assembly">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="AssemblyQualifiedName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_AssemblyQualifiedName()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Attributes" attrib="0" ptype="System.Reflection.TypeAttributes" params="">
                <methods>
                  <method name="get_Attributes()" attrib="2534" virtual="true" returntype="System.Reflection.TypeAttributes">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="BaseType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_BaseType()" attrib="3526" abstract="true" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ContainsGenericParameters" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_ContainsGenericParameters()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DeclaringMethod" attrib="0" ptype="System.Reflection.MethodBase" params="">
                <methods>
                  <method name="get_DeclaringMethod()" attrib="2502" virtual="true" returntype="System.Reflection.MethodBase">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DeclaringType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_DeclaringType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DefaultBinder" attrib="0" ptype="System.Reflection.Binder" params="">
                <methods>
                  <method name="get_DefaultBinder()" attrib="2198" static="true" returntype="System.Reflection.Binder">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="FullName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_FullName()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="GenericParameterAttributes" attrib="0" ptype="System.Reflection.GenericParameterAttributes" params="">
                <methods>
                  <method name="get_GenericParameterAttributes()" attrib="2502" virtual="true" returntype="System.Reflection.GenericParameterAttributes">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="GenericParameterPosition" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_GenericParameterPosition()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="GUID" attrib="0" ptype="System.Guid" params="">
                <methods>
                  <method name="get_GUID()" attrib="3526" abstract="true" virtual="true" returntype="System.Guid">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="HasElementType" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_HasElementType()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsAbstract" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsAbstract()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsAnsiClass" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsAnsiClass()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsArray" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsArray()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsAutoClass" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsAutoClass()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsAutoLayout" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsAutoLayout()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsByRef" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsByRef()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsClass" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsClass()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsCOMObject" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsCOMObject()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsEnum" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsEnum()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsGenericParameter" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsGenericParameter()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsGenericType" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsGenericType()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsGenericTypeDefinition" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsGenericTypeDefinition()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsImport" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsImport()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsInterface" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsInterface()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsNestedAssembly" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsNestedAssembly()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsNestedFamANDAssem" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsNestedFamANDAssem()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsNestedFamily" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsNestedFamily()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsNestedFamORAssem" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsNestedFamORAssem()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsNestedPrivate" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsNestedPrivate()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsNestedPublic" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsNestedPublic()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsNotPublic" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsNotPublic()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsPointer" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsPointer()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsPrimitive" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsPrimitive()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsPublic" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsPublic()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsSealed" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsSealed()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsSpecialName" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsSpecialName()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsUnicodeClass" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsUnicodeClass()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsValueType" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsValueType()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsVisible" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsVisible()" attrib="2182" returntype="System.Boolean">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MemberType" attrib="0" ptype="System.Reflection.MemberTypes" params="">
                <methods>
                  <method name="get_MemberType()" attrib="2246" virtual="true" returntype="System.Reflection.MemberTypes">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Module" attrib="0" ptype="System.Reflection.Module" params="">
                <methods>
                  <method name="get_Module()" attrib="3526" abstract="true" virtual="true" returntype="System.Reflection.Module">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Namespace" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Namespace()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReflectedType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_ReflectedType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TypeHandle" attrib="0" ptype="System.RuntimeTypeHandle" params="">
                <methods>
                  <method name="get_TypeHandle()" attrib="2502" virtual="true" returntype="System.RuntimeTypeHandle">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UnderlyingSystemType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_UnderlyingSystemType()" attrib="3526" abstract="true" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Type)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="FindMembers(System.Reflection.MemberTypes, System.Reflection.BindingFlags, System.Reflection.MemberFilter, System.Object)" attrib="454" virtual="true" returntype="System.Reflection.MemberInfo[]">
                <parameters>
                  <parameter name="memberType" position="0" attrib="0" type="System.Reflection.MemberTypes" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="filter" position="2" attrib="0" type="System.Reflection.MemberFilter" />
                  <parameter name="filterCriteria" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetArrayRank()" attrib="454" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetAttributeFlagsImpl()" attrib="1476" abstract="true" virtual="true" returntype="System.Reflection.TypeAttributes">
                <parameters />
              </method>
              <method name="GetConstructor(System.Type[])" attrib="486" virtual="true" returntype="System.Reflection.ConstructorInfo">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="types" position="0" attrib="0" type="System.Type[]" />
                </parameters>
              </method>
              <method name="GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])" attrib="486" virtual="true" returntype="System.Reflection.ConstructorInfo">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="1" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="types" position="2" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="3" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="GetConstructorImpl(System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])" attrib="1476" abstract="true" virtual="true" returntype="System.Reflection.ConstructorInfo">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="1" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="callConvention" position="2" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="types" position="3" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="4" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="GetConstructors()" attrib="486" virtual="true" returntype="System.Reflection.ConstructorInfo[]">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetConstructors(System.Reflection.BindingFlags)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.ConstructorInfo[]">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetDefaultMembers()" attrib="454" virtual="true" returntype="System.Reflection.MemberInfo[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetElementType()" attrib="1478" abstract="true" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="GetEvent(System.String, System.Reflection.BindingFlags)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.EventInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetEvent(System.String)" attrib="486" virtual="true" returntype="System.Reflection.EventInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetEvents(System.Reflection.BindingFlags)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.EventInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetEvents()" attrib="454" virtual="true" returntype="System.Reflection.EventInfo[]">
                <parameters />
              </method>
              <method name="GetField(System.String)" attrib="486" virtual="true" returntype="System.Reflection.FieldInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetField(System.String, System.Reflection.BindingFlags)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.FieldInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetFields()" attrib="486" virtual="true" returntype="System.Reflection.FieldInfo[]">
                <parameters />
              </method>
              <method name="GetFields(System.Reflection.BindingFlags)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.FieldInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetGenericArguments()" attrib="454" virtual="true" returntype="System.Type[]">
                <parameters />
              </method>
              <method name="GetGenericParameterConstraints()" attrib="454" virtual="true" returntype="System.Type[]">
                <parameters />
              </method>
              <method name="GetGenericTypeDefinition()" attrib="454" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetInterface(System.String, System.Boolean)" attrib="1478" abstract="true" virtual="true" returntype="System.Type">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ignoreCase" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetInterfaceMap(System.Type)" attrib="454" virtual="true" returntype="System.Reflection.InterfaceMapping">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="interfaceType" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetInterfaces()" attrib="1478" abstract="true" virtual="true" returntype="System.Type[]">
                <parameters />
              </method>
              <method name="GetMember(System.String, System.Reflection.BindingFlags)" attrib="454" virtual="true" returntype="System.Reflection.MemberInfo[]">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetMember(System.String)" attrib="486" virtual="true" returntype="System.Reflection.MemberInfo[]">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetMember(System.String, System.Reflection.MemberTypes, System.Reflection.BindingFlags)" attrib="454" virtual="true" returntype="System.Reflection.MemberInfo[]">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="type" position="1" attrib="0" type="System.Reflection.MemberTypes" />
                  <parameter name="bindingAttr" position="2" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetMembers(System.Reflection.BindingFlags)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.MemberInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetMembers()" attrib="486" virtual="true" returntype="System.Reflection.MemberInfo[]">
                <parameters />
              </method>
              <method name="GetMethod(System.String, System.Type[], System.Reflection.ParameterModifier[])" attrib="486" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="types" position="1" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="2" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="GetMethod(System.String, System.Type[])" attrib="486" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="types" position="1" attrib="0" type="System.Type[]" />
                </parameters>
              </method>
              <method name="GetMethod(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])" attrib="486" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="callConvention" position="3" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="types" position="4" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="5" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="GetMethod(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])" attrib="486" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="types" position="3" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="4" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="GetMethod(System.String, System.Reflection.BindingFlags)" attrib="486" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetMethod(System.String)" attrib="486" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetMethodImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])" attrib="1476" abstract="true" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="callConvention" position="3" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="types" position="4" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="5" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="GetMethods(System.Reflection.BindingFlags)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.MethodInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetMethods()" attrib="486" virtual="true" returntype="System.Reflection.MethodInfo[]">
                <parameters />
              </method>
              <method name="GetNestedType(System.String, System.Reflection.BindingFlags)" attrib="1478" abstract="true" virtual="true" returntype="System.Type">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetNestedTypes(System.Reflection.BindingFlags)" attrib="1478" abstract="true" virtual="true" returntype="System.Type[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetProperties(System.Reflection.BindingFlags)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.PropertyInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetProperties()" attrib="486" virtual="true" returntype="System.Reflection.PropertyInfo[]">
                <parameters />
              </method>
              <method name="GetProperty(System.String, System.Reflection.BindingFlags)" attrib="486" virtual="true" returntype="System.Reflection.PropertyInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetProperty(System.String, System.Type, System.Type[], System.Reflection.ParameterModifier[])" attrib="486" virtual="true" returntype="System.Reflection.PropertyInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="returnType" position="1" attrib="0" type="System.Type" />
                  <parameter name="types" position="2" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="3" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="GetProperty(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])" attrib="486" virtual="true" returntype="System.Reflection.PropertyInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="returnType" position="3" attrib="0" type="System.Type" />
                  <parameter name="types" position="4" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="5" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="GetProperty(System.String, System.Type, System.Type[])" attrib="486" virtual="true" returntype="System.Reflection.PropertyInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="returnType" position="1" attrib="0" type="System.Type" />
                  <parameter name="types" position="2" attrib="0" type="System.Type[]" />
                </parameters>
              </method>
              <method name="GetProperty(System.String)" attrib="486" virtual="true" returntype="System.Reflection.PropertyInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetProperty(System.String, System.Type)" attrib="486" virtual="true" returntype="System.Reflection.PropertyInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="returnType" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetPropertyImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])" attrib="1476" abstract="true" virtual="true" returntype="System.Reflection.PropertyInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="returnType" position="3" attrib="0" type="System.Type" />
                  <parameter name="types" position="4" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="5" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="GetType(System.String, System.Boolean, System.Boolean)" attrib="150" static="true" returntype="System.Type">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="typeName" position="0" attrib="0" type="System.String" />
                  <parameter name="throwOnError" position="1" attrib="0" type="System.Boolean" />
                  <parameter name="ignoreCase" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetType()" attrib="486" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="GetType(System.String)" attrib="150" static="true" returntype="System.Type">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="typeName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetType(System.String, System.Boolean)" attrib="150" static="true" returntype="System.Type">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="typeName" position="0" attrib="0" type="System.String" />
                  <parameter name="throwOnError" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetTypeCode(System.Type)" attrib="150" static="true" returntype="System.TypeCode">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetTypeFromHandle(System.RuntimeTypeHandle)" attrib="150" static="true" returntype="System.Type">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="handle" position="0" attrib="0" type="System.RuntimeTypeHandle" />
                </parameters>
              </method>
              <method name="HasElementTypeImpl()" attrib="1476" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[])" attrib="486" virtual="true" returntype="System.Object">
                <attributes>
                  <attribute name="System.Diagnostics.DebuggerStepThroughAttribute" />
                  <attribute name="System.Diagnostics.DebuggerHiddenAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="invokeAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="target" position="3" attrib="0" type="System.Object" />
                  <parameter name="args" position="4" attrib="0" type="System.Object[]" />
                </parameters>
              </method>
              <method name="InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[], System.Reflection.ParameterModifier[], System.Globalization.CultureInfo, System.String[])" attrib="1478" abstract="true" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="invokeAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="target" position="3" attrib="0" type="System.Object" />
                  <parameter name="args" position="4" attrib="0" type="System.Object[]" />
                  <parameter name="modifiers" position="5" attrib="0" type="System.Reflection.ParameterModifier[]" />
                  <parameter name="culture" position="6" attrib="0" type="System.Globalization.CultureInfo" />
                  <parameter name="namedParameters" position="7" attrib="0" type="System.String[]" />
                </parameters>
              </method>
              <method name="IsArrayImpl()" attrib="1476" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsAssignableFrom(System.Type)" attrib="454" virtual="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="IsByRefImpl()" attrib="1476" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsCOMObjectImpl()" attrib="1476" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsInstanceOfType(System.Object)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="IsPointerImpl()" attrib="1476" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsPrimitiveImpl()" attrib="1476" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsSubclassOf(System.Type)" attrib="454" virtual="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="IsValueTypeImpl()" attrib="452" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="MakeArrayType(System.Int32)" attrib="454" virtual="true" returntype="System.Type">
                <parameters>
                  <parameter name="rank" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="MakeArrayType()" attrib="454" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="MakeByRefType()" attrib="454" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="MakeGenericType(System.Type[])" attrib="454" virtual="true" returntype="System.Type">
                <parameters>
                  <parameter name="typeArguments" position="0" attrib="0" type="System.Type[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="MakePointerType()" attrib="454" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="TypeCode" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Boolean" attrib="32854" fieldtype="System.TypeCode" value="3" />
              <field name="Byte" attrib="32854" fieldtype="System.TypeCode" value="6" />
              <field name="Char" attrib="32854" fieldtype="System.TypeCode" value="4" />
              <field name="DateTime" attrib="32854" fieldtype="System.TypeCode" value="16" />
              <field name="DBNull" attrib="32854" fieldtype="System.TypeCode" value="2" />
              <field name="Decimal" attrib="32854" fieldtype="System.TypeCode" value="15" />
              <field name="Double" attrib="32854" fieldtype="System.TypeCode" value="14" />
              <field name="Empty" attrib="32854" fieldtype="System.TypeCode" value="0" />
              <field name="Int16" attrib="32854" fieldtype="System.TypeCode" value="7" />
              <field name="Int32" attrib="32854" fieldtype="System.TypeCode" value="9" />
              <field name="Int64" attrib="32854" fieldtype="System.TypeCode" value="11" />
              <field name="Object" attrib="32854" fieldtype="System.TypeCode" value="1" />
              <field name="SByte" attrib="32854" fieldtype="System.TypeCode" value="5" />
              <field name="Single" attrib="32854" fieldtype="System.TypeCode" value="13" />
              <field name="String" attrib="32854" fieldtype="System.TypeCode" value="18" />
              <field name="UInt16" attrib="32854" fieldtype="System.TypeCode" value="8" />
              <field name="UInt32" attrib="32854" fieldtype="System.TypeCode" value="10" />
              <field name="UInt64" attrib="32854" fieldtype="System.TypeCode" value="12" />
            </fields>
          </class>
          <class name="TypedReference" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.CLSCompliantAttribute" />
            </attributes>
            <methods>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="TypeInitializationException" type="class" base="System.SystemException" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="fullTypeName" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="TypeName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_TypeName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="TypeLoadException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Message" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Message()" attrib="2246" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="UInt16" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.CLSCompliantAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IFormattable" />
              <interface name="System.IConvertible" />
              <interface name="System.IComparable`1[System.UInt16]" />
              <interface name="System.IEquatable`1[System.UInt16]" />
            </interfaces>
            <fields>
              <field name="MaxValue" attrib="32854" fieldtype="System.UInt16" value="65535" />
              <field name="MinValue" attrib="32854" fieldtype="System.UInt16" value="0" />
            </fields>
            <methods>
              <method name="CompareTo(System.UInt16)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="CompareTo(System.Object)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Equals(System.UInt16)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetTypeCode()" attrib="486" virtual="true" returntype="System.TypeCode">
                <parameters />
              </method>
              <method name="Parse(System.String)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles, System.IFormatProvider)" attrib="150" static="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToString(System.String, System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.String)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, out System.UInt16&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                  <parameter name="result" position="3" attrib="2" type="System.UInt16&amp;" direction="out" />
                </parameters>
              </method>
              <method name="TryParse(System.String, out System.UInt16&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="result" position="1" attrib="2" type="System.UInt16&amp;" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="UInt32" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.CLSCompliantAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IFormattable" />
              <interface name="System.IConvertible" />
              <interface name="System.IComparable`1[System.UInt32]" />
              <interface name="System.IEquatable`1[System.UInt32]" />
            </interfaces>
            <fields>
              <field name="MaxValue" attrib="32854" fieldtype="System.UInt32" value="4294967295" />
              <field name="MinValue" attrib="32854" fieldtype="System.UInt32" value="0" />
            </fields>
            <methods>
              <method name="CompareTo(System.UInt32)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="CompareTo(System.Object)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Equals(System.UInt32)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetTypeCode()" attrib="486" virtual="true" returntype="System.TypeCode">
                <parameters />
              </method>
              <method name="Parse(System.String)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles, System.IFormatProvider)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToString(System.String, System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.String)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, out System.UInt32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                  <parameter name="result" position="3" attrib="2" type="System.UInt32&amp;" direction="out" />
                </parameters>
              </method>
              <method name="TryParse(System.String, out System.UInt32&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="result" position="1" attrib="2" type="System.UInt32&amp;" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="UInt64" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.CLSCompliantAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IFormattable" />
              <interface name="System.IConvertible" />
              <interface name="System.IComparable`1[System.UInt64]" />
              <interface name="System.IEquatable`1[System.UInt64]" />
            </interfaces>
            <fields>
              <field name="MaxValue" attrib="32854" fieldtype="System.UInt64" value="18446744073709551615" />
              <field name="MinValue" attrib="32854" fieldtype="System.UInt64" value="0" />
            </fields>
            <methods>
              <method name="CompareTo(System.UInt64)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="CompareTo(System.Object)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Equals(System.UInt64)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetTypeCode()" attrib="486" virtual="true" returntype="System.TypeCode">
                <parameters />
              </method>
              <method name="Parse(System.String)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                </parameters>
              </method>
              <method name="Parse(System.String, System.Globalization.NumberStyles, System.IFormatProvider)" attrib="150" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToString(System.String, System.IFormatProvider)" attrib="486" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="provider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ToString(System.String)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, out System.UInt64&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="style" position="1" attrib="0" type="System.Globalization.NumberStyles" />
                  <parameter name="provider" position="2" attrib="0" type="System.IFormatProvider" />
                  <parameter name="result" position="3" attrib="2" type="System.UInt64&amp;" direction="out" />
                </parameters>
              </method>
              <method name="TryParse(System.String, out System.UInt64&amp;)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="result" position="1" attrib="2" type="System.UInt64&amp;" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="UIntPtr" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.CLSCompliantAttribute" />
            </attributes>
            <fields>
              <field name="Zero" attrib="54" fieldtype="System.UIntPtr" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Void*)" attrib="6278">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Void*" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.UInt64)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.UInt32)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Size" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Size()" attrib="2198" static="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="op_Equality(System.UIntPtr, System.UIntPtr)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.UIntPtr" />
                  <parameter name="value2" position="1" attrib="0" type="System.UIntPtr" />
                </parameters>
              </method>
              <method name="op_Explicit(System.UIntPtr)" attrib="2198" static="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UIntPtr" />
                </parameters>
              </method>
              <method name="op_Explicit(System.UIntPtr)" attrib="2198" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UIntPtr" />
                </parameters>
              </method>
              <method name="op_Explicit(System.UIntPtr)" attrib="2198" static="true" returntype="System.Void*">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UIntPtr" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Void*)" attrib="2198" static="true" returntype="System.UIntPtr">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Void*" />
                </parameters>
              </method>
              <method name="op_Explicit(System.UInt32)" attrib="2198" static="true" returntype="System.UIntPtr">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="op_Explicit(System.UInt64)" attrib="2198" static="true" returntype="System.UIntPtr">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="op_Inequality(System.UIntPtr, System.UIntPtr)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value1" position="0" attrib="0" type="System.UIntPtr" />
                  <parameter name="value2" position="1" attrib="0" type="System.UIntPtr" />
                </parameters>
              </method>
              <method name="ToPointer()" attrib="134" returntype="System.Void*">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToUInt32()" attrib="134" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToUInt64()" attrib="134" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
            </methods>
          </class>
          <class name="UnauthorizedAccessException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="UnhandledExceptionEventArgs" type="class" base="System.EventArgs" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Object, System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="exception" position="0" attrib="0" type="System.Object" />
                  <parameter name="isTerminating" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="ExceptionObject" attrib="0" ptype="System.Object" params="">
                <methods>
                  <method name="get_ExceptionObject()" attrib="2182" returntype="System.Object">
                    <attributes />
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsTerminating" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsTerminating()" attrib="2182" returntype="System.Boolean">
                    <attributes />
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="UnhandledExceptionEventHandler" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Object, System.UnhandledExceptionEventArgs, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="sender" position="0" attrib="0" type="System.Object" />
                  <parameter name="e" position="1" attrib="0" type="System.UnhandledExceptionEventArgs" />
                  <parameter name="callback" position="2" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Object, System.UnhandledExceptionEventArgs)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="sender" position="0" attrib="0" type="System.Object" />
                  <parameter name="e" position="1" attrib="0" type="System.UnhandledExceptionEventArgs" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="ValueType" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="Version" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IComparable`1[System.Version]" />
              <interface name="System.IEquatable`1[System.Version]" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Int32, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="major" position="0" attrib="0" type="System.Int32" />
                  <parameter name="minor" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="version" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32, System.Int32, System.Int32, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="major" position="0" attrib="0" type="System.Int32" />
                  <parameter name="minor" position="1" attrib="0" type="System.Int32" />
                  <parameter name="build" position="2" attrib="0" type="System.Int32" />
                  <parameter name="revision" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32, System.Int32, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="major" position="0" attrib="0" type="System.Int32" />
                  <parameter name="minor" position="1" attrib="0" type="System.Int32" />
                  <parameter name="build" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Build" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Build()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Major" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Major()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Minor" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Minor()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Revision" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Revision()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Clone()" attrib="486" virtual="true" returntype="System.Object">
                <parameters />
              </method>
              <method name="CompareTo(System.Version)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Version" />
                </parameters>
              </method>
              <method name="CompareTo(System.Object)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="version" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Equals(System.Version)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Version" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(System.Version, System.Version)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="v1" position="0" attrib="0" type="System.Version" />
                  <parameter name="v2" position="1" attrib="0" type="System.Version" />
                </parameters>
              </method>
              <method name="op_GreaterThan(System.Version, System.Version)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="v1" position="0" attrib="0" type="System.Version" />
                  <parameter name="v2" position="1" attrib="0" type="System.Version" />
                </parameters>
              </method>
              <method name="op_GreaterThanOrEqual(System.Version, System.Version)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="v1" position="0" attrib="0" type="System.Version" />
                  <parameter name="v2" position="1" attrib="0" type="System.Version" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Version, System.Version)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="v1" position="0" attrib="0" type="System.Version" />
                  <parameter name="v2" position="1" attrib="0" type="System.Version" />
                </parameters>
              </method>
              <method name="op_LessThan(System.Version, System.Version)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="v1" position="0" attrib="0" type="System.Version" />
                  <parameter name="v2" position="1" attrib="0" type="System.Version" />
                </parameters>
              </method>
              <method name="op_LessThanOrEqual(System.Version, System.Version)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="v1" position="0" attrib="0" type="System.Version" />
                  <parameter name="v2" position="1" attrib="0" type="System.Version" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ToString(System.Int32)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="fieldCount" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Void" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
          </class>
          <class name="WeakReference" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Object, System.Boolean)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="target" position="0" attrib="0" type="System.Object" />
                  <parameter name="trackResurrection" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Object)" attrib="6278">
                <parameters>
                  <parameter name="target" position="0" attrib="0" type="System.Object" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6276">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="IsAlive" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsAlive()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Target" attrib="0" ptype="System.Object" params="">
                <methods>
                  <method name="get_Target()" attrib="2502" virtual="true" returntype="System.Object">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_Target(System.Object)" attrib="2502" virtual="true" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Object" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="TrackResurrection" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_TrackResurrection()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Finalize()" attrib="196" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Collections">
        <classes>
          <class name="BitArray" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.Collections.ICollection" />
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Boolean[])" attrib="6278">
                <parameters>
                  <parameter name="values" position="0" attrib="0" type="System.Boolean[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32[])" attrib="6278">
                <parameters>
                  <parameter name="values" position="0" attrib="0" type="System.Int32[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Collections.BitArray)" attrib="6278">
                <parameters>
                  <parameter name="bits" position="0" attrib="0" type="System.Collections.BitArray" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="length" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32, System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="length" position="0" attrib="0" type="System.Int32" />
                  <parameter name="defaultValue" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="bytes" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Count" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Count()" attrib="2534" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsReadOnly" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsReadOnly()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsSynchronized" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsSynchronized()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="System.Boolean" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2182" returntype="System.Boolean">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="set_Item(System.Int32, System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                      <parameter name="value" position="1" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Length" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Length()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_Length(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SyncRoot" attrib="0" ptype="System.Object" params="">
                <methods>
                  <method name="get_SyncRoot()" attrib="2534" virtual="true" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="And(System.Collections.BitArray)" attrib="134" returntype="System.Collections.BitArray">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Collections.BitArray" />
                </parameters>
              </method>
              <method name="Clone()" attrib="486" virtual="true" returntype="System.Object">
                <parameters />
              </method>
              <method name="CopyTo(System.Array, System.Int32)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Array" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Get(System.Int32)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetEnumerator()" attrib="486" virtual="true" returntype="System.Collections.IEnumerator">
                <parameters />
              </method>
              <method name="Not()" attrib="134" returntype="System.Collections.BitArray">
                <parameters />
              </method>
              <method name="Or(System.Collections.BitArray)" attrib="134" returntype="System.Collections.BitArray">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Collections.BitArray" />
                </parameters>
              </method>
              <method name="Set(System.Int32, System.Boolean)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="value" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="SetAll(System.Boolean)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Xor(System.Collections.BitArray)" attrib="134" returntype="System.Collections.BitArray">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Collections.BitArray" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="DictionaryEntry" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Object, System.Object)" attrib="6278">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="System.Object" />
                  <parameter name="value" position="1" attrib="0" type="System.Object" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Key" attrib="0" ptype="System.Object" params="">
                <methods>
                  <method name="get_Key()" attrib="2182" returntype="System.Object">
                    <parameters />
                  </method>
                  <method name="set_Key(System.Object)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Object" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="System.Object" params="">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="System.Object">
                    <parameters />
                  </method>
                  <method name="set_Value(System.Object)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Object" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="ICollection" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
            <properties>
              <property name="Count" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Count()" attrib="3526" abstract="true" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsSynchronized" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsSynchronized()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SyncRoot" attrib="0" ptype="System.Object" params="">
                <methods>
                  <method name="get_SyncRoot()" attrib="3526" abstract="true" virtual="true" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CopyTo(System.Array, System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Array" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IComparer" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <methods>
              <method name="Compare(System.Object, System.Object)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="System.Object" />
                  <parameter name="y" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IDictionary" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.Collections.ICollection" />
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
            <properties>
              <property name="IsFixedSize" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsFixedSize()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsReadOnly" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsReadOnly()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="System.Object" params="System.Object">
                <methods>
                  <method name="get_Item(System.Object)" attrib="3526" abstract="true" virtual="true" returntype="System.Object">
                    <parameters>
                      <parameter name="key" position="0" attrib="0" type="System.Object" />
                    </parameters>
                  </method>
                  <method name="set_Item(System.Object, System.Object)" attrib="3526" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="key" position="0" attrib="0" type="System.Object" />
                      <parameter name="value" position="1" attrib="0" type="System.Object" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Keys" attrib="0" ptype="System.Collections.ICollection" params="">
                <methods>
                  <method name="get_Keys()" attrib="3526" abstract="true" virtual="true" returntype="System.Collections.ICollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Values" attrib="0" ptype="System.Collections.ICollection" params="">
                <methods>
                  <method name="get_Values()" attrib="3526" abstract="true" virtual="true" returntype="System.Collections.ICollection">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(System.Object, System.Object)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="System.Object" />
                  <parameter name="value" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Clear()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Contains(System.Object)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetEnumerator()" attrib="1478" abstract="true" virtual="true" returntype="System.Collections.IDictionaryEnumerator">
                <parameters />
              </method>
              <method name="Remove(System.Object)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IDictionaryEnumerator" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.Collections.IEnumerator" />
            </interfaces>
            <properties>
              <property name="Entry" attrib="0" ptype="System.Collections.DictionaryEntry" params="">
                <methods>
                  <method name="get_Entry()" attrib="3526" abstract="true" virtual="true" returntype="System.Collections.DictionaryEntry">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Key" attrib="0" ptype="System.Object" params="">
                <methods>
                  <method name="get_Key()" attrib="3526" abstract="true" virtual="true" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="System.Object" params="">
                <methods>
                  <method name="get_Value()" attrib="3526" abstract="true" virtual="true" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="IEnumerable" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.GuidAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <methods>
              <method name="GetEnumerator()" attrib="1478" abstract="true" virtual="true" returntype="System.Collections.IEnumerator">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.DispIdAttribute" />
                </attributes>
                <parameters />
              </method>
            </methods>
          </class>
          <class name="IEnumerator" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.GuidAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <properties>
              <property name="Current" attrib="0" ptype="System.Object" params="">
                <methods>
                  <method name="get_Current()" attrib="3526" abstract="true" virtual="true" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="MoveNext()" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="Reset()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="IEqualityComparer" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <methods>
              <method name="Equals(System.Object, System.Object)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="System.Object" />
                  <parameter name="y" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode(System.Object)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IList" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Reflection.DefaultMemberAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.Collections.ICollection" />
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
            <properties>
              <property name="IsFixedSize" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsFixedSize()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsReadOnly" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsReadOnly()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="System.Object" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="3526" abstract="true" virtual="true" returntype="System.Object">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="set_Item(System.Int32, System.Object)" attrib="3526" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                      <parameter name="value" position="1" attrib="0" type="System.Object" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(System.Object)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Clear()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Contains(System.Object)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="IndexOf(System.Object)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Insert(System.Int32, System.Object)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="value" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Remove(System.Object)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="RemoveAt(System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Collections.Generic">
        <classes>
          <class name="Comparer`1" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes />
            <interfaces>
              <interface name="System.Collections.IComparer" />
              <interface name="System.Collections.Generic.IComparer`1[T]" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Default" attrib="0" ptype="System.Collections.Generic.Comparer`1[T]" params="">
                <methods>
                  <method name="get_Default()" attrib="2198" static="true" returntype="System.Collections.Generic.Comparer`1[T]">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Compare(T, T)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="T" />
                  <parameter name="y" position="1" attrib="0" type="T" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Dictionary`2" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Diagnostics.DebuggerDisplayAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Reflection.DefaultMemberAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.Collections.Generic.IDictionary`2[TKey,TValue]" />
              <interface name="System.Collections.Generic.ICollection`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]" />
              <interface name="System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]" />
              <interface name="System.Collections.IDictionary" />
              <interface name="System.Collections.ICollection" />
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Int32, System.Collections.Generic.IEqualityComparer`1[TKey])" attrib="6278">
                <parameters>
                  <parameter name="capacity" position="0" attrib="0" type="System.Int32" />
                  <parameter name="comparer" position="1" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Collections.Generic.IDictionary`2[TKey,TValue])" attrib="6278">
                <parameters>
                  <parameter name="dictionary" position="0" attrib="0" type="System.Collections.Generic.IDictionary`2[TKey,TValue]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Collections.Generic.IDictionary`2[TKey,TValue], System.Collections.Generic.IEqualityComparer`1[TKey])" attrib="6278">
                <parameters>
                  <parameter name="dictionary" position="0" attrib="0" type="System.Collections.Generic.IDictionary`2[TKey,TValue]" />
                  <parameter name="comparer" position="1" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="capacity" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Collections.Generic.IEqualityComparer`1[TKey])" attrib="6278">
                <parameters>
                  <parameter name="comparer" position="0" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Comparer" attrib="0" ptype="System.Collections.Generic.IEqualityComparer`1[TKey]" params="">
                <methods>
                  <method name="get_Comparer()" attrib="2182" returntype="System.Collections.Generic.IEqualityComparer`1[TKey]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Count" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Count()" attrib="2534" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="TValue" params="TKey">
                <methods>
                  <method name="get_Item(TKey)" attrib="2534" virtual="true" returntype="TValue">
                    <parameters>
                      <parameter name="key" position="0" attrib="0" type="TKey" />
                    </parameters>
                  </method>
                  <method name="set_Item(TKey, TValue)" attrib="2534" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="key" position="0" attrib="0" type="TKey" />
                      <parameter name="value" position="1" attrib="0" type="TValue" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Keys" attrib="0" ptype="System.Collections.Generic.Dictionary`2+KeyCollection[TKey,TValue]" params="">
                <methods>
                  <method name="get_Keys()" attrib="2182" returntype="System.Collections.Generic.Dictionary`2+KeyCollection[TKey,TValue]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Values" attrib="0" ptype="System.Collections.Generic.Dictionary`2+ValueCollection[TKey,TValue]" params="">
                <methods>
                  <method name="get_Values()" attrib="2182" returntype="System.Collections.Generic.Dictionary`2+ValueCollection[TKey,TValue]">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(TKey, TValue)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="TKey" />
                  <parameter name="value" position="1" attrib="0" type="TValue" />
                </parameters>
              </method>
              <method name="Clear()" attrib="486" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ContainsKey(TKey)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="TKey" />
                </parameters>
              </method>
              <method name="ContainsValue(TValue)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="TValue" />
                </parameters>
              </method>
              <method name="GetEnumerator()" attrib="134" returntype="System.Collections.Generic.Dictionary`2+Enumerator[TKey,TValue]">
                <parameters />
              </method>
              <method name="Remove(TKey)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="TKey" />
                </parameters>
              </method>
              <method name="TryGetValue(TKey, out TValue&amp;)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="TKey" />
                  <parameter name="value" position="1" attrib="2" type="TValue&amp;" direction="out" />
                </parameters>
              </method>
            </methods>
            <classes>
              <class name="Enumerator" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
                <interfaces>
                  <interface name="System.Collections.Generic.IEnumerator`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]" />
                  <interface name="System.IDisposable" />
                  <interface name="System.Collections.IDictionaryEnumerator" />
                  <interface name="System.Collections.IEnumerator" />
                </interfaces>
                <properties>
                  <property name="Current" attrib="0" ptype="System.Collections.Generic.KeyValuePair`2[TKey,TValue]" params="">
                    <methods>
                      <method name="get_Current()" attrib="2534" virtual="true" returntype="System.Collections.Generic.KeyValuePair`2[TKey,TValue]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="Dispose()" attrib="486" virtual="true" returntype="System.Void">
                    <parameters />
                  </method>
                  <method name="MoveNext()" attrib="486" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </class>
              <class name="KeyCollection" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
                <attributes>
                  <attribute name="System.Diagnostics.DebuggerDisplayAttribute" />
                </attributes>
                <interfaces>
                  <interface name="System.Collections.Generic.ICollection`1[TKey]" />
                  <interface name="System.Collections.Generic.IEnumerable`1[T]" />
                  <interface name="System.Collections.ICollection" />
                  <interface name="System.Collections.IEnumerable" />
                </interfaces>
                <constructors>
                  <constructor name=".ctor(System.Collections.Generic.Dictionary`2[TKey,TValue])" attrib="6278">
                    <parameters>
                      <parameter name="dictionary" position="0" attrib="0" type="System.Collections.Generic.Dictionary`2[TKey,TValue]" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="Count" attrib="0" ptype="System.Int32" params="">
                    <methods>
                      <method name="get_Count()" attrib="2534" virtual="true" returntype="System.Int32">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="CopyTo(TKey[], System.Int32)" attrib="486" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="array" position="0" attrib="0" type="TKey[]" />
                      <parameter name="index" position="1" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="GetEnumerator()" attrib="134" returntype="System.Collections.Generic.Dictionary`2+KeyCollection/Enumerator[TKey,TValue]">
                    <parameters />
                  </method>
                </methods>
                <classes>
                  <class name="Enumerator" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
                    <interfaces>
                      <interface name="System.Collections.Generic.IEnumerator`1[T]" />
                      <interface name="System.IDisposable" />
                      <interface name="System.Collections.IEnumerator" />
                    </interfaces>
                    <properties>
                      <property name="Current" attrib="0" ptype="TKey" params="">
                        <methods>
                          <method name="get_Current()" attrib="2534" virtual="true" returntype="TKey">
                            <parameters />
                          </method>
                        </methods>
                      </property>
                    </properties>
                    <methods>
                      <method name="Dispose()" attrib="486" virtual="true" returntype="System.Void">
                        <parameters />
                      </method>
                      <method name="MoveNext()" attrib="486" virtual="true" returntype="System.Boolean">
                        <parameters />
                      </method>
                    </methods>
                  </class>
                </classes>
              </class>
              <class name="ValueCollection" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
                <attributes>
                  <attribute name="System.Diagnostics.DebuggerDisplayAttribute" />
                </attributes>
                <interfaces>
                  <interface name="System.Collections.Generic.ICollection`1[TValue]" />
                  <interface name="System.Collections.Generic.IEnumerable`1[TValue]" />
                  <interface name="System.Collections.ICollection" />
                  <interface name="System.Collections.IEnumerable" />
                </interfaces>
                <constructors>
                  <constructor name=".ctor(System.Collections.Generic.Dictionary`2[TKey,TValue])" attrib="6278">
                    <parameters>
                      <parameter name="dictionary" position="0" attrib="0" type="System.Collections.Generic.Dictionary`2[TKey,TValue]" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="Count" attrib="0" ptype="System.Int32" params="">
                    <methods>
                      <method name="get_Count()" attrib="2534" virtual="true" returntype="System.Int32">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="CopyTo(TValue[], System.Int32)" attrib="486" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="array" position="0" attrib="0" type="TValue[]" />
                      <parameter name="index" position="1" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="GetEnumerator()" attrib="134" returntype="System.Collections.Generic.Dictionary`2+ValueCollection/Enumerator[TKey,TValue]">
                    <parameters />
                  </method>
                </methods>
                <classes>
                  <class name="Enumerator" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
                    <interfaces>
                      <interface name="System.Collections.Generic.IEnumerator`1[TValue]" />
                      <interface name="System.IDisposable" />
                      <interface name="System.Collections.IEnumerator" />
                    </interfaces>
                    <properties>
                      <property name="Current" attrib="0" ptype="TValue" params="">
                        <methods>
                          <method name="get_Current()" attrib="2534" virtual="true" returntype="TValue">
                            <parameters />
                          </method>
                        </methods>
                      </property>
                    </properties>
                    <methods>
                      <method name="Dispose()" attrib="486" virtual="true" returntype="System.Void">
                        <parameters />
                      </method>
                      <method name="MoveNext()" attrib="486" virtual="true" returntype="System.Boolean">
                        <parameters />
                      </method>
                    </methods>
                  </class>
                </classes>
              </class>
            </classes>
          </class>
          <class name="EqualityComparer`1" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes />
            <interfaces>
              <interface name="System.Collections.IEqualityComparer" />
              <interface name="System.Collections.Generic.IEqualityComparer`1[T]" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Default" attrib="0" ptype="System.Collections.Generic.EqualityComparer`1[T]" params="">
                <methods>
                  <method name="get_Default()" attrib="2198" static="true" returntype="System.Collections.Generic.EqualityComparer`1[T]">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(T, T)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="T" />
                  <parameter name="y" position="1" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="GetHashCode(T)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="T" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="ICollection`1" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes />
            <interfaces>
              <interface name="System.Collections.Generic.IEnumerable`1[T]" />
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
            <properties>
              <property name="Count" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Count()" attrib="3526" abstract="true" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsReadOnly" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsReadOnly()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(T)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="Clear()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Contains(T)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="CopyTo(T[], System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                  <parameter name="arrayIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Remove(T)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="T" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IComparer`1" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="Compare(T, T)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="T" />
                  <parameter name="y" position="1" attrib="0" type="T" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IDictionary`2" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.Collections.Generic.ICollection`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]" />
              <interface name="System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]" />
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
            <properties>
              <property name="Item" attrib="0" ptype="TValue" params="TKey">
                <methods>
                  <method name="get_Item(TKey)" attrib="3526" abstract="true" virtual="true" returntype="TValue">
                    <parameters>
                      <parameter name="key" position="0" attrib="0" type="TKey" />
                    </parameters>
                  </method>
                  <method name="set_Item(TKey, TValue)" attrib="3526" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="key" position="0" attrib="0" type="TKey" />
                      <parameter name="value" position="1" attrib="0" type="TValue" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Keys" attrib="0" ptype="System.Collections.Generic.ICollection`1[TKey]" params="">
                <methods>
                  <method name="get_Keys()" attrib="3526" abstract="true" virtual="true" returntype="System.Collections.Generic.ICollection`1[TKey]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Values" attrib="0" ptype="System.Collections.Generic.ICollection`1[TValue]" params="">
                <methods>
                  <method name="get_Values()" attrib="3526" abstract="true" virtual="true" returntype="System.Collections.Generic.ICollection`1[TValue]">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(TKey, TValue)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="TKey" />
                  <parameter name="value" position="1" attrib="0" type="TValue" />
                </parameters>
              </method>
              <method name="ContainsKey(TKey)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="TKey" />
                </parameters>
              </method>
              <method name="Remove(TKey)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="TKey" />
                </parameters>
              </method>
              <method name="TryGetValue(TKey, out TValue&amp;)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="TKey" />
                  <parameter name="value" position="1" attrib="2" type="TValue&amp;" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IEnumerable`1" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes />
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
            <methods>
              <method name="GetEnumerator()" attrib="1478" abstract="true" virtual="true" returntype="System.Collections.Generic.IEnumerator`1[T]">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="IEnumerator`1" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.Collections.IEnumerator" />
            </interfaces>
            <properties>
              <property name="Current" attrib="0" ptype="T" params="">
                <methods>
                  <method name="get_Current()" attrib="3526" abstract="true" virtual="true" returntype="T">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="IEqualityComparer`1" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="Equals(T, T)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="T" />
                  <parameter name="y" position="1" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="GetHashCode(T)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="T" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IList`1" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.Collections.Generic.ICollection`1[TKey]" />
              <interface name="System.Collections.Generic.IEnumerable`1[T]" />
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
            <properties>
              <property name="Item" attrib="0" ptype="T" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="3526" abstract="true" virtual="true" returntype="T">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="set_Item(System.Int32, T)" attrib="3526" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                      <parameter name="value" position="1" attrib="0" type="T" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="IndexOf(T)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="Insert(System.Int32, T)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="item" position="1" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="RemoveAt(System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="KeyNotFoundException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="KeyValuePair`2" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <constructors>
              <constructor name=".ctor(TKey, TValue)" attrib="6278">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="TKey" />
                  <parameter name="value" position="1" attrib="0" type="TValue" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Key" attrib="0" ptype="TKey" params="">
                <methods>
                  <method name="get_Key()" attrib="2182" returntype="TKey">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="TValue" params="">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="TValue">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="List`1" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Diagnostics.DebuggerDisplayAttribute" />
              <attribute name="System.Reflection.DefaultMemberAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.Collections.Generic.IList`1[T]" />
              <interface name="System.Collections.Generic.ICollection`1[TKey]" />
              <interface name="System.Collections.Generic.IEnumerable`1[T]" />
              <interface name="System.Collections.IList" />
              <interface name="System.Collections.ICollection" />
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Collections.Generic.IEnumerable`1[T])" attrib="6278">
                <parameters>
                  <parameter name="collection" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[T]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="capacity" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Capacity" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Capacity()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_Capacity(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Count" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Count()" attrib="2534" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="T" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2534" virtual="true" returntype="T">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="set_Item(System.Int32, T)" attrib="2534" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                      <parameter name="value" position="1" attrib="0" type="T" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(T)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="AddRange(System.Collections.Generic.IEnumerable`1[T])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="collection" position="0" attrib="0" type="System.Collections.Generic.IEnumerable`1[T]" />
                </parameters>
              </method>
              <method name="AsReadOnly()" attrib="134" returntype="System.Collections.ObjectModel.ReadOnlyCollection`1[T]">
                <parameters />
              </method>
              <method name="BinarySearch(T, System.Collections.Generic.IComparer`1[T])" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="T" />
                  <parameter name="comparer" position="1" attrib="0" type="System.Collections.Generic.IComparer`1[T]" />
                </parameters>
              </method>
              <method name="BinarySearch(T)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="BinarySearch(System.Int32, System.Int32, T, System.Collections.Generic.IComparer`1[T])" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="count" position="1" attrib="0" type="System.Int32" />
                  <parameter name="item" position="2" attrib="0" type="T" />
                  <parameter name="comparer" position="3" attrib="0" type="System.Collections.Generic.IComparer`1[T]" />
                </parameters>
              </method>
              <method name="Clear()" attrib="486" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Contains(T)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="CopyTo(T[], System.Int32)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                  <parameter name="arrayIndex" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="CopyTo(System.Int32, T[], System.Int32, System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="array" position="1" attrib="0" type="T[]" />
                  <parameter name="arrayIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="count" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="CopyTo(T[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                </parameters>
              </method>
              <method name="ForEach(System.Action`1[T])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="action" position="0" attrib="0" type="System.Action`1[T]" />
                </parameters>
              </method>
              <method name="GetEnumerator()" attrib="134" returntype="System.Collections.Generic.List`1+Enumerator[T]">
                <parameters />
              </method>
              <method name="GetRange(System.Int32, System.Int32)" attrib="134" returntype="System.Collections.Generic.List`1[T]">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="count" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IndexOf(T, System.Int32, System.Int32)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="T" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IndexOf(T, System.Int32)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="T" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IndexOf(T)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="Insert(System.Int32, T)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="item" position="1" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="InsertRange(System.Int32, System.Collections.Generic.IEnumerable`1[T])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="collection" position="1" attrib="0" type="System.Collections.Generic.IEnumerable`1[T]" />
                </parameters>
              </method>
              <method name="LastIndexOf(T, System.Int32, System.Int32)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="T" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="LastIndexOf(T, System.Int32)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="T" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="LastIndexOf(T)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="Remove(T)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="RemoveAt(System.Int32)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="RemoveRange(System.Int32, System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="count" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Reverse(System.Int32, System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="count" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Reverse()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer`1[T])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="count" position="1" attrib="0" type="System.Int32" />
                  <parameter name="comparer" position="2" attrib="0" type="System.Collections.Generic.IComparer`1[T]" />
                </parameters>
              </method>
              <method name="Sort(System.Comparison`1[T])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="comparison" position="0" attrib="0" type="System.Comparison`1[T]" />
                </parameters>
              </method>
              <method name="Sort()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="Sort(System.Collections.Generic.IComparer`1[T])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="comparer" position="0" attrib="0" type="System.Collections.Generic.IComparer`1[T]" />
                </parameters>
              </method>
              <method name="ToArray()" attrib="134" returntype="T[]">
                <parameters />
              </method>
              <method name="TrimExcess()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
            </methods>
            <classes>
              <class name="Enumerator" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
                <interfaces>
                  <interface name="System.Collections.Generic.IEnumerator`1[T]" />
                  <interface name="System.IDisposable" />
                  <interface name="System.Collections.IEnumerator" />
                </interfaces>
                <properties>
                  <property name="Current" attrib="0" ptype="T" params="">
                    <methods>
                      <method name="get_Current()" attrib="2534" virtual="true" returntype="T">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="Dispose()" attrib="486" virtual="true" returntype="System.Void">
                    <parameters />
                  </method>
                  <method name="MoveNext()" attrib="486" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </class>
            </classes>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Collections.ObjectModel">
        <classes>
          <class name="Collection`1" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Diagnostics.DebuggerDisplayAttribute" />
              <attribute name="System.Reflection.DefaultMemberAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.Collections.Generic.IList`1[T]" />
              <interface name="System.Collections.Generic.ICollection`1[TKey]" />
              <interface name="System.Collections.Generic.IEnumerable`1[T]" />
              <interface name="System.Collections.IList" />
              <interface name="System.Collections.ICollection" />
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Collections.Generic.IList`1[T])" attrib="6278">
                <parameters>
                  <parameter name="list" position="0" attrib="0" type="System.Collections.Generic.IList`1[T]" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Count" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Count()" attrib="2534" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="T" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2534" virtual="true" returntype="T">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="set_Item(System.Int32, T)" attrib="2534" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                      <parameter name="value" position="1" attrib="0" type="T" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Items" attrib="0" ptype="System.Collections.Generic.IList`1[T]" params="">
                <methods>
                  <method name="get_Items()" attrib="2180" returntype="System.Collections.Generic.IList`1[T]">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(T)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="Clear()" attrib="486" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ClearItems()" attrib="452" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Contains(T)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="CopyTo(T[], System.Int32)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetEnumerator()" attrib="486" virtual="true" returntype="System.Collections.Generic.IEnumerator`1[T]">
                <parameters />
              </method>
              <method name="IndexOf(T)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="Insert(System.Int32, T)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="item" position="1" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="InsertItem(System.Int32, T)" attrib="452" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="item" position="1" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="Remove(T)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="RemoveAt(System.Int32)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="RemoveItem(System.Int32)" attrib="452" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="SetItem(System.Int32, T)" attrib="452" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="item" position="1" attrib="0" type="T" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="KeyedCollection`2" type="class" base="System.Collections.ObjectModel.Collection`1[TItem]" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Diagnostics.DebuggerDisplayAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Collections.Generic.IEqualityComparer`1[TKey], System.Int32)" attrib="6276">
                <parameters>
                  <parameter name="comparer" position="0" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
                  <parameter name="dictionaryCreationThreshold" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Collections.Generic.IEqualityComparer`1[TKey])" attrib="6276">
                <parameters>
                  <parameter name="comparer" position="0" attrib="0" type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Comparer" attrib="0" ptype="System.Collections.Generic.IEqualityComparer`1[TKey]" params="">
                <methods>
                  <method name="get_Comparer()" attrib="2182" returntype="System.Collections.Generic.IEqualityComparer`1[TKey]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Dictionary" attrib="0" ptype="System.Collections.Generic.IDictionary`2[TKey,TItem]" params="">
                <methods>
                  <method name="get_Dictionary()" attrib="2180" returntype="System.Collections.Generic.IDictionary`2[TKey,TItem]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="TItem" params="TKey">
                <methods>
                  <method name="get_Item(TKey)" attrib="2182" returntype="TItem">
                    <parameters>
                      <parameter name="key" position="0" attrib="0" type="TKey" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="ChangeItemKey(TItem, TKey)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="TItem" />
                  <parameter name="newKey" position="1" attrib="0" type="TKey" />
                </parameters>
              </method>
              <method name="ClearItems()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Contains(TKey)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="TKey" />
                </parameters>
              </method>
              <method name="GetKeyForItem(TItem)" attrib="1476" abstract="true" virtual="true" returntype="TKey">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="TItem" />
                </parameters>
              </method>
              <method name="InsertItem(System.Int32, TItem)" attrib="196" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="item" position="1" attrib="0" type="TItem" />
                </parameters>
              </method>
              <method name="Remove(TKey)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="TKey" />
                </parameters>
              </method>
              <method name="RemoveItem(System.Int32)" attrib="196" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="SetItem(System.Int32, TItem)" attrib="196" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="item" position="1" attrib="0" type="TItem" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="ReadOnlyCollection`1" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Diagnostics.DebuggerDisplayAttribute" />
              <attribute name="System.Reflection.DefaultMemberAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.Collections.Generic.IList`1[T]" />
              <interface name="System.Collections.Generic.ICollection`1[TKey]" />
              <interface name="System.Collections.Generic.IEnumerable`1[T]" />
              <interface name="System.Collections.IList" />
              <interface name="System.Collections.ICollection" />
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Collections.Generic.IList`1[T])" attrib="6278">
                <parameters>
                  <parameter name="list" position="0" attrib="0" type="System.Collections.Generic.IList`1[T]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Count" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Count()" attrib="2534" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="T" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2182" returntype="T">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Items" attrib="0" ptype="System.Collections.Generic.IList`1[T]" params="">
                <methods>
                  <method name="get_Items()" attrib="2180" returntype="System.Collections.Generic.IList`1[T]">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Contains(T)" attrib="486" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="CopyTo(T[], System.Int32)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="T[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetEnumerator()" attrib="486" virtual="true" returntype="System.Collections.Generic.IEnumerator`1[T]">
                <parameters />
              </method>
              <method name="IndexOf(T)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="T" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Configuration.Assemblies">
        <classes>
          <class name="AssemblyHashAlgorithm" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="MD5" attrib="32854" fieldtype="System.Configuration.Assemblies.AssemblyHashAlgorithm" value="32771" />
              <field name="None" attrib="32854" fieldtype="System.Configuration.Assemblies.AssemblyHashAlgorithm" value="0" />
              <field name="SHA1" attrib="32854" fieldtype="System.Configuration.Assemblies.AssemblyHashAlgorithm" value="32772" />
            </fields>
          </class>
          <class name="AssemblyVersionCompatibility" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="SameDomain" attrib="32854" fieldtype="System.Configuration.Assemblies.AssemblyVersionCompatibility" value="3" />
              <field name="SameMachine" attrib="32854" fieldtype="System.Configuration.Assemblies.AssemblyVersionCompatibility" value="1" />
              <field name="SameProcess" attrib="32854" fieldtype="System.Configuration.Assemblies.AssemblyVersionCompatibility" value="2" />
            </fields>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Diagnostics">
        <classes>
          <class name="ConditionalAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="True" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="conditionString" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="ConditionString" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_ConditionString()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="DebuggableAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Diagnostics.DebuggableAttribute+DebuggingModes)" attrib="6278">
                <parameters>
                  <parameter name="modes" position="0" attrib="0" type="System.Diagnostics.DebuggableAttribute+DebuggingModes" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Boolean, System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="isJITTrackingEnabled" position="0" attrib="0" type="System.Boolean" />
                  <parameter name="isJITOptimizerDisabled" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
            </constructors>
            <classes>
              <class name="DebuggingModes" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                  <attribute name="System.FlagsAttribute" />
                </attributes>
                <fields>
                  <field name="Default" attrib="32854" fieldtype="System.Diagnostics.DebuggableAttribute+DebuggingModes" value="1" />
                  <field name="DisableOptimizations" attrib="32854" fieldtype="System.Diagnostics.DebuggableAttribute+DebuggingModes" value="256" />
                  <field name="EnableEditAndContinue" attrib="32854" fieldtype="System.Diagnostics.DebuggableAttribute+DebuggingModes" value="4" />
                  <field name="IgnoreSymbolStoreSequencePoints" attrib="32854" fieldtype="System.Diagnostics.DebuggableAttribute+DebuggingModes" value="2" />
                  <field name="None" attrib="32854" fieldtype="System.Diagnostics.DebuggableAttribute+DebuggingModes" value="0" />
                </fields>
              </class>
            </classes>
          </class>
          <class name="Debugger" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="IsAttached" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsAttached()" attrib="2198" static="true" returntype="System.Boolean">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Break()" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="IsLogging()" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="Launch()" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="Log(System.Int32, System.String, System.String)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="level" position="0" attrib="0" type="System.Int32" />
                  <parameter name="category" position="1" attrib="0" type="System.String" />
                  <parameter name="message" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="DebuggerBrowsableAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Diagnostics.DebuggerBrowsableState)" attrib="6278">
                <parameters>
                  <parameter name="state" position="0" attrib="0" type="System.Diagnostics.DebuggerBrowsableState" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="State" attrib="0" ptype="System.Diagnostics.DebuggerBrowsableState" params="">
                <methods>
                  <method name="get_State()" attrib="2182" returntype="System.Diagnostics.DebuggerBrowsableState">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="DebuggerBrowsableState" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Collapsed" attrib="32854" fieldtype="System.Diagnostics.DebuggerBrowsableState" value="2" />
              <field name="Never" attrib="32854" fieldtype="System.Diagnostics.DebuggerBrowsableState" value="0" />
              <field name="RootHidden" attrib="32854" fieldtype="System.Diagnostics.DebuggerBrowsableState" value="3" />
            </fields>
          </class>
          <class name="DebuggerDisplayAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="True" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Name(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Target" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_Target()" attrib="2182" returntype="System.Type">
                    <parameters />
                  </method>
                  <method name="set_Target(System.Type)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Type" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="TargetTypeName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_TargetTypeName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_TargetTypeName(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Type" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Type()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Type(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="DebuggerHiddenAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="DebuggerNonUserCodeAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="DebuggerStepThroughAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="StackFrame" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="OFFSET_UNKNOWN" attrib="32854" fieldtype="System.Int32" value="-1" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Int32, System.Boolean)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="skipFrames" position="0" attrib="0" type="System.Int32" />
                  <parameter name="fNeedFileInfo" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Int32)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="fileName" position="0" attrib="0" type="System.String" />
                  <parameter name="lineNumber" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Int32, System.Int32)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="fileName" position="0" attrib="0" type="System.String" />
                  <parameter name="lineNumber" position="1" attrib="0" type="System.Int32" />
                  <parameter name="colNumber" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Boolean)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="fNeedFileInfo" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="skipFrames" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="GetFileColumnNumber()" attrib="454" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetFileLineNumber()" attrib="454" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetFileName()" attrib="454" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetILOffset()" attrib="454" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetMethod()" attrib="454" virtual="true" returntype="System.Reflection.MethodBase">
                <parameters />
              </method>
              <method name="GetNativeOffset()" attrib="454" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
            </methods>
          </class>
          <class name="StackTrace" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="METHODS_TO_SKIP" attrib="32854" fieldtype="System.Int32" value="0" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Exception, System.Int32)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="e" position="0" attrib="0" type="System.Exception" />
                  <parameter name="skipFrames" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Exception, System.Boolean)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="e" position="0" attrib="0" type="System.Exception" />
                  <parameter name="fNeedFileInfo" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Exception, System.Int32, System.Boolean)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="e" position="0" attrib="0" type="System.Exception" />
                  <parameter name="skipFrames" position="1" attrib="0" type="System.Int32" />
                  <parameter name="fNeedFileInfo" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Threading.Thread, System.Boolean)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="targetThread" position="0" attrib="0" type="System.Threading.Thread" />
                  <parameter name="needFileInfo" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Diagnostics.StackFrame)" attrib="6278">
                <parameters>
                  <parameter name="frame" position="0" attrib="0" type="System.Diagnostics.StackFrame" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Boolean)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="fNeedFileInfo" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="skipFrames" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Exception)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="e" position="0" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32, System.Boolean)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="skipFrames" position="0" attrib="0" type="System.Int32" />
                  <parameter name="fNeedFileInfo" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="FrameCount" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_FrameCount()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetFrame(System.Int32)" attrib="454" virtual="true" returntype="System.Diagnostics.StackFrame">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetFrames()" attrib="454" virtual="true" returntype="System.Diagnostics.StackFrame[]">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Diagnostics.CodeAnalysis">
        <classes>
          <class name="SuppressMessageAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="True" />
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Diagnostics.ConditionalAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.String)" attrib="6278">
                <parameters>
                  <parameter name="category" position="0" attrib="0" type="System.String" />
                  <parameter name="checkId" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Category" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Category()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CheckId" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_CheckId()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Justification" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Justification()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Justification(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="MessageId" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_MessageId()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_MessageId(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Scope" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Scope()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Scope(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Target" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Target()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Target(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Diagnostics.SymbolStore">
        <classes>
          <class name="ISymbolDocumentWriter" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <methods>
              <method name="SetCheckSum(System.Guid, System.Byte[])" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="algorithmId" position="0" attrib="0" type="System.Guid" />
                  <parameter name="checkSum" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="SetSource(System.Byte[])" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Globalization">
        <classes>
          <class name="Calendar" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces />
            <fields>
              <field name="CurrentEra" attrib="32854" fieldtype="System.Int32" value="0" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Eras" attrib="0" ptype="System.Int32[]" params="">
                <methods>
                  <method name="get_Eras()" attrib="3526" abstract="true" virtual="true" returntype="System.Int32[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsReadOnly" attrib="0" ptype="System.Boolean" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_IsReadOnly()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MaxSupportedDateTime" attrib="0" ptype="System.DateTime" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_MaxSupportedDateTime()" attrib="2502" virtual="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MinSupportedDateTime" attrib="0" ptype="System.DateTime" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_MinSupportedDateTime()" attrib="2502" virtual="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TwoDigitYearMax" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_TwoDigitYearMax()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_TwoDigitYearMax(System.Int32)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AddDays(System.DateTime, System.Int32)" attrib="454" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="days" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="AddHours(System.DateTime, System.Int32)" attrib="454" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="hours" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="AddMilliseconds(System.DateTime, System.Double)" attrib="454" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="milliseconds" position="1" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="AddMinutes(System.DateTime, System.Int32)" attrib="454" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="minutes" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="AddMonths(System.DateTime, System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="months" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="AddSeconds(System.DateTime, System.Int32)" attrib="454" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="seconds" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="AddWeeks(System.DateTime, System.Int32)" attrib="454" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="weeks" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="AddYears(System.DateTime, System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="years" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDayOfMonth(System.DateTime)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDayOfWeek(System.DateTime)" attrib="1478" abstract="true" virtual="true" returntype="System.DayOfWeek">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDayOfYear(System.DateTime)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDaysInMonth(System.Int32, System.Int32, System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="era" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDaysInMonth(System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDaysInYear(System.Int32, System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDaysInYear(System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetEra(System.DateTime)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetHour(System.DateTime)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetLeapMonth(System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetMilliseconds(System.DateTime)" attrib="454" virtual="true" returntype="System.Double">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetMinute(System.DateTime)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetMonth(System.DateTime)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetMonthsInYear(System.Int32, System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetMonthsInYear(System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetSecond(System.DateTime)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetWeekOfYear(System.DateTime, System.Globalization.CalendarWeekRule, System.DayOfWeek)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="rule" position="1" attrib="0" type="System.Globalization.CalendarWeekRule" />
                  <parameter name="firstDayOfWeek" position="2" attrib="0" type="System.DayOfWeek" />
                </parameters>
              </method>
              <method name="GetYear(System.DateTime)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="IsLeapDay(System.Int32, System.Int32, System.Int32, System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="era" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsLeapDay(System.Int32, System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsLeapMonth(System.Int32, System.Int32, System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="era" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsLeapMonth(System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsLeapYear(System.Int32, System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsLeapYear(System.Int32)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="hour" position="3" attrib="0" type="System.Int32" />
                  <parameter name="minute" position="4" attrib="0" type="System.Int32" />
                  <parameter name="second" position="5" attrib="0" type="System.Int32" />
                  <parameter name="millisecond" position="6" attrib="0" type="System.Int32" />
                  <parameter name="era" position="7" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="hour" position="3" attrib="0" type="System.Int32" />
                  <parameter name="minute" position="4" attrib="0" type="System.Int32" />
                  <parameter name="second" position="5" attrib="0" type="System.Int32" />
                  <parameter name="millisecond" position="6" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToFourDigitYear(System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="CalendarWeekRule" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="FirstDay" attrib="32854" fieldtype="System.Globalization.CalendarWeekRule" value="0" />
              <field name="FirstFourDayWeek" attrib="32854" fieldtype="System.Globalization.CalendarWeekRule" value="2" />
              <field name="FirstFullWeek" attrib="32854" fieldtype="System.Globalization.CalendarWeekRule" value="1" />
            </fields>
          </class>
          <class name="CharUnicodeInfo" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="GetNumericValue(System.String, System.Int32)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetNumericValue(System.Char)" attrib="150" static="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="ch" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="GetUnicodeCategory(System.String, System.Int32)" attrib="150" static="true" returntype="System.Globalization.UnicodeCategory">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetUnicodeCategory(System.Char)" attrib="150" static="true" returntype="System.Globalization.UnicodeCategory">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="ch" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="CompareInfo" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <properties>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_Name()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Compare(System.String, System.Int32, System.String, System.Int32, System.Globalization.CompareOptions)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="string1" position="0" attrib="0" type="System.String" />
                  <parameter name="offset1" position="1" attrib="0" type="System.Int32" />
                  <parameter name="string2" position="2" attrib="0" type="System.String" />
                  <parameter name="offset2" position="3" attrib="0" type="System.Int32" />
                  <parameter name="options" position="4" attrib="0" type="System.Globalization.CompareOptions" />
                </parameters>
              </method>
              <method name="Compare(System.String, System.Int32, System.String, System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="string1" position="0" attrib="0" type="System.String" />
                  <parameter name="offset1" position="1" attrib="0" type="System.Int32" />
                  <parameter name="string2" position="2" attrib="0" type="System.String" />
                  <parameter name="offset2" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Compare(System.String, System.Int32, System.Int32, System.String, System.Int32, System.Int32, System.Globalization.CompareOptions)" attrib="454" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="string1" position="0" attrib="0" type="System.String" />
                  <parameter name="offset1" position="1" attrib="0" type="System.Int32" />
                  <parameter name="length1" position="2" attrib="0" type="System.Int32" />
                  <parameter name="string2" position="3" attrib="0" type="System.String" />
                  <parameter name="offset2" position="4" attrib="0" type="System.Int32" />
                  <parameter name="length2" position="5" attrib="0" type="System.Int32" />
                  <parameter name="options" position="6" attrib="0" type="System.Globalization.CompareOptions" />
                </parameters>
              </method>
              <method name="Compare(System.String, System.Int32, System.Int32, System.String, System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="string1" position="0" attrib="0" type="System.String" />
                  <parameter name="offset1" position="1" attrib="0" type="System.Int32" />
                  <parameter name="length1" position="2" attrib="0" type="System.Int32" />
                  <parameter name="string2" position="3" attrib="0" type="System.String" />
                  <parameter name="offset2" position="4" attrib="0" type="System.Int32" />
                  <parameter name="length2" position="5" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Compare(System.String, System.String)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="string1" position="0" attrib="0" type="System.String" />
                  <parameter name="string2" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Compare(System.String, System.String, System.Globalization.CompareOptions)" attrib="454" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="string1" position="0" attrib="0" type="System.String" />
                  <parameter name="string2" position="1" attrib="0" type="System.String" />
                  <parameter name="options" position="2" attrib="0" type="System.Globalization.CompareOptions" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetCompareInfo(System.String)" attrib="150" static="true" returntype="System.Globalization.CompareInfo">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="IndexOf(System.String, System.Char, System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.Char" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="count" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IndexOf(System.String, System.String, System.Int32, System.Globalization.CompareOptions)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.String" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="options" position="3" attrib="0" type="System.Globalization.CompareOptions" />
                </parameters>
              </method>
              <method name="IndexOf(System.String, System.Char, System.Int32, System.Globalization.CompareOptions)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.Char" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="options" position="3" attrib="0" type="System.Globalization.CompareOptions" />
                </parameters>
              </method>
              <method name="IndexOf(System.String, System.String, System.Int32, System.Int32, System.Globalization.CompareOptions)" attrib="454" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.String" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="count" position="3" attrib="0" type="System.Int32" />
                  <parameter name="options" position="4" attrib="0" type="System.Globalization.CompareOptions" />
                </parameters>
              </method>
              <method name="IndexOf(System.String, System.Char, System.Int32, System.Int32, System.Globalization.CompareOptions)" attrib="454" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.Char" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="count" position="3" attrib="0" type="System.Int32" />
                  <parameter name="options" position="4" attrib="0" type="System.Globalization.CompareOptions" />
                </parameters>
              </method>
              <method name="IndexOf(System.String, System.String, System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.String" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="count" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IndexOf(System.String, System.String)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="IndexOf(System.String, System.Char)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="IndexOf(System.String, System.String, System.Globalization.CompareOptions)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.String" />
                  <parameter name="options" position="2" attrib="0" type="System.Globalization.CompareOptions" />
                </parameters>
              </method>
              <method name="IndexOf(System.String, System.Char, System.Globalization.CompareOptions)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.Char" />
                  <parameter name="options" position="2" attrib="0" type="System.Globalization.CompareOptions" />
                </parameters>
              </method>
              <method name="IsPrefix(System.String, System.String, System.Globalization.CompareOptions)" attrib="454" virtual="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="prefix" position="1" attrib="0" type="System.String" />
                  <parameter name="options" position="2" attrib="0" type="System.Globalization.CompareOptions" />
                </parameters>
              </method>
              <method name="IsPrefix(System.String, System.String)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="prefix" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="IsSuffix(System.String, System.String)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="suffix" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="IsSuffix(System.String, System.String, System.Globalization.CompareOptions)" attrib="454" virtual="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="suffix" position="1" attrib="0" type="System.String" />
                  <parameter name="options" position="2" attrib="0" type="System.Globalization.CompareOptions" />
                </parameters>
              </method>
              <method name="LastIndexOf(System.String, System.String, System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.String" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="count" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="LastIndexOf(System.String, System.Char, System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.Char" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="count" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="LastIndexOf(System.String, System.String, System.Int32, System.Int32, System.Globalization.CompareOptions)" attrib="454" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.String" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="count" position="3" attrib="0" type="System.Int32" />
                  <parameter name="options" position="4" attrib="0" type="System.Globalization.CompareOptions" />
                </parameters>
              </method>
              <method name="LastIndexOf(System.String, System.Char, System.Int32, System.Int32, System.Globalization.CompareOptions)" attrib="454" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.Char" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="count" position="3" attrib="0" type="System.Int32" />
                  <parameter name="options" position="4" attrib="0" type="System.Globalization.CompareOptions" />
                </parameters>
              </method>
              <method name="LastIndexOf(System.String, System.Char, System.Globalization.CompareOptions)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.Char" />
                  <parameter name="options" position="2" attrib="0" type="System.Globalization.CompareOptions" />
                </parameters>
              </method>
              <method name="LastIndexOf(System.String, System.String)" attrib="454" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="LastIndexOf(System.String, System.Char)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="LastIndexOf(System.String, System.String, System.Int32, System.Globalization.CompareOptions)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.String" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="options" position="3" attrib="0" type="System.Globalization.CompareOptions" />
                </parameters>
              </method>
              <method name="LastIndexOf(System.String, System.Char, System.Int32, System.Globalization.CompareOptions)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.Char" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="options" position="3" attrib="0" type="System.Globalization.CompareOptions" />
                </parameters>
              </method>
              <method name="LastIndexOf(System.String, System.String, System.Globalization.CompareOptions)" attrib="454" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="System.String" />
                  <parameter name="options" position="2" attrib="0" type="System.Globalization.CompareOptions" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="CompareOptions" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <fields>
              <field name="IgnoreCase" attrib="32854" fieldtype="System.Globalization.CompareOptions" value="1" />
              <field name="IgnoreKanaType" attrib="32854" fieldtype="System.Globalization.CompareOptions" value="8" />
              <field name="IgnoreNonSpace" attrib="32854" fieldtype="System.Globalization.CompareOptions" value="2" />
              <field name="IgnoreSymbols" attrib="32854" fieldtype="System.Globalization.CompareOptions" value="4" />
              <field name="IgnoreWidth" attrib="32854" fieldtype="System.Globalization.CompareOptions" value="16" />
              <field name="None" attrib="32854" fieldtype="System.Globalization.CompareOptions" value="0" />
              <field name="Ordinal" attrib="32854" fieldtype="System.Globalization.CompareOptions" value="1073741824" />
              <field name="OrdinalIgnoreCase" attrib="32854" fieldtype="System.Globalization.CompareOptions" value="268435456" />
              <field name="StringSort" attrib="32854" fieldtype="System.Globalization.CompareOptions" value="536870912" />
            </fields>
          </class>
          <class name="CultureInfo" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IFormatProvider" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Calendar" attrib="0" ptype="System.Globalization.Calendar" params="">
                <methods>
                  <method name="get_Calendar()" attrib="2502" virtual="true" returntype="System.Globalization.Calendar">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CompareInfo" attrib="0" ptype="System.Globalization.CompareInfo" params="">
                <methods>
                  <method name="get_CompareInfo()" attrib="2502" virtual="true" returntype="System.Globalization.CompareInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CurrentCulture" attrib="0" ptype="System.Globalization.CultureInfo" params="">
                <methods>
                  <method name="get_CurrentCulture()" attrib="2198" static="true" returntype="System.Globalization.CultureInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CurrentUICulture" attrib="0" ptype="System.Globalization.CultureInfo" params="">
                <methods>
                  <method name="get_CurrentUICulture()" attrib="2198" static="true" returntype="System.Globalization.CultureInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DateTimeFormat" attrib="0" ptype="System.Globalization.DateTimeFormatInfo" params="">
                <methods>
                  <method name="get_DateTimeFormat()" attrib="2502" virtual="true" returntype="System.Globalization.DateTimeFormatInfo">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_DateTimeFormat(System.Globalization.DateTimeFormatInfo)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Globalization.DateTimeFormatInfo" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="DisplayName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_DisplayName()" attrib="2502" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="EnglishName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_EnglishName()" attrib="2502" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="InvariantCulture" attrib="0" ptype="System.Globalization.CultureInfo" params="">
                <methods>
                  <method name="get_InvariantCulture()" attrib="2198" static="true" returntype="System.Globalization.CultureInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsNeutralCulture" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsNeutralCulture()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsReadOnly" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsReadOnly()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NativeName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_NativeName()" attrib="2502" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NumberFormat" attrib="0" ptype="System.Globalization.NumberFormatInfo" params="">
                <methods>
                  <method name="get_NumberFormat()" attrib="2502" virtual="true" returntype="System.Globalization.NumberFormatInfo">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_NumberFormat(System.Globalization.NumberFormatInfo)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Globalization.NumberFormatInfo" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="OptionalCalendars" attrib="0" ptype="System.Globalization.Calendar[]" params="">
                <methods>
                  <method name="get_OptionalCalendars()" attrib="2502" virtual="true" returntype="System.Globalization.Calendar[]">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Parent" attrib="0" ptype="System.Globalization.CultureInfo" params="">
                <methods>
                  <method name="get_Parent()" attrib="2502" virtual="true" returntype="System.Globalization.CultureInfo">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TextInfo" attrib="0" ptype="System.Globalization.TextInfo" params="">
                <methods>
                  <method name="get_TextInfo()" attrib="2502" virtual="true" returntype="System.Globalization.TextInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TwoLetterISOLanguageName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_TwoLetterISOLanguageName()" attrib="2502" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Clone()" attrib="454" virtual="true" returntype="System.Object">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetFormat(System.Type)" attrib="454" virtual="true" returntype="System.Object">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="formatType" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ReadOnly(System.Globalization.CultureInfo)" attrib="150" static="true" returntype="System.Globalization.CultureInfo">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="ci" position="0" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="DateTimeFormatInfo" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IFormatProvider" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="AbbreviatedDayNames" attrib="0" ptype="System.String[]" params="">
                <methods>
                  <method name="get_AbbreviatedDayNames()" attrib="2182" returntype="System.String[]">
                    <parameters />
                  </method>
                  <method name="set_AbbreviatedDayNames(System.String[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="AbbreviatedMonthGenitiveNames" attrib="0" ptype="System.String[]" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_AbbreviatedMonthGenitiveNames()" attrib="2182" returntype="System.String[]">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_AbbreviatedMonthGenitiveNames(System.String[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="AbbreviatedMonthNames" attrib="0" ptype="System.String[]" params="">
                <methods>
                  <method name="get_AbbreviatedMonthNames()" attrib="2182" returntype="System.String[]">
                    <parameters />
                  </method>
                  <method name="set_AbbreviatedMonthNames(System.String[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="AMDesignator" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_AMDesignator()" attrib="2182" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_AMDesignator(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Calendar" attrib="0" ptype="System.Globalization.Calendar" params="">
                <methods>
                  <method name="get_Calendar()" attrib="2182" returntype="System.Globalization.Calendar">
                    <parameters />
                  </method>
                  <method name="set_Calendar(System.Globalization.Calendar)" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Globalization.Calendar" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="CalendarWeekRule" attrib="0" ptype="System.Globalization.CalendarWeekRule" params="">
                <methods>
                  <method name="get_CalendarWeekRule()" attrib="2182" returntype="System.Globalization.CalendarWeekRule">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_CalendarWeekRule(System.Globalization.CalendarWeekRule)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Globalization.CalendarWeekRule" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="CurrentInfo" attrib="0" ptype="System.Globalization.DateTimeFormatInfo" params="">
                <methods>
                  <method name="get_CurrentInfo()" attrib="2198" static="true" returntype="System.Globalization.DateTimeFormatInfo">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DayNames" attrib="0" ptype="System.String[]" params="">
                <methods>
                  <method name="get_DayNames()" attrib="2182" returntype="System.String[]">
                    <parameters />
                  </method>
                  <method name="set_DayNames(System.String[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="FirstDayOfWeek" attrib="0" ptype="System.DayOfWeek" params="">
                <methods>
                  <method name="get_FirstDayOfWeek()" attrib="2182" returntype="System.DayOfWeek">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_FirstDayOfWeek(System.DayOfWeek)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.DayOfWeek" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="FullDateTimePattern" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_FullDateTimePattern()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_FullDateTimePattern(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="InvariantInfo" attrib="0" ptype="System.Globalization.DateTimeFormatInfo" params="">
                <methods>
                  <method name="get_InvariantInfo()" attrib="2198" static="true" returntype="System.Globalization.DateTimeFormatInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsReadOnly" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsReadOnly()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LongDatePattern" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_LongDatePattern()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_LongDatePattern(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="LongTimePattern" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_LongTimePattern()" attrib="2182" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_LongTimePattern(System.String)" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="MonthDayPattern" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_MonthDayPattern()" attrib="2182" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_MonthDayPattern(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="MonthGenitiveNames" attrib="0" ptype="System.String[]" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_MonthGenitiveNames()" attrib="2182" returntype="System.String[]">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_MonthGenitiveNames(System.String[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="MonthNames" attrib="0" ptype="System.String[]" params="">
                <methods>
                  <method name="get_MonthNames()" attrib="2182" returntype="System.String[]">
                    <parameters />
                  </method>
                  <method name="set_MonthNames(System.String[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="PMDesignator" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_PMDesignator()" attrib="2182" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_PMDesignator(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="RFC1123Pattern" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_RFC1123Pattern()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ShortDatePattern" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_ShortDatePattern()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_ShortDatePattern(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ShortestDayNames" attrib="0" ptype="System.String[]" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_ShortestDayNames()" attrib="2182" returntype="System.String[]">
                    <parameters />
                  </method>
                  <method name="set_ShortestDayNames(System.String[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ShortTimePattern" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_ShortTimePattern()" attrib="2182" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_ShortTimePattern(System.String)" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SortableDateTimePattern" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_SortableDateTimePattern()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UniversalSortableDateTimePattern" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_UniversalSortableDateTimePattern()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="YearMonthPattern" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_YearMonthPattern()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_YearMonthPattern(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Clone()" attrib="486" virtual="true" returntype="System.Object">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetAbbreviatedDayName(System.DayOfWeek)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="dayofweek" position="0" attrib="0" type="System.DayOfWeek" />
                </parameters>
              </method>
              <method name="GetAbbreviatedEraName(System.Int32)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="era" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetAbbreviatedMonthName(System.Int32)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="month" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDayName(System.DayOfWeek)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="dayofweek" position="0" attrib="0" type="System.DayOfWeek" />
                </parameters>
              </method>
              <method name="GetEra(System.String)" attrib="134" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="eraName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetEraName(System.Int32)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="era" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetFormat(System.Type)" attrib="486" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="formatType" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetInstance(System.IFormatProvider)" attrib="150" static="true" returntype="System.Globalization.DateTimeFormatInfo">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="GetMonthName(System.Int32)" attrib="134" returntype="System.String">
                <parameters>
                  <parameter name="month" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadOnly(System.Globalization.DateTimeFormatInfo)" attrib="150" static="true" returntype="System.Globalization.DateTimeFormatInfo">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="dtfi" position="0" attrib="0" type="System.Globalization.DateTimeFormatInfo" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="DateTimeStyles" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <fields>
              <field name="AdjustToUniversal" attrib="32854" fieldtype="System.Globalization.DateTimeStyles" value="16" />
              <field name="AllowInnerWhite" attrib="32854" fieldtype="System.Globalization.DateTimeStyles" value="4" />
              <field name="AllowLeadingWhite" attrib="32854" fieldtype="System.Globalization.DateTimeStyles" value="1" />
              <field name="AllowTrailingWhite" attrib="32854" fieldtype="System.Globalization.DateTimeStyles" value="2" />
              <field name="AllowWhiteSpaces" attrib="32854" fieldtype="System.Globalization.DateTimeStyles" value="7" />
              <field name="AssumeLocal" attrib="32854" fieldtype="System.Globalization.DateTimeStyles" value="32" />
              <field name="AssumeUniversal" attrib="32854" fieldtype="System.Globalization.DateTimeStyles" value="64" />
              <field name="NoCurrentDateDefault" attrib="32854" fieldtype="System.Globalization.DateTimeStyles" value="8" />
              <field name="None" attrib="32854" fieldtype="System.Globalization.DateTimeStyles" value="0" />
              <field name="RoundtripKind" attrib="32854" fieldtype="System.Globalization.DateTimeStyles" value="128" />
            </fields>
          </class>
          <class name="GregorianCalendar" type="class" base="System.Globalization.Calendar" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="ADEra" attrib="32854" fieldtype="System.Int32" value="1" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Globalization.GregorianCalendarTypes)" attrib="6278">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Globalization.GregorianCalendarTypes" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="CalendarType" attrib="0" ptype="System.Globalization.GregorianCalendarTypes" params="">
                <methods>
                  <method name="get_CalendarType()" attrib="2502" virtual="true" returntype="System.Globalization.GregorianCalendarTypes">
                    <parameters />
                  </method>
                  <method name="set_CalendarType(System.Globalization.GregorianCalendarTypes)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Globalization.GregorianCalendarTypes" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Eras" attrib="0" ptype="System.Int32[]" params="">
                <methods>
                  <method name="get_Eras()" attrib="2246" virtual="true" returntype="System.Int32[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MaxSupportedDateTime" attrib="0" ptype="System.DateTime" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_MaxSupportedDateTime()" attrib="2246" virtual="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MinSupportedDateTime" attrib="0" ptype="System.DateTime" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_MinSupportedDateTime()" attrib="2246" virtual="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TwoDigitYearMax" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_TwoDigitYearMax()" attrib="2246" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_TwoDigitYearMax(System.Int32)" attrib="2246" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AddMonths(System.DateTime, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="months" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="AddYears(System.DateTime, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="years" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDayOfMonth(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDayOfWeek(System.DateTime)" attrib="198" virtual="true" returntype="System.DayOfWeek">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDayOfYear(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDaysInMonth(System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="era" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDaysInYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetEra(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetLeapMonth(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetMonth(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetMonthsInYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetWeekOfYear(System.DateTime, System.Globalization.CalendarWeekRule, System.DayOfWeek)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="rule" position="1" attrib="0" type="System.Globalization.CalendarWeekRule" />
                  <parameter name="firstDayOfWeek" position="2" attrib="0" type="System.DayOfWeek" />
                </parameters>
              </method>
              <method name="GetYear(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="IsLeapDay(System.Int32, System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="era" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsLeapMonth(System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="era" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsLeapYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="hour" position="3" attrib="0" type="System.Int32" />
                  <parameter name="minute" position="4" attrib="0" type="System.Int32" />
                  <parameter name="second" position="5" attrib="0" type="System.Int32" />
                  <parameter name="millisecond" position="6" attrib="0" type="System.Int32" />
                  <parameter name="era" position="7" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToFourDigitYear(System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="GregorianCalendarTypes" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Arabic" attrib="32854" fieldtype="System.Globalization.GregorianCalendarTypes" value="10" />
              <field name="Localized" attrib="32854" fieldtype="System.Globalization.GregorianCalendarTypes" value="1" />
              <field name="MiddleEastFrench" attrib="32854" fieldtype="System.Globalization.GregorianCalendarTypes" value="9" />
              <field name="TransliteratedEnglish" attrib="32854" fieldtype="System.Globalization.GregorianCalendarTypes" value="11" />
              <field name="TransliteratedFrench" attrib="32854" fieldtype="System.Globalization.GregorianCalendarTypes" value="12" />
              <field name="USEnglish" attrib="32854" fieldtype="System.Globalization.GregorianCalendarTypes" value="2" />
            </fields>
          </class>
          <class name="HebrewCalendar" type="class" base="System.Globalization.Calendar" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Eras" attrib="0" ptype="System.Int32[]" params="">
                <methods>
                  <method name="get_Eras()" attrib="2246" virtual="true" returntype="System.Int32[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MaxSupportedDateTime" attrib="0" ptype="System.DateTime" params="">
                <methods>
                  <method name="get_MaxSupportedDateTime()" attrib="2246" virtual="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MinSupportedDateTime" attrib="0" ptype="System.DateTime" params="">
                <methods>
                  <method name="get_MinSupportedDateTime()" attrib="2246" virtual="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TwoDigitYearMax" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_TwoDigitYearMax()" attrib="2246" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_TwoDigitYearMax(System.Int32)" attrib="2246" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AddMonths(System.DateTime, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="months" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="AddYears(System.DateTime, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="years" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDayOfMonth(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDayOfWeek(System.DateTime)" attrib="198" virtual="true" returntype="System.DayOfWeek">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDayOfYear(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDaysInMonth(System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="era" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDaysInYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetEra(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetLeapMonth(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetMonth(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetMonthsInYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetYear(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="IsLeapDay(System.Int32, System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="era" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsLeapMonth(System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="era" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsLeapYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="hour" position="3" attrib="0" type="System.Int32" />
                  <parameter name="minute" position="4" attrib="0" type="System.Int32" />
                  <parameter name="second" position="5" attrib="0" type="System.Int32" />
                  <parameter name="millisecond" position="6" attrib="0" type="System.Int32" />
                  <parameter name="era" position="7" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToFourDigitYear(System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="HijriCalendar" type="class" base="System.Globalization.Calendar" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Eras" attrib="0" ptype="System.Int32[]" params="">
                <methods>
                  <method name="get_Eras()" attrib="2246" virtual="true" returntype="System.Int32[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="HijriAdjustment" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_HijriAdjustment()" attrib="2182" returntype="System.Int32">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_HijriAdjustment(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="MaxSupportedDateTime" attrib="0" ptype="System.DateTime" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_MaxSupportedDateTime()" attrib="2246" virtual="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MinSupportedDateTime" attrib="0" ptype="System.DateTime" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_MinSupportedDateTime()" attrib="2246" virtual="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TwoDigitYearMax" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_TwoDigitYearMax()" attrib="2246" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_TwoDigitYearMax(System.Int32)" attrib="2246" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AddMonths(System.DateTime, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="months" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="AddYears(System.DateTime, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="years" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDayOfMonth(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDayOfWeek(System.DateTime)" attrib="198" virtual="true" returntype="System.DayOfWeek">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDayOfYear(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDaysInMonth(System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="era" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDaysInYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetEra(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetLeapMonth(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetMonth(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetMonthsInYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetYear(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="IsLeapDay(System.Int32, System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="era" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsLeapMonth(System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="era" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsLeapYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="hour" position="3" attrib="0" type="System.Int32" />
                  <parameter name="minute" position="4" attrib="0" type="System.Int32" />
                  <parameter name="second" position="5" attrib="0" type="System.Int32" />
                  <parameter name="millisecond" position="6" attrib="0" type="System.Int32" />
                  <parameter name="era" position="7" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToFourDigitYear(System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="JapaneseCalendar" type="class" base="System.Globalization.Calendar" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Eras" attrib="0" ptype="System.Int32[]" params="">
                <methods>
                  <method name="get_Eras()" attrib="2246" virtual="true" returntype="System.Int32[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MaxSupportedDateTime" attrib="0" ptype="System.DateTime" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_MaxSupportedDateTime()" attrib="2246" virtual="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MinSupportedDateTime" attrib="0" ptype="System.DateTime" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_MinSupportedDateTime()" attrib="2246" virtual="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TwoDigitYearMax" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_TwoDigitYearMax()" attrib="2246" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_TwoDigitYearMax(System.Int32)" attrib="2246" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AddMonths(System.DateTime, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="months" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="AddYears(System.DateTime, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="years" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDayOfMonth(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDayOfWeek(System.DateTime)" attrib="198" virtual="true" returntype="System.DayOfWeek">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDayOfYear(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDaysInMonth(System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="era" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDaysInYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetEra(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetLeapMonth(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetMonth(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetMonthsInYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetWeekOfYear(System.DateTime, System.Globalization.CalendarWeekRule, System.DayOfWeek)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="rule" position="1" attrib="0" type="System.Globalization.CalendarWeekRule" />
                  <parameter name="firstDayOfWeek" position="2" attrib="0" type="System.DayOfWeek" />
                </parameters>
              </method>
              <method name="GetYear(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="IsLeapDay(System.Int32, System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="era" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsLeapMonth(System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="era" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsLeapYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="hour" position="3" attrib="0" type="System.Int32" />
                  <parameter name="minute" position="4" attrib="0" type="System.Int32" />
                  <parameter name="second" position="5" attrib="0" type="System.Int32" />
                  <parameter name="millisecond" position="6" attrib="0" type="System.Int32" />
                  <parameter name="era" position="7" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToFourDigitYear(System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="KoreanCalendar" type="class" base="System.Globalization.Calendar" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="KoreanEra" attrib="32854" fieldtype="System.Int32" value="1" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Eras" attrib="0" ptype="System.Int32[]" params="">
                <methods>
                  <method name="get_Eras()" attrib="2246" virtual="true" returntype="System.Int32[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MaxSupportedDateTime" attrib="0" ptype="System.DateTime" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_MaxSupportedDateTime()" attrib="2246" virtual="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MinSupportedDateTime" attrib="0" ptype="System.DateTime" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_MinSupportedDateTime()" attrib="2246" virtual="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TwoDigitYearMax" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_TwoDigitYearMax()" attrib="2246" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_TwoDigitYearMax(System.Int32)" attrib="2246" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AddMonths(System.DateTime, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="months" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="AddYears(System.DateTime, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="years" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDayOfMonth(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDayOfWeek(System.DateTime)" attrib="198" virtual="true" returntype="System.DayOfWeek">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDayOfYear(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDaysInMonth(System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="era" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDaysInYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetEra(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetLeapMonth(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetMonth(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetMonthsInYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetWeekOfYear(System.DateTime, System.Globalization.CalendarWeekRule, System.DayOfWeek)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="rule" position="1" attrib="0" type="System.Globalization.CalendarWeekRule" />
                  <parameter name="firstDayOfWeek" position="2" attrib="0" type="System.DayOfWeek" />
                </parameters>
              </method>
              <method name="GetYear(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="IsLeapDay(System.Int32, System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="era" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsLeapMonth(System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="era" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsLeapYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="hour" position="3" attrib="0" type="System.Int32" />
                  <parameter name="minute" position="4" attrib="0" type="System.Int32" />
                  <parameter name="second" position="5" attrib="0" type="System.Int32" />
                  <parameter name="millisecond" position="6" attrib="0" type="System.Int32" />
                  <parameter name="era" position="7" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToFourDigitYear(System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="NumberFormatInfo" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IFormatProvider" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="CurrencyDecimalDigits" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_CurrencyDecimalDigits()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_CurrencyDecimalDigits(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="CurrencyDecimalSeparator" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_CurrencyDecimalSeparator()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_CurrencyDecimalSeparator(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="CurrencyGroupSeparator" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_CurrencyGroupSeparator()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_CurrencyGroupSeparator(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="CurrencyGroupSizes" attrib="0" ptype="System.Int32[]" params="">
                <methods>
                  <method name="get_CurrencyGroupSizes()" attrib="2182" returntype="System.Int32[]">
                    <parameters />
                  </method>
                  <method name="set_CurrencyGroupSizes(System.Int32[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="CurrencyNegativePattern" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_CurrencyNegativePattern()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_CurrencyNegativePattern(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="CurrencyPositivePattern" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_CurrencyPositivePattern()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_CurrencyPositivePattern(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="CurrencySymbol" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_CurrencySymbol()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_CurrencySymbol(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="CurrentInfo" attrib="0" ptype="System.Globalization.NumberFormatInfo" params="">
                <methods>
                  <method name="get_CurrentInfo()" attrib="2198" static="true" returntype="System.Globalization.NumberFormatInfo">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="InvariantInfo" attrib="0" ptype="System.Globalization.NumberFormatInfo" params="">
                <methods>
                  <method name="get_InvariantInfo()" attrib="2198" static="true" returntype="System.Globalization.NumberFormatInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsReadOnly" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsReadOnly()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NaNSymbol" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_NaNSymbol()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_NaNSymbol(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NegativeInfinitySymbol" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_NegativeInfinitySymbol()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_NegativeInfinitySymbol(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NegativeSign" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_NegativeSign()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_NegativeSign(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NumberDecimalDigits" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_NumberDecimalDigits()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_NumberDecimalDigits(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NumberDecimalSeparator" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_NumberDecimalSeparator()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_NumberDecimalSeparator(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NumberGroupSeparator" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_NumberGroupSeparator()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_NumberGroupSeparator(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NumberGroupSizes" attrib="0" ptype="System.Int32[]" params="">
                <methods>
                  <method name="get_NumberGroupSizes()" attrib="2182" returntype="System.Int32[]">
                    <parameters />
                  </method>
                  <method name="set_NumberGroupSizes(System.Int32[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NumberNegativePattern" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_NumberNegativePattern()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_NumberNegativePattern(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="PercentDecimalDigits" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_PercentDecimalDigits()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_PercentDecimalDigits(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="PercentDecimalSeparator" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_PercentDecimalSeparator()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_PercentDecimalSeparator(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="PercentGroupSeparator" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_PercentGroupSeparator()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_PercentGroupSeparator(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="PercentGroupSizes" attrib="0" ptype="System.Int32[]" params="">
                <methods>
                  <method name="get_PercentGroupSizes()" attrib="2182" returntype="System.Int32[]">
                    <parameters />
                  </method>
                  <method name="set_PercentGroupSizes(System.Int32[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="PercentNegativePattern" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_PercentNegativePattern()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_PercentNegativePattern(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="PercentPositivePattern" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_PercentPositivePattern()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_PercentPositivePattern(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="PercentSymbol" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_PercentSymbol()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_PercentSymbol(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="PerMilleSymbol" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_PerMilleSymbol()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_PerMilleSymbol(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="PositiveInfinitySymbol" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_PositiveInfinitySymbol()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_PositiveInfinitySymbol(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="PositiveSign" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_PositiveSign()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_PositiveSign(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Clone()" attrib="486" virtual="true" returntype="System.Object">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetFormat(System.Type)" attrib="486" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="formatType" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetInstance(System.IFormatProvider)" attrib="150" static="true" returntype="System.Globalization.NumberFormatInfo">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="formatProvider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </method>
              <method name="ReadOnly(System.Globalization.NumberFormatInfo)" attrib="150" static="true" returntype="System.Globalization.NumberFormatInfo">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="nfi" position="0" attrib="0" type="System.Globalization.NumberFormatInfo" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="NumberStyles" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <fields>
              <field name="AllowCurrencySymbol" attrib="32854" fieldtype="System.Globalization.NumberStyles" value="256" />
              <field name="AllowDecimalPoint" attrib="32854" fieldtype="System.Globalization.NumberStyles" value="32" />
              <field name="AllowExponent" attrib="32854" fieldtype="System.Globalization.NumberStyles" value="128" />
              <field name="AllowHexSpecifier" attrib="32854" fieldtype="System.Globalization.NumberStyles" value="512" />
              <field name="AllowLeadingSign" attrib="32854" fieldtype="System.Globalization.NumberStyles" value="4" />
              <field name="AllowLeadingWhite" attrib="32854" fieldtype="System.Globalization.NumberStyles" value="1" />
              <field name="AllowParentheses" attrib="32854" fieldtype="System.Globalization.NumberStyles" value="16" />
              <field name="AllowThousands" attrib="32854" fieldtype="System.Globalization.NumberStyles" value="64" />
              <field name="AllowTrailingSign" attrib="32854" fieldtype="System.Globalization.NumberStyles" value="8" />
              <field name="AllowTrailingWhite" attrib="32854" fieldtype="System.Globalization.NumberStyles" value="2" />
              <field name="Any" attrib="32854" fieldtype="System.Globalization.NumberStyles" value="511" />
              <field name="Currency" attrib="32854" fieldtype="System.Globalization.NumberStyles" value="383" />
              <field name="Float" attrib="32854" fieldtype="System.Globalization.NumberStyles" value="167" />
              <field name="HexNumber" attrib="32854" fieldtype="System.Globalization.NumberStyles" value="515" />
              <field name="Integer" attrib="32854" fieldtype="System.Globalization.NumberStyles" value="7" />
              <field name="None" attrib="32854" fieldtype="System.Globalization.NumberStyles" value="0" />
              <field name="Number" attrib="32854" fieldtype="System.Globalization.NumberStyles" value="111" />
            </fields>
          </class>
          <class name="RegionInfo" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="CurrencySymbol" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_CurrencySymbol()" attrib="2502" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CurrentRegion" attrib="0" ptype="System.Globalization.RegionInfo" params="">
                <methods>
                  <method name="get_CurrentRegion()" attrib="2198" static="true" returntype="System.Globalization.RegionInfo">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DisplayName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_DisplayName()" attrib="2502" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="EnglishName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_EnglishName()" attrib="2502" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsMetric" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsMetric()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ISOCurrencySymbol" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_ISOCurrencySymbol()" attrib="2502" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NativeName" attrib="0" ptype="System.String" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_NativeName()" attrib="2502" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TwoLetterISORegionName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_TwoLetterISORegionName()" attrib="2502" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="StringInfo" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="LengthInTextElements" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_LengthInTextElements()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="String" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_String()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_String(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetNextTextElement(System.String, System.Int32)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="str" position="0" attrib="0" type="System.String" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetNextTextElement(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="str" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetTextElementEnumerator(System.String, System.Int32)" attrib="150" static="true" returntype="System.Globalization.TextElementEnumerator">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="str" position="0" attrib="0" type="System.String" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetTextElementEnumerator(System.String)" attrib="150" static="true" returntype="System.Globalization.TextElementEnumerator">
                <parameters>
                  <parameter name="str" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ParseCombiningCharacters(System.String)" attrib="150" static="true" returntype="System.Int32[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="str" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="TaiwanCalendar" type="class" base="System.Globalization.Calendar" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Eras" attrib="0" ptype="System.Int32[]" params="">
                <methods>
                  <method name="get_Eras()" attrib="2246" virtual="true" returntype="System.Int32[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MaxSupportedDateTime" attrib="0" ptype="System.DateTime" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_MaxSupportedDateTime()" attrib="2246" virtual="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MinSupportedDateTime" attrib="0" ptype="System.DateTime" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_MinSupportedDateTime()" attrib="2246" virtual="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TwoDigitYearMax" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_TwoDigitYearMax()" attrib="2246" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_TwoDigitYearMax(System.Int32)" attrib="2246" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AddMonths(System.DateTime, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="months" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="AddYears(System.DateTime, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="years" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDayOfMonth(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDayOfWeek(System.DateTime)" attrib="198" virtual="true" returntype="System.DayOfWeek">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDayOfYear(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDaysInMonth(System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="era" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDaysInYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetEra(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetLeapMonth(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetMonth(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetMonthsInYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetWeekOfYear(System.DateTime, System.Globalization.CalendarWeekRule, System.DayOfWeek)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="rule" position="1" attrib="0" type="System.Globalization.CalendarWeekRule" />
                  <parameter name="firstDayOfWeek" position="2" attrib="0" type="System.DayOfWeek" />
                </parameters>
              </method>
              <method name="GetYear(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="IsLeapDay(System.Int32, System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="era" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsLeapMonth(System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="era" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsLeapYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="hour" position="3" attrib="0" type="System.Int32" />
                  <parameter name="minute" position="4" attrib="0" type="System.Int32" />
                  <parameter name="second" position="5" attrib="0" type="System.Int32" />
                  <parameter name="millisecond" position="6" attrib="0" type="System.Int32" />
                  <parameter name="era" position="7" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToFourDigitYear(System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="TextElementEnumerator" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.Collections.IEnumerator" />
            </interfaces>
            <properties>
              <property name="Current" attrib="0" ptype="System.Object" params="">
                <methods>
                  <method name="get_Current()" attrib="2534" virtual="true" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ElementIndex" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_ElementIndex()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetTextElement()" attrib="134" returntype="System.String">
                <parameters />
              </method>
              <method name="MoveNext()" attrib="486" virtual="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="Reset()" attrib="486" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
            </methods>
          </class>
          <class name="TextInfo" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces />
            <properties>
              <property name="CultureName" attrib="0" ptype="System.String" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_CultureName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsReadOnly" attrib="0" ptype="System.Boolean" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_IsReadOnly()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ListSeparator" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_ListSeparator()" attrib="2502" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_ListSeparator(System.String)" attrib="2502" virtual="true" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ToLower(System.Char)" attrib="454" virtual="true" returntype="System.Char">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="ToLower(System.String)" attrib="454" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="str" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ToUpper(System.Char)" attrib="454" virtual="true" returntype="System.Char">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="ToUpper(System.String)" attrib="454" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="str" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="ThaiBuddhistCalendar" type="class" base="System.Globalization.Calendar" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="ThaiBuddhistEra" attrib="32854" fieldtype="System.Int32" value="1" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Eras" attrib="0" ptype="System.Int32[]" params="">
                <methods>
                  <method name="get_Eras()" attrib="2246" virtual="true" returntype="System.Int32[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MaxSupportedDateTime" attrib="0" ptype="System.DateTime" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_MaxSupportedDateTime()" attrib="2246" virtual="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MinSupportedDateTime" attrib="0" ptype="System.DateTime" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_MinSupportedDateTime()" attrib="2246" virtual="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TwoDigitYearMax" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_TwoDigitYearMax()" attrib="2246" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_TwoDigitYearMax(System.Int32)" attrib="2246" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AddMonths(System.DateTime, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="months" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="AddYears(System.DateTime, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="years" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDayOfMonth(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDayOfWeek(System.DateTime)" attrib="198" virtual="true" returntype="System.DayOfWeek">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDayOfYear(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDaysInMonth(System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="era" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDaysInYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetEra(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetLeapMonth(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetMonth(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetMonthsInYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetWeekOfYear(System.DateTime, System.Globalization.CalendarWeekRule, System.DayOfWeek)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="rule" position="1" attrib="0" type="System.Globalization.CalendarWeekRule" />
                  <parameter name="firstDayOfWeek" position="2" attrib="0" type="System.DayOfWeek" />
                </parameters>
              </method>
              <method name="GetYear(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="IsLeapDay(System.Int32, System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="era" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsLeapMonth(System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="era" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsLeapYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="hour" position="3" attrib="0" type="System.Int32" />
                  <parameter name="minute" position="4" attrib="0" type="System.Int32" />
                  <parameter name="second" position="5" attrib="0" type="System.Int32" />
                  <parameter name="millisecond" position="6" attrib="0" type="System.Int32" />
                  <parameter name="era" position="7" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToFourDigitYear(System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="UmAlQuraCalendar" type="class" base="System.Globalization.Calendar" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Eras" attrib="0" ptype="System.Int32[]" params="">
                <methods>
                  <method name="get_Eras()" attrib="2246" virtual="true" returntype="System.Int32[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MaxSupportedDateTime" attrib="0" ptype="System.DateTime" params="">
                <methods>
                  <method name="get_MaxSupportedDateTime()" attrib="2246" virtual="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MinSupportedDateTime" attrib="0" ptype="System.DateTime" params="">
                <methods>
                  <method name="get_MinSupportedDateTime()" attrib="2246" virtual="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TwoDigitYearMax" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_TwoDigitYearMax()" attrib="2246" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_TwoDigitYearMax(System.Int32)" attrib="2246" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AddMonths(System.DateTime, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="months" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="AddYears(System.DateTime, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                  <parameter name="years" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDayOfMonth(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDayOfWeek(System.DateTime)" attrib="198" virtual="true" returntype="System.DayOfWeek">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDayOfYear(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetDaysInMonth(System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="era" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDaysInYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetEra(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetLeapMonth(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetMonth(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GetMonthsInYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetYear(System.DateTime)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="IsLeapDay(System.Int32, System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="era" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsLeapMonth(System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="era" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="IsLeapYear(System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="era" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                  <parameter name="month" position="1" attrib="0" type="System.Int32" />
                  <parameter name="day" position="2" attrib="0" type="System.Int32" />
                  <parameter name="hour" position="3" attrib="0" type="System.Int32" />
                  <parameter name="minute" position="4" attrib="0" type="System.Int32" />
                  <parameter name="second" position="5" attrib="0" type="System.Int32" />
                  <parameter name="millisecond" position="6" attrib="0" type="System.Int32" />
                  <parameter name="era" position="7" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToFourDigitYear(System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="year" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="UnicodeCategory" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="ClosePunctuation" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="21" />
              <field name="ConnectorPunctuation" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="18" />
              <field name="Control" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="14" />
              <field name="CurrencySymbol" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="26" />
              <field name="DashPunctuation" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="19" />
              <field name="DecimalDigitNumber" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="8" />
              <field name="EnclosingMark" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="7" />
              <field name="FinalQuotePunctuation" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="23" />
              <field name="Format" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="15" />
              <field name="InitialQuotePunctuation" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="22" />
              <field name="LetterNumber" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="9" />
              <field name="LineSeparator" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="12" />
              <field name="LowercaseLetter" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="1" />
              <field name="MathSymbol" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="25" />
              <field name="ModifierLetter" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="3" />
              <field name="ModifierSymbol" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="27" />
              <field name="NonSpacingMark" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="5" />
              <field name="OpenPunctuation" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="20" />
              <field name="OtherLetter" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="4" />
              <field name="OtherNotAssigned" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="29" />
              <field name="OtherNumber" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="10" />
              <field name="OtherPunctuation" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="24" />
              <field name="OtherSymbol" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="28" />
              <field name="ParagraphSeparator" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="13" />
              <field name="PrivateUse" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="17" />
              <field name="SpaceSeparator" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="11" />
              <field name="SpacingCombiningMark" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="6" />
              <field name="Surrogate" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="16" />
              <field name="TitlecaseLetter" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="2" />
              <field name="UppercaseLetter" attrib="32854" fieldtype="System.Globalization.UnicodeCategory" value="0" />
            </fields>
          </class>
        </classes>
      </namespace>
      <namespace name="System.IO">
        <classes>
          <class name="BinaryReader" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.IO.Stream, System.Text.Encoding)" attrib="6278">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="encoding" position="1" attrib="0" type="System.Text.Encoding" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.Stream)" attrib="6278">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.IO.Stream" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="BaseStream" attrib="0" ptype="System.IO.Stream" params="">
                <methods>
                  <method name="get_BaseStream()" attrib="2502" virtual="true" returntype="System.IO.Stream">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Close()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="452" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="FillBuffer(System.Int32)" attrib="452" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="numBytes" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="PeekChar()" attrib="454" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Read(System.Byte[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Read()" attrib="454" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Read(System.Char[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Read7BitEncodedInt()" attrib="133" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ReadBoolean()" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="ReadByte()" attrib="454" virtual="true" returntype="System.Byte">
                <parameters />
              </method>
              <method name="ReadBytes(System.Int32)" attrib="454" virtual="true" returntype="System.Byte[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="count" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadChar()" attrib="454" virtual="true" returntype="System.Char">
                <parameters />
              </method>
              <method name="ReadChars(System.Int32)" attrib="454" virtual="true" returntype="System.Char[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="count" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadDouble()" attrib="454" virtual="true" returntype="System.Double">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ReadInt16()" attrib="454" virtual="true" returntype="System.Int16">
                <parameters />
              </method>
              <method name="ReadInt32()" attrib="454" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ReadInt64()" attrib="454" virtual="true" returntype="System.Int64">
                <parameters />
              </method>
              <method name="ReadSByte()" attrib="454" virtual="true" returntype="System.SByte">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ReadSingle()" attrib="454" virtual="true" returntype="System.Single">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ReadString()" attrib="454" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ReadUInt16()" attrib="454" virtual="true" returntype="System.UInt16">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ReadUInt32()" attrib="454" virtual="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ReadUInt64()" attrib="454" virtual="true" returntype="System.UInt64">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters />
              </method>
            </methods>
          </class>
          <class name="BinaryWriter" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <fields>
              <field name="Null" attrib="54" fieldtype="System.IO.BinaryWriter" />
              <field name="OutStream" attrib="4" fieldtype="System.IO.Stream" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.IO.Stream, System.Text.Encoding)" attrib="6278">
                <parameters>
                  <parameter name="output" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="encoding" position="1" attrib="0" type="System.Text.Encoding" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.Stream)" attrib="6278">
                <parameters>
                  <parameter name="output" position="0" attrib="0" type="System.IO.Stream" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="BaseStream" attrib="0" ptype="System.IO.Stream" params="">
                <methods>
                  <method name="get_BaseStream()" attrib="2502" virtual="true" returntype="System.IO.Stream">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Close()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="452" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Flush()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Seek(System.Int32, System.IO.SeekOrigin)" attrib="454" virtual="true" returntype="System.Int64">
                <parameters>
                  <parameter name="offset" position="0" attrib="0" type="System.Int32" />
                  <parameter name="origin" position="1" attrib="0" type="System.IO.SeekOrigin" />
                </parameters>
              </method>
              <method name="Write(System.Int32)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Write(System.UInt32)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="Write(System.Int16)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="Write(System.UInt16)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="Write(System.Single)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Write(System.String)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Write(System.Int64)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="Write(System.UInt64)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="Write(System.Double)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Write(System.SByte)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="Write(System.Byte[])" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Write(System.Boolean)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Write(System.Byte)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="Write(System.Char[])" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.Char[]" />
                </parameters>
              </method>
              <method name="Write(System.Char[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Write(System.Byte[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Write(System.Char)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="ch" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="Write7BitEncodedInt(System.Int32)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Directory" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <methods>
              <method name="CreateDirectory(System.String)" attrib="150" static="true" returntype="System.IO.DirectoryInfo">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Delete(System.String, System.Boolean)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="recursive" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Delete(System.String)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Exists(System.String)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetCreationTime(System.String)" attrib="150" static="true" returntype="System.DateTime">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetCurrentDirectory()" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetDirectories(System.String, System.String)" attrib="150" static="true" returntype="System.String[]">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="searchPattern" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetDirectories(System.String)" attrib="150" static="true" returntype="System.String[]">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetDirectoryRoot(System.String)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetFiles(System.String)" attrib="150" static="true" returntype="System.String[]">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetFiles(System.String, System.String)" attrib="150" static="true" returntype="System.String[]">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="searchPattern" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetFileSystemEntries(System.String, System.String)" attrib="150" static="true" returntype="System.String[]">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="searchPattern" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetFileSystemEntries(System.String)" attrib="150" static="true" returntype="System.String[]">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetLastAccessTime(System.String)" attrib="150" static="true" returntype="System.DateTime">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetLastWriteTime(System.String)" attrib="150" static="true" returntype="System.DateTime">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Move(System.String, System.String)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="sourceDirName" position="0" attrib="0" type="System.String" />
                  <parameter name="destDirName" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="SetCurrentDirectory(System.String)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="DirectoryInfo" type="class" base="System.IO.FileSystemInfo" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Exists" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_Exists()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Parent" attrib="0" ptype="System.IO.DirectoryInfo" params="">
                <methods>
                  <method name="get_Parent()" attrib="2182" returntype="System.IO.DirectoryInfo">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Root" attrib="0" ptype="System.IO.DirectoryInfo" params="">
                <methods>
                  <method name="get_Root()" attrib="2182" returntype="System.IO.DirectoryInfo">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Create()" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="CreateSubdirectory(System.String)" attrib="134" returntype="System.IO.DirectoryInfo">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Delete()" attrib="198" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="Delete(System.Boolean)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="recursive" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetDirectories()" attrib="134" returntype="System.IO.DirectoryInfo[]">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetDirectories(System.String)" attrib="134" returntype="System.IO.DirectoryInfo[]">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="searchPattern" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetFiles(System.String)" attrib="134" returntype="System.IO.FileInfo[]">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="searchPattern" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetFiles()" attrib="134" returntype="System.IO.FileInfo[]">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetFileSystemInfos(System.String)" attrib="134" returntype="System.IO.FileSystemInfo[]">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="searchPattern" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetFileSystemInfos()" attrib="134" returntype="System.IO.FileSystemInfo[]">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="MoveTo(System.String)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="destDirName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="DirectoryNotFoundException" type="class" base="System.IO.IOException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="EndOfStreamException" type="class" base="System.IO.IOException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="File" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <methods>
              <method name="AppendText(System.String)" attrib="150" static="true" returntype="System.IO.StreamWriter">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Copy(System.String, System.String)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="sourceFileName" position="0" attrib="0" type="System.String" />
                  <parameter name="destFileName" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Copy(System.String, System.String, System.Boolean)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="sourceFileName" position="0" attrib="0" type="System.String" />
                  <parameter name="destFileName" position="1" attrib="0" type="System.String" />
                  <parameter name="overwrite" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Create(System.String)" attrib="150" static="true" returntype="System.IO.FileStream">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Create(System.String, System.Int32)" attrib="150" static="true" returntype="System.IO.FileStream">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="bufferSize" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="CreateText(System.String)" attrib="150" static="true" returntype="System.IO.StreamWriter">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Delete(System.String)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Exists(System.String)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetCreationTime(System.String)" attrib="150" static="true" returntype="System.DateTime">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetLastAccessTime(System.String)" attrib="150" static="true" returntype="System.DateTime">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetLastWriteTime(System.String)" attrib="150" static="true" returntype="System.DateTime">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Move(System.String, System.String)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="sourceFileName" position="0" attrib="0" type="System.String" />
                  <parameter name="destFileName" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Open(System.String, System.IO.FileMode)" attrib="150" static="true" returntype="System.IO.FileStream">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="System.IO.FileMode" />
                </parameters>
              </method>
              <method name="Open(System.String, System.IO.FileMode, System.IO.FileAccess)" attrib="150" static="true" returntype="System.IO.FileStream">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="System.IO.FileMode" />
                  <parameter name="access" position="2" attrib="0" type="System.IO.FileAccess" />
                </parameters>
              </method>
              <method name="Open(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare)" attrib="150" static="true" returntype="System.IO.FileStream">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="System.IO.FileMode" />
                  <parameter name="access" position="2" attrib="0" type="System.IO.FileAccess" />
                  <parameter name="share" position="3" attrib="0" type="System.IO.FileShare" />
                </parameters>
              </method>
              <method name="OpenRead(System.String)" attrib="150" static="true" returntype="System.IO.FileStream">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="OpenText(System.String)" attrib="150" static="true" returntype="System.IO.StreamReader">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="OpenWrite(System.String)" attrib="150" static="true" returntype="System.IO.FileStream">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="SetAttributes(System.String, System.IO.FileAttributes)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="fileAttributes" position="1" attrib="0" type="System.IO.FileAttributes" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="FileAccess" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <fields>
              <field name="Read" attrib="32854" fieldtype="System.IO.FileAccess" value="1" />
              <field name="ReadWrite" attrib="32854" fieldtype="System.IO.FileAccess" value="3" />
              <field name="Write" attrib="32854" fieldtype="System.IO.FileAccess" value="2" />
            </fields>
          </class>
          <class name="FileAttributes" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <fields>
              <field name="Archive" attrib="32854" fieldtype="System.IO.FileAttributes" value="32" />
              <field name="Compressed" attrib="32854" fieldtype="System.IO.FileAttributes" value="2048" />
              <field name="Device" attrib="32854" fieldtype="System.IO.FileAttributes" value="64" />
              <field name="Directory" attrib="32854" fieldtype="System.IO.FileAttributes" value="16" />
              <field name="Encrypted" attrib="32854" fieldtype="System.IO.FileAttributes" value="16384" />
              <field name="Hidden" attrib="32854" fieldtype="System.IO.FileAttributes" value="2" />
              <field name="Normal" attrib="32854" fieldtype="System.IO.FileAttributes" value="128" />
              <field name="NotContentIndexed" attrib="32854" fieldtype="System.IO.FileAttributes" value="8192" />
              <field name="Offline" attrib="32854" fieldtype="System.IO.FileAttributes" value="4096" />
              <field name="ReadOnly" attrib="32854" fieldtype="System.IO.FileAttributes" value="1" />
              <field name="ReparsePoint" attrib="32854" fieldtype="System.IO.FileAttributes" value="1024" />
              <field name="SparseFile" attrib="32854" fieldtype="System.IO.FileAttributes" value="512" />
              <field name="System" attrib="32854" fieldtype="System.IO.FileAttributes" value="4" />
              <field name="Temporary" attrib="32854" fieldtype="System.IO.FileAttributes" value="256" />
            </fields>
          </class>
          <class name="FileInfo" type="class" base="System.IO.FileSystemInfo" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="fileName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Directory" attrib="0" ptype="System.IO.DirectoryInfo" params="">
                <methods>
                  <method name="get_Directory()" attrib="2182" returntype="System.IO.DirectoryInfo">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DirectoryName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_DirectoryName()" attrib="2182" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Exists" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_Exists()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Length" attrib="0" ptype="System.Int64" params="">
                <methods>
                  <method name="get_Length()" attrib="2182" returntype="System.Int64">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AppendText()" attrib="134" returntype="System.IO.StreamWriter">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="CopyTo(System.String)" attrib="134" returntype="System.IO.FileInfo">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="destFileName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CopyTo(System.String, System.Boolean)" attrib="134" returntype="System.IO.FileInfo">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="destFileName" position="0" attrib="0" type="System.String" />
                  <parameter name="overwrite" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Create()" attrib="134" returntype="System.IO.FileStream">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="CreateText()" attrib="134" returntype="System.IO.StreamWriter">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="Delete()" attrib="198" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="MoveTo(System.String)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="destFileName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Open(System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare)" attrib="134" returntype="System.IO.FileStream">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="mode" position="0" attrib="0" type="System.IO.FileMode" />
                  <parameter name="access" position="1" attrib="0" type="System.IO.FileAccess" />
                  <parameter name="share" position="2" attrib="0" type="System.IO.FileShare" />
                </parameters>
              </method>
              <method name="Open(System.IO.FileMode, System.IO.FileAccess)" attrib="134" returntype="System.IO.FileStream">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="mode" position="0" attrib="0" type="System.IO.FileMode" />
                  <parameter name="access" position="1" attrib="0" type="System.IO.FileAccess" />
                </parameters>
              </method>
              <method name="Open(System.IO.FileMode)" attrib="134" returntype="System.IO.FileStream">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="mode" position="0" attrib="0" type="System.IO.FileMode" />
                </parameters>
              </method>
              <method name="OpenRead()" attrib="134" returntype="System.IO.FileStream">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="OpenText()" attrib="134" returntype="System.IO.StreamReader">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="OpenWrite()" attrib="134" returntype="System.IO.FileStream">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="FileLoadException" type="class" base="System.IO.IOException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <properties>
              <property name="Message" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Message()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
            </methods>
          </class>
          <class name="FileMode" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Append" attrib="32854" fieldtype="System.IO.FileMode" value="6" />
              <field name="Create" attrib="32854" fieldtype="System.IO.FileMode" value="2" />
              <field name="CreateNew" attrib="32854" fieldtype="System.IO.FileMode" value="1" />
              <field name="Open" attrib="32854" fieldtype="System.IO.FileMode" value="3" />
              <field name="OpenOrCreate" attrib="32854" fieldtype="System.IO.FileMode" value="4" />
              <field name="Truncate" attrib="32854" fieldtype="System.IO.FileMode" value="5" />
            </fields>
          </class>
          <class name="FileNotFoundException" type="class" base="System.IO.IOException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Message" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Message()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
            </methods>
          </class>
          <class name="FileShare" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.FlagsAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Delete" attrib="32854" fieldtype="System.IO.FileShare" value="4" />
              <field name="Inheritable" attrib="32854" fieldtype="System.IO.FileShare" value="16" />
              <field name="None" attrib="32854" fieldtype="System.IO.FileShare" value="0" />
              <field name="Read" attrib="32854" fieldtype="System.IO.FileShare" value="1" />
              <field name="ReadWrite" attrib="32854" fieldtype="System.IO.FileShare" value="3" />
              <field name="Write" attrib="32854" fieldtype="System.IO.FileShare" value="2" />
            </fields>
          </class>
          <class name="FileStream" type="class" base="System.IO.Stream" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="System.IO.FileMode" />
                  <parameter name="access" position="2" attrib="0" type="System.IO.FileAccess" />
                  <parameter name="share" position="3" attrib="0" type="System.IO.FileShare" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, System.Int32)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="System.IO.FileMode" />
                  <parameter name="access" position="2" attrib="0" type="System.IO.FileAccess" />
                  <parameter name="share" position="3" attrib="0" type="System.IO.FileShare" />
                  <parameter name="bufferSize" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.IO.FileMode)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="System.IO.FileMode" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.IO.FileMode, System.IO.FileAccess)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="System.IO.FileMode" />
                  <parameter name="access" position="2" attrib="0" type="System.IO.FileAccess" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="CanRead" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanRead()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanSeek" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanSeek()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanWrite" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanWrite()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Length" attrib="0" ptype="System.Int64" params="">
                <methods>
                  <method name="get_Length()" attrib="2246" virtual="true" returntype="System.Int64">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="2182" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Position" attrib="0" ptype="System.Int64" params="">
                <methods>
                  <method name="get_Position()" attrib="2246" virtual="true" returntype="System.Int64">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_Position(System.Int64)" attrib="2246" virtual="true" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int64" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)" attrib="16582" virtual="true" returntype="System.IAsyncResult">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="numBytes" position="2" attrib="0" type="System.Int32" />
                  <parameter name="userCallback" position="3" attrib="0" type="System.AsyncCallback" />
                  <parameter name="stateObject" position="4" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)" attrib="16582" virtual="true" returntype="System.IAsyncResult">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="numBytes" position="2" attrib="0" type="System.Int32" />
                  <parameter name="userCallback" position="3" attrib="0" type="System.AsyncCallback" />
                  <parameter name="stateObject" position="4" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="EndRead(System.IAsyncResult)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="asyncResult" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="EndWrite(System.IAsyncResult)" attrib="198" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="asyncResult" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Finalize()" attrib="196" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="Flush()" attrib="198" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="Read(in System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="array" position="0" attrib="3" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadByte()" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="Seek(System.Int64, System.IO.SeekOrigin)" attrib="198" virtual="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="offset" position="0" attrib="0" type="System.Int64" />
                  <parameter name="origin" position="1" attrib="0" type="System.IO.SeekOrigin" />
                </parameters>
              </method>
              <method name="SetLength(System.Int64)" attrib="198" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="Write(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteByte(System.Byte)" attrib="198" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="FileSystemInfo" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="FullPath" attrib="4" fieldtype="System.String" />
              <field name="OriginalPath" attrib="4" fieldtype="System.String" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Attributes" attrib="0" ptype="System.IO.FileAttributes" params="">
                <methods>
                  <method name="get_Attributes()" attrib="2182" returntype="System.IO.FileAttributes">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_Attributes(System.IO.FileAttributes)" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.IO.FileAttributes" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="CreationTime" attrib="0" ptype="System.DateTime" params="">
                <methods>
                  <method name="get_CreationTime()" attrib="2182" returntype="System.DateTime">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Exists" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_Exists()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Extension" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Extension()" attrib="2182" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="FullName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_FullName()" attrib="2502" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LastAccessTime" attrib="0" ptype="System.DateTime" params="">
                <methods>
                  <method name="get_LastAccessTime()" attrib="2182" returntype="System.DateTime">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LastWriteTime" attrib="0" ptype="System.DateTime" params="">
                <methods>
                  <method name="get_LastWriteTime()" attrib="2182" returntype="System.DateTime">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Delete()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="Refresh()" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
            </methods>
          </class>
          <class name="IOException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="MemoryStream" type="class" base="System.IO.Stream" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Byte[], System.Int32, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte[], System.Int32, System.Int32, System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                  <parameter name="writable" position="3" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte[], System.Int32, System.Int32, System.Boolean, System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                  <parameter name="writable" position="3" attrib="0" type="System.Boolean" />
                  <parameter name="publiclyVisible" position="4" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte[], System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="writable" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="capacity" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="CanRead" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanRead()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanSeek" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanSeek()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanWrite" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanWrite()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Capacity" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Capacity()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_Capacity(System.Int32)" attrib="2502" virtual="true" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Length" attrib="0" ptype="System.Int64" params="">
                <methods>
                  <method name="get_Length()" attrib="2246" virtual="true" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Position" attrib="0" ptype="System.Int64" params="">
                <methods>
                  <method name="get_Position()" attrib="2246" virtual="true" returntype="System.Int64">
                    <parameters />
                  </method>
                  <method name="set_Position(System.Int64)" attrib="2246" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int64" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Flush()" attrib="198" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="GetBuffer()" attrib="454" virtual="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="Read(in System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="buffer" position="0" attrib="3" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadByte()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Seek(System.Int64, System.IO.SeekOrigin)" attrib="198" virtual="true" returntype="System.Int64">
                <parameters>
                  <parameter name="offset" position="0" attrib="0" type="System.Int64" />
                  <parameter name="loc" position="1" attrib="0" type="System.IO.SeekOrigin" />
                </parameters>
              </method>
              <method name="SetLength(System.Int64)" attrib="198" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="ToArray()" attrib="454" virtual="true" returntype="System.Byte[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="Write(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteByte(System.Byte)" attrib="198" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="WriteTo(System.IO.Stream)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Path" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="AltDirectorySeparatorChar" attrib="54" fieldtype="System.Char" />
              <field name="DirectorySeparatorChar" attrib="54" fieldtype="System.Char" />
              <field name="PathSeparator" attrib="54" fieldtype="System.Char" />
              <field name="VolumeSeparatorChar" attrib="54" fieldtype="System.Char" />
            </fields>
            <methods>
              <method name="ChangeExtension(System.String, System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="extension" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Combine(System.String, System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="path1" position="0" attrib="0" type="System.String" />
                  <parameter name="path2" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetDirectoryName(System.String)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetExtension(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetFileName(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetFileNameWithoutExtension(System.String)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetFullPath(System.String)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetInvalidPathChars()" attrib="150" static="true" returntype="System.Char[]">
                <parameters />
              </method>
              <method name="GetPathRoot(System.String)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetTempFileName()" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetTempPath()" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="HasExtension(System.String)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="IsPathRooted(System.String)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="PathTooLongException" type="class" base="System.IO.IOException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="SeekOrigin" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Begin" attrib="32854" fieldtype="System.IO.SeekOrigin" value="0" />
              <field name="Current" attrib="32854" fieldtype="System.IO.SeekOrigin" value="1" />
              <field name="End" attrib="32854" fieldtype="System.IO.SeekOrigin" value="2" />
            </fields>
          </class>
          <class name="Stream" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <fields>
              <field name="Null" attrib="54" fieldtype="System.IO.Stream" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="CanRead" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanRead()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanSeek" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanSeek()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanTimeout" attrib="0" ptype="System.Boolean" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_CanTimeout()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanWrite" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanWrite()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Length" attrib="0" ptype="System.Int64" params="">
                <methods>
                  <method name="get_Length()" attrib="3526" abstract="true" virtual="true" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Position" attrib="0" ptype="System.Int64" params="">
                <methods>
                  <method name="get_Position()" attrib="3526" abstract="true" virtual="true" returntype="System.Int64">
                    <parameters />
                  </method>
                  <method name="set_Position(System.Int64)" attrib="3526" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int64" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ReadTimeout" attrib="0" ptype="System.Int32" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_ReadTimeout()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_ReadTimeout(System.Int32)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="WriteTimeout" attrib="0" ptype="System.Int32" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_WriteTimeout()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_WriteTimeout(System.Int32)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)" attrib="16838" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                  <parameter name="callback" position="3" attrib="0" type="System.AsyncCallback" />
                  <parameter name="state" position="4" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)" attrib="16838" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                  <parameter name="callback" position="3" attrib="0" type="System.AsyncCallback" />
                  <parameter name="state" position="4" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Close()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose()" attrib="486" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="452" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="EndRead(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="asyncResult" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="EndWrite(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="asyncResult" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Flush()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Read(in System.Byte[], System.Int32, System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="3" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadByte()" attrib="454" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Seek(System.Int64, System.IO.SeekOrigin)" attrib="1478" abstract="true" virtual="true" returntype="System.Int64">
                <parameters>
                  <parameter name="offset" position="0" attrib="0" type="System.Int64" />
                  <parameter name="origin" position="1" attrib="0" type="System.IO.SeekOrigin" />
                </parameters>
              </method>
              <method name="SetLength(System.Int64)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="Write(System.Byte[], System.Int32, System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteByte(System.Byte)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="StreamReader" type="class" base="System.IO.TextReader" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Null" attrib="54" fieldtype="System.IO.StreamReader" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.String, System.Boolean)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="detectEncodingFromByteOrderMarks" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Text.Encoding)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="encoding" position="1" attrib="0" type="System.Text.Encoding" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Text.Encoding, System.Boolean, System.Int32)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="encoding" position="1" attrib="0" type="System.Text.Encoding" />
                  <parameter name="detectEncodingFromByteOrderMarks" position="2" attrib="0" type="System.Boolean" />
                  <parameter name="bufferSize" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Text.Encoding, System.Boolean)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="encoding" position="1" attrib="0" type="System.Text.Encoding" />
                  <parameter name="detectEncodingFromByteOrderMarks" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.Stream, System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="detectEncodingFromByteOrderMarks" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.Stream)" attrib="6278">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.Stream, System.Text.Encoding)" attrib="6278">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="encoding" position="1" attrib="0" type="System.Text.Encoding" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.Stream, System.Text.Encoding, System.Boolean, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="encoding" position="1" attrib="0" type="System.Text.Encoding" />
                  <parameter name="detectEncodingFromByteOrderMarks" position="2" attrib="0" type="System.Boolean" />
                  <parameter name="bufferSize" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.Stream, System.Text.Encoding, System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="encoding" position="1" attrib="0" type="System.Text.Encoding" />
                  <parameter name="detectEncodingFromByteOrderMarks" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="BaseStream" attrib="0" ptype="System.IO.Stream" params="">
                <methods>
                  <method name="get_BaseStream()" attrib="2502" virtual="true" returntype="System.IO.Stream">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CurrentEncoding" attrib="0" ptype="System.Text.Encoding" params="">
                <methods>
                  <method name="get_CurrentEncoding()" attrib="2502" virtual="true" returntype="System.Text.Encoding">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="EndOfStream" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_EndOfStream()" attrib="2182" returntype="System.Boolean">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Close()" attrib="198" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="DiscardBufferedData()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Peek()" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="Read(in System.Char[], System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="buffer" position="0" attrib="3" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Read()" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ReadLine()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ReadToEnd()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
            </methods>
          </class>
          <class name="StreamWriter" type="class" base="System.IO.TextWriter" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Null" attrib="54" fieldtype="System.IO.StreamWriter" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.String, System.Boolean)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="append" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Boolean, System.Text.Encoding)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="append" position="1" attrib="0" type="System.Boolean" />
                  <parameter name="encoding" position="2" attrib="0" type="System.Text.Encoding" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Boolean, System.Text.Encoding, System.Int32)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="append" position="1" attrib="0" type="System.Boolean" />
                  <parameter name="encoding" position="2" attrib="0" type="System.Text.Encoding" />
                  <parameter name="bufferSize" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.Stream)" attrib="6278">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.Stream, System.Text.Encoding)" attrib="6278">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="encoding" position="1" attrib="0" type="System.Text.Encoding" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.Stream, System.Text.Encoding, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="encoding" position="1" attrib="0" type="System.Text.Encoding" />
                  <parameter name="bufferSize" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="AutoFlush" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_AutoFlush()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_AutoFlush(System.Boolean)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="BaseStream" attrib="0" ptype="System.IO.Stream" params="">
                <methods>
                  <method name="get_BaseStream()" attrib="2502" virtual="true" returntype="System.IO.Stream">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Encoding" attrib="0" ptype="System.Text.Encoding" params="">
                <methods>
                  <method name="get_Encoding()" attrib="2246" virtual="true" returntype="System.Text.Encoding">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Close()" attrib="198" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Flush()" attrib="198" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Write(System.Char[], System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Write(System.String)" attrib="198" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Write(System.Char)" attrib="198" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="Write(System.Char[])" attrib="198" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Char[]" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="StringReader" type="class" base="System.IO.TextReader" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="Close()" attrib="198" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Peek()" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="Read(in System.Char[], System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="3" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Read()" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ReadLine()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ReadToEnd()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="StringWriter" type="class" base="System.IO.TextWriter" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Text.StringBuilder)" attrib="6278">
                <parameters>
                  <parameter name="sb" position="0" attrib="0" type="System.Text.StringBuilder" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Text.StringBuilder, System.IFormatProvider)" attrib="6278">
                <parameters>
                  <parameter name="sb" position="0" attrib="0" type="System.Text.StringBuilder" />
                  <parameter name="formatProvider" position="1" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.IFormatProvider)" attrib="6278">
                <parameters>
                  <parameter name="formatProvider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Encoding" attrib="0" ptype="System.Text.Encoding" params="">
                <methods>
                  <method name="get_Encoding()" attrib="2246" virtual="true" returntype="System.Text.Encoding">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Close()" attrib="198" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetStringBuilder()" attrib="454" virtual="true" returntype="System.Text.StringBuilder">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
              <method name="Write(System.String)" attrib="198" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Write(System.Char)" attrib="198" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="Write(System.Char[], System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="TextReader" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <fields>
              <field name="Null" attrib="54" fieldtype="System.IO.TextReader" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Close()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="452" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Dispose()" attrib="486" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Peek()" attrib="454" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Read(in System.Char[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="3" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Read()" attrib="454" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ReadBlock(in System.Char[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="3" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadLine()" attrib="454" virtual="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ReadToEnd()" attrib="454" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="TextWriter" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <fields>
              <field name="CoreNewLine" attrib="4" fieldtype="System.Char[]" />
              <field name="Null" attrib="54" fieldtype="System.IO.TextWriter" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.IFormatProvider)" attrib="6276">
                <parameters>
                  <parameter name="formatProvider" position="0" attrib="0" type="System.IFormatProvider" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Encoding" attrib="0" ptype="System.Text.Encoding" params="">
                <methods>
                  <method name="get_Encoding()" attrib="3526" abstract="true" virtual="true" returntype="System.Text.Encoding">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="FormatProvider" attrib="0" ptype="System.IFormatProvider" params="">
                <methods>
                  <method name="get_FormatProvider()" attrib="2502" virtual="true" returntype="System.IFormatProvider">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NewLine" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_NewLine()" attrib="2502" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_NewLine(System.String)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Close()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose()" attrib="486" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="452" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Flush()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Write(System.Decimal)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="Write(System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Write(System.Single)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Write(System.Double)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Write(System.String, System.Object, System.Object)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="arg0" position="1" attrib="0" type="System.Object" />
                  <parameter name="arg1" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Write(System.String, System.Object[])" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="arg" position="1" attrib="0" type="System.Object[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="Write(System.Object)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Write(System.String, System.Object)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="arg0" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Write(System.Char[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Write(System.Boolean)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Write(System.Char)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="Write(System.Char[])" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Char[]" />
                </parameters>
              </method>
              <method name="Write(System.Int64)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="Write(System.UInt64)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="Write(System.Int32)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Write(System.UInt32)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="WriteLine(System.Decimal)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Decimal" />
                </parameters>
              </method>
              <method name="WriteLine(System.String)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="WriteLine(System.Single)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="WriteLine(System.Double)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="WriteLine(System.String, System.Object, System.Object)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="arg0" position="1" attrib="0" type="System.Object" />
                  <parameter name="arg1" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="WriteLine(System.String, System.Object[])" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="arg" position="1" attrib="0" type="System.Object[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="WriteLine(System.Object)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="WriteLine(System.String, System.Object)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="arg0" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="WriteLine(System.UInt64)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="WriteLine(System.Char[])" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Char[]" />
                </parameters>
              </method>
              <method name="WriteLine(System.Char[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteLine()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="WriteLine(System.Char)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="WriteLine(System.UInt32)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="WriteLine(System.Int64)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="WriteLine(System.Boolean)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WriteLine(System.Int32)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="UnmanagedMemoryStream" type="class" base="System.IO.Stream" charset="Ansi" layout="Auto">
            <properties>
              <property name="CanRead" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanRead()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanSeek" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanSeek()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanWrite" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanWrite()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Capacity" attrib="0" ptype="System.Int64" params="">
                <methods>
                  <method name="get_Capacity()" attrib="2182" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Length" attrib="0" ptype="System.Int64" params="">
                <methods>
                  <method name="get_Length()" attrib="2246" virtual="true" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Position" attrib="0" ptype="System.Int64" params="">
                <methods>
                  <method name="get_Position()" attrib="2246" virtual="true" returntype="System.Int64">
                    <parameters />
                  </method>
                  <method name="set_Position(System.Int64)" attrib="2246" virtual="true" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int64" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="PositionPointer" attrib="0" ptype="System.Byte*" params="">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <methods>
                  <method name="get_PositionPointer()" attrib="2182" returntype="System.Byte*">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Flush()" attrib="198" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Read(in System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="buffer" position="0" attrib="3" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadByte()" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="Seek(System.Int64, System.IO.SeekOrigin)" attrib="198" virtual="true" returntype="System.Int64">
                <parameters>
                  <parameter name="offset" position="0" attrib="0" type="System.Int64" />
                  <parameter name="loc" position="1" attrib="0" type="System.IO.SeekOrigin" />
                </parameters>
              </method>
              <method name="SetLength(System.Int64)" attrib="198" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="Write(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteByte(System.Byte)" attrib="198" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="System.IO.IsolatedStorage">
        <classes>
          <class name="IsolatedStorageException" type="class" base="System.Exception" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="IsolatedStorageFile" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <properties>
              <property name="AvailableFreeSpace" attrib="0" ptype="System.Int64" params="">
                <methods>
                  <method name="get_AvailableFreeSpace()" attrib="2182" returntype="System.Int64">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Quota" attrib="0" ptype="System.Int64" params="">
                <methods>
                  <method name="get_Quota()" attrib="2182" returntype="System.Int64">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateDirectory(System.String)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="dir" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateFile(System.String)" attrib="134" returntype="System.IO.IsolatedStorage.IsolatedStorageFileStream">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="DeleteDirectory(System.String)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="dir" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="DeleteFile(System.String)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="file" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="DirectoryExists(System.String)" attrib="134" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Dispose()" attrib="486" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="FileExists(System.String)" attrib="134" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetDirectoryNames()" attrib="134" returntype="System.String[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetDirectoryNames(System.String)" attrib="134" returntype="System.String[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="searchPattern" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetFileNames()" attrib="134" returntype="System.String[]">
                <parameters />
              </method>
              <method name="GetFileNames(System.String)" attrib="134" returntype="System.String[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="searchPattern" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetUserStoreForApplication()" attrib="150" static="true" returntype="System.IO.IsolatedStorage.IsolatedStorageFile">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetUserStoreForSite()" attrib="150" static="true" returntype="System.IO.IsolatedStorage.IsolatedStorageFile">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="IncreaseQuotaTo(System.Int64)" attrib="134" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="newQuotaSize" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="OpenFile(System.String, System.IO.FileMode)" attrib="134" returntype="System.IO.IsolatedStorage.IsolatedStorageFileStream">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="System.IO.FileMode" />
                </parameters>
              </method>
              <method name="OpenFile(System.String, System.IO.FileMode, System.IO.FileAccess)" attrib="134" returntype="System.IO.IsolatedStorage.IsolatedStorageFileStream">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="System.IO.FileMode" />
                  <parameter name="access" position="2" attrib="0" type="System.IO.FileAccess" />
                </parameters>
              </method>
              <method name="OpenFile(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare)" attrib="134" returntype="System.IO.IsolatedStorage.IsolatedStorageFileStream">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="System.IO.FileMode" />
                  <parameter name="access" position="2" attrib="0" type="System.IO.FileAccess" />
                  <parameter name="share" position="3" attrib="0" type="System.IO.FileShare" />
                </parameters>
              </method>
              <method name="Remove()" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
            </methods>
          </class>
          <class name="IsolatedStorageFileStream" type="class" base="System.IO.FileStream" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, System.IO.IsolatedStorage.IsolatedStorageFile)" attrib="6278">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="System.IO.FileMode" />
                  <parameter name="access" position="2" attrib="0" type="System.IO.FileAccess" />
                  <parameter name="share" position="3" attrib="0" type="System.IO.FileShare" />
                  <parameter name="isf" position="4" attrib="0" type="System.IO.IsolatedStorage.IsolatedStorageFile" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.IsolatedStorage.IsolatedStorageFile)" attrib="6278">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="System.IO.FileMode" />
                  <parameter name="access" position="2" attrib="0" type="System.IO.FileAccess" />
                  <parameter name="isf" position="3" attrib="0" type="System.IO.IsolatedStorage.IsolatedStorageFile" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.IO.FileMode, System.IO.IsolatedStorage.IsolatedStorageFile)" attrib="6278">
                <parameters>
                  <parameter name="path" position="0" attrib="0" type="System.String" />
                  <parameter name="mode" position="1" attrib="0" type="System.IO.FileMode" />
                  <parameter name="isf" position="2" attrib="0" type="System.IO.IsolatedStorage.IsolatedStorageFile" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="CanRead" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanRead()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanSeek" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanSeek()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanWrite" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanWrite()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Length" attrib="0" ptype="System.Int64" params="">
                <methods>
                  <method name="get_Length()" attrib="2246" virtual="true" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Position" attrib="0" ptype="System.Int64" params="">
                <methods>
                  <method name="get_Position()" attrib="2246" virtual="true" returntype="System.Int64">
                    <parameters />
                  </method>
                  <method name="set_Position(System.Int64)" attrib="2246" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int64" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)" attrib="16582" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="numBytes" position="2" attrib="0" type="System.Int32" />
                  <parameter name="userCallback" position="3" attrib="0" type="System.AsyncCallback" />
                  <parameter name="stateObject" position="4" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)" attrib="16582" virtual="true" returntype="System.IAsyncResult">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="numBytes" position="2" attrib="0" type="System.Int32" />
                  <parameter name="userCallback" position="3" attrib="0" type="System.AsyncCallback" />
                  <parameter name="stateObject" position="4" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="EndRead(System.IAsyncResult)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="asyncResult" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="EndWrite(System.IAsyncResult)" attrib="198" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="asyncResult" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Flush()" attrib="198" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Read(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadByte()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Seek(System.Int64, System.IO.SeekOrigin)" attrib="198" virtual="true" returntype="System.Int64">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="offset" position="0" attrib="0" type="System.Int64" />
                  <parameter name="origin" position="1" attrib="0" type="System.IO.SeekOrigin" />
                </parameters>
              </method>
              <method name="SetLength(System.Int64)" attrib="198" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="Write(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteByte(System.Byte)" attrib="198" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Reflection">
        <classes>
          <class name="AmbiguousMatchException" type="class" base="System.SystemException" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="Assembly" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.Reflection.ICustomAttributeProvider" />
            </interfaces>
            <properties>
              <property name="CodeBase" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_CodeBase()" attrib="2502" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="EntryPoint" attrib="0" ptype="System.Reflection.MethodInfo" params="">
                <methods>
                  <method name="get_EntryPoint()" attrib="2502" virtual="true" returntype="System.Reflection.MethodInfo">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="FullName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_FullName()" attrib="2502" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ImageRuntimeVersion" attrib="0" ptype="System.String" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_ImageRuntimeVersion()" attrib="2502" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Location" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Location()" attrib="2502" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ManifestModule" attrib="0" ptype="System.Reflection.Module" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_ManifestModule()" attrib="2182" returntype="System.Reflection.Module">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateInstance(System.String)" attrib="486" virtual="true" returntype="System.Object">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="typeName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetCallingAssembly()" attrib="150" static="true" returntype="System.Reflection.Assembly">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetCustomAttributes(System.Boolean)" attrib="454" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="inherit" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Type, System.Boolean)" attrib="454" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetExecutingAssembly()" attrib="150" static="true" returntype="System.Reflection.Assembly">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetExportedTypes()" attrib="454" virtual="true" returntype="System.Type[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetFile(System.String)" attrib="454" virtual="true" returntype="System.IO.FileStream">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetFiles(System.Boolean)" attrib="454" virtual="true" returntype="System.IO.FileStream[]">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="getResourceModules" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetManifestResourceNames()" attrib="454" virtual="true" returntype="System.String[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetManifestResourceStream(System.Type, System.String)" attrib="454" virtual="true" returntype="System.IO.Stream">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetManifestResourceStream(System.String)" attrib="454" virtual="true" returntype="System.IO.Stream">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetModules()" attrib="486" virtual="true" returntype="System.Reflection.Module[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetName()" attrib="454" virtual="true" returntype="System.Reflection.AssemblyName">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetName(System.Boolean)" attrib="454" virtual="true" returntype="System.Reflection.AssemblyName">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="copiedName" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetSatelliteAssembly(System.Globalization.CultureInfo, System.Version)" attrib="486" virtual="true" returntype="System.Reflection.Assembly">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="culture" position="0" attrib="0" type="System.Globalization.CultureInfo" />
                  <parameter name="version" position="1" attrib="0" type="System.Version" />
                </parameters>
              </method>
              <method name="GetSatelliteAssembly(System.Globalization.CultureInfo)" attrib="486" virtual="true" returntype="System.Reflection.Assembly">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="culture" position="0" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
              <method name="GetType(System.String, System.Boolean)" attrib="454" virtual="true" returntype="System.Type">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="throwOnError" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetType(System.String)" attrib="454" virtual="true" returntype="System.Type">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetTypes()" attrib="454" virtual="true" returntype="System.Type[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="IsDefined(System.Type, System.Boolean)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Load(System.Reflection.AssemblyName)" attrib="150" static="true" returntype="System.Reflection.Assembly">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="assemblyRef" position="0" attrib="0" type="System.Reflection.AssemblyName" />
                </parameters>
              </method>
              <method name="Load(System.String)" attrib="150" static="true" returntype="System.Reflection.Assembly">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="assemblyString" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Load(System.Byte[], System.Byte[])" attrib="150" static="true" returntype="System.Reflection.Assembly">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="rawAssembly" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="rawSymbolStore" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Load(System.Byte[])" attrib="150" static="true" returntype="System.Reflection.Assembly">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="rawAssembly" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="LoadFrom(System.String)" attrib="150" static="true" returntype="System.Reflection.Assembly">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="assemblyFile" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="AssemblyAlgorithmIdAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.UInt32)" attrib="6278">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="algorithmId" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Configuration.Assemblies.AssemblyHashAlgorithm)" attrib="6278">
                <parameters>
                  <parameter name="algorithmId" position="0" attrib="0" type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="AlgorithmId" attrib="0" ptype="System.UInt32" params="">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <methods>
                  <method name="get_AlgorithmId()" attrib="2182" returntype="System.UInt32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="AssemblyCompanyAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="company" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Company" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Company()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="AssemblyConfigurationAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="configuration" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Configuration" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Configuration()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="AssemblyCopyrightAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="copyright" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Copyright" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Copyright()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="AssemblyCultureAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="culture" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Culture" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Culture()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="AssemblyDefaultAliasAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="defaultAlias" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="DefaultAlias" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_DefaultAlias()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="AssemblyDelaySignAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="delaySign" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="DelaySign" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_DelaySign()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="AssemblyDescriptionAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="description" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Description" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Description()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="AssemblyFileVersionAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="version" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Version" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Version()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="AssemblyFlagsAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Reflection.AssemblyNameFlags)" attrib="6278">
                <parameters>
                  <parameter name="assemblyFlags" position="0" attrib="0" type="System.Reflection.AssemblyNameFlags" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="AssemblyFlags" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_AssemblyFlags()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="AssemblyInformationalVersionAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="informationalVersion" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="InformationalVersion" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_InformationalVersion()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="AssemblyKeyFileAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="keyFile" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="KeyFile" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_KeyFile()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="AssemblyKeyNameAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="keyName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="KeyName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_KeyName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="AssemblyName" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
            </attributes>
            <interfaces />
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="assemblyName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="CodeBase" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_CodeBase()" attrib="2182" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_CodeBase(System.String)" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="CultureInfo" attrib="0" ptype="System.Globalization.CultureInfo" params="">
                <methods>
                  <method name="get_CultureInfo()" attrib="2182" returntype="System.Globalization.CultureInfo">
                    <parameters />
                  </method>
                  <method name="set_CultureInfo(System.Globalization.CultureInfo)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Globalization.CultureInfo" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Flags" attrib="0" ptype="System.Reflection.AssemblyNameFlags" params="">
                <methods>
                  <method name="get_Flags()" attrib="2182" returntype="System.Reflection.AssemblyNameFlags">
                    <parameters />
                  </method>
                  <method name="set_Flags(System.Reflection.AssemblyNameFlags)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Reflection.AssemblyNameFlags" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="FullName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_FullName()" attrib="2182" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="HashAlgorithm" attrib="0" ptype="System.Configuration.Assemblies.AssemblyHashAlgorithm" params="">
                <methods>
                  <method name="get_HashAlgorithm()" attrib="2182" returntype="System.Configuration.Assemblies.AssemblyHashAlgorithm">
                    <parameters />
                  </method>
                  <method name="set_HashAlgorithm(System.Configuration.Assemblies.AssemblyHashAlgorithm)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Name(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Version" attrib="0" ptype="System.Version" params="">
                <methods>
                  <method name="get_Version()" attrib="2182" returntype="System.Version">
                    <parameters />
                  </method>
                  <method name="set_Version(System.Version)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Version" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="VersionCompatibility" attrib="0" ptype="System.Configuration.Assemblies.AssemblyVersionCompatibility" params="">
                <methods>
                  <method name="get_VersionCompatibility()" attrib="2182" returntype="System.Configuration.Assemblies.AssemblyVersionCompatibility">
                    <parameters />
                  </method>
                  <method name="set_VersionCompatibility(System.Configuration.Assemblies.AssemblyVersionCompatibility)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Configuration.Assemblies.AssemblyVersionCompatibility" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Clone()" attrib="486" virtual="true" returntype="System.Object">
                <parameters />
              </method>
              <method name="GetPublicKey()" attrib="134" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="GetPublicKeyToken()" attrib="134" returntype="System.Byte[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="ReferenceMatchesDefinition(System.Reflection.AssemblyName, System.Reflection.AssemblyName)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="reference" position="0" attrib="0" type="System.Reflection.AssemblyName" />
                  <parameter name="definition" position="1" attrib="0" type="System.Reflection.AssemblyName" />
                </parameters>
              </method>
              <method name="SetPublicKey(System.Byte[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="publicKey" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="SetPublicKeyToken(System.Byte[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="publicKeyToken" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="AssemblyNameFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <fields>
              <field name="EnableJITcompileOptimizer" attrib="32854" fieldtype="System.Reflection.AssemblyNameFlags" value="16384" />
              <field name="EnableJITcompileTracking" attrib="32854" fieldtype="System.Reflection.AssemblyNameFlags" value="32768" />
              <field name="None" attrib="32854" fieldtype="System.Reflection.AssemblyNameFlags" value="0" />
              <field name="PublicKey" attrib="32854" fieldtype="System.Reflection.AssemblyNameFlags" value="1" />
              <field name="Retargetable" attrib="32854" fieldtype="System.Reflection.AssemblyNameFlags" value="256" />
            </fields>
          </class>
          <class name="AssemblyProductAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="product" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Product" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Product()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="AssemblyTitleAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="title" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Title" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Title()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="AssemblyTrademarkAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="trademark" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Trademark" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Trademark()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="AssemblyVersionAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="version" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Version" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Version()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="Binder" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="BindToField(System.Reflection.BindingFlags, System.Reflection.FieldInfo[], System.Object, System.Globalization.CultureInfo)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.FieldInfo">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="match" position="1" attrib="0" type="System.Reflection.FieldInfo[]" />
                  <parameter name="value" position="2" attrib="0" type="System.Object" />
                  <parameter name="culture" position="3" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
              <method name="BindToMethod(System.Reflection.BindingFlags, System.Reflection.MethodBase[], System.Object[]&amp;, System.Reflection.ParameterModifier[], System.Globalization.CultureInfo, System.String[], out System.Object&amp;)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.MethodBase">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="match" position="1" attrib="0" type="System.Reflection.MethodBase[]" />
                  <parameter name="args" position="2" attrib="0" type="System.Object[]&amp;" direction="ref" />
                  <parameter name="modifiers" position="3" attrib="0" type="System.Reflection.ParameterModifier[]" />
                  <parameter name="culture" position="4" attrib="0" type="System.Globalization.CultureInfo" />
                  <parameter name="names" position="5" attrib="0" type="System.String[]" />
                  <parameter name="state" position="6" attrib="2" type="System.Object&amp;" direction="out" />
                </parameters>
              </method>
              <method name="ChangeType(System.Object, System.Type, System.Globalization.CultureInfo)" attrib="1478" abstract="true" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="type" position="1" attrib="0" type="System.Type" />
                  <parameter name="culture" position="2" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
              <method name="ReorderArgumentArray(System.Object[]&amp;, System.Object)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="args" position="0" attrib="0" type="System.Object[]&amp;" direction="ref" />
                  <parameter name="state" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="SelectMethod(System.Reflection.BindingFlags, System.Reflection.MethodBase[], System.Type[], System.Reflection.ParameterModifier[])" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.MethodBase">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="match" position="1" attrib="0" type="System.Reflection.MethodBase[]" />
                  <parameter name="types" position="2" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="3" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="SelectProperty(System.Reflection.BindingFlags, System.Reflection.PropertyInfo[], System.Type, System.Type[], System.Reflection.ParameterModifier[])" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.PropertyInfo">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="match" position="1" attrib="0" type="System.Reflection.PropertyInfo[]" />
                  <parameter name="returnType" position="2" attrib="0" type="System.Type" />
                  <parameter name="indexes" position="3" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="4" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="BindingFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <fields>
              <field name="CreateInstance" attrib="32854" fieldtype="System.Reflection.BindingFlags" value="512" />
              <field name="DeclaredOnly" attrib="32854" fieldtype="System.Reflection.BindingFlags" value="2" />
              <field name="Default" attrib="32854" fieldtype="System.Reflection.BindingFlags" value="0" />
              <field name="ExactBinding" attrib="32854" fieldtype="System.Reflection.BindingFlags" value="65536" />
              <field name="FlattenHierarchy" attrib="32854" fieldtype="System.Reflection.BindingFlags" value="64" />
              <field name="GetField" attrib="32854" fieldtype="System.Reflection.BindingFlags" value="1024" />
              <field name="GetProperty" attrib="32854" fieldtype="System.Reflection.BindingFlags" value="4096" />
              <field name="IgnoreCase" attrib="32854" fieldtype="System.Reflection.BindingFlags" value="1" />
              <field name="IgnoreReturn" attrib="32854" fieldtype="System.Reflection.BindingFlags" value="16777216" />
              <field name="Instance" attrib="32854" fieldtype="System.Reflection.BindingFlags" value="4" />
              <field name="InvokeMethod" attrib="32854" fieldtype="System.Reflection.BindingFlags" value="256" />
              <field name="NonPublic" attrib="32854" fieldtype="System.Reflection.BindingFlags" value="32" />
              <field name="OptionalParamBinding" attrib="32854" fieldtype="System.Reflection.BindingFlags" value="262144" />
              <field name="Public" attrib="32854" fieldtype="System.Reflection.BindingFlags" value="16" />
              <field name="PutDispProperty" attrib="32854" fieldtype="System.Reflection.BindingFlags" value="16384" />
              <field name="PutRefDispProperty" attrib="32854" fieldtype="System.Reflection.BindingFlags" value="32768" />
              <field name="SetField" attrib="32854" fieldtype="System.Reflection.BindingFlags" value="2048" />
              <field name="SetProperty" attrib="32854" fieldtype="System.Reflection.BindingFlags" value="8192" />
              <field name="Static" attrib="32854" fieldtype="System.Reflection.BindingFlags" value="8" />
              <field name="SuppressChangeType" attrib="32854" fieldtype="System.Reflection.BindingFlags" value="131072" />
            </fields>
          </class>
          <class name="CallingConventions" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.FlagsAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Any" attrib="32854" fieldtype="System.Reflection.CallingConventions" value="3" />
              <field name="ExplicitThis" attrib="32854" fieldtype="System.Reflection.CallingConventions" value="64" />
              <field name="HasThis" attrib="32854" fieldtype="System.Reflection.CallingConventions" value="32" />
              <field name="Standard" attrib="32854" fieldtype="System.Reflection.CallingConventions" value="1" />
              <field name="VarArgs" attrib="32854" fieldtype="System.Reflection.CallingConventions" value="2" />
            </fields>
          </class>
          <class name="ConstructorInfo" type="class" base="System.Reflection.MethodBase" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
            </attributes>
            <interfaces />
            <fields>
              <field name="ConstructorName" attrib="54" fieldtype="System.String">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
              </field>
              <field name="TypeConstructorName" attrib="54" fieldtype="System.String">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
              </field>
            </fields>
            <properties>
              <property name="MemberType" attrib="0" ptype="System.Reflection.MemberTypes" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_MemberType()" attrib="2246" virtual="true" returntype="System.Reflection.MemberTypes">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Invoke(System.Object[])" attrib="134" returntype="System.Object">
                <attributes>
                  <attribute name="System.Diagnostics.DebuggerStepThroughAttribute" />
                  <attribute name="System.Diagnostics.DebuggerHiddenAttribute" />
                </attributes>
                <parameters>
                  <parameter name="parameters" position="0" attrib="0" type="System.Object[]" />
                </parameters>
              </method>
              <method name="Invoke(System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)" attrib="1478" abstract="true" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="invokeAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="1" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="parameters" position="2" attrib="0" type="System.Object[]" />
                  <parameter name="culture" position="3" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="CustomAttributeFormatException" type="class" base="System.FormatException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="DefaultMemberAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="memberName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="MemberName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_MemberName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="EventAttributes" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <fields>
              <field name="None" attrib="32854" fieldtype="System.Reflection.EventAttributes" value="0" />
              <field name="ReservedMask" attrib="32854" fieldtype="System.Reflection.EventAttributes" value="1024" />
              <field name="RTSpecialName" attrib="32854" fieldtype="System.Reflection.EventAttributes" value="1024" />
              <field name="SpecialName" attrib="32854" fieldtype="System.Reflection.EventAttributes" value="512" />
            </fields>
          </class>
          <class name="EventInfo" type="class" base="System.Reflection.MemberInfo" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
            </attributes>
            <interfaces />
            <properties>
              <property name="Attributes" attrib="0" ptype="System.Reflection.EventAttributes" params="">
                <methods>
                  <method name="get_Attributes()" attrib="3526" abstract="true" virtual="true" returntype="System.Reflection.EventAttributes">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="EventHandlerType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_EventHandlerType()" attrib="2534" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsMulticast" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsMulticast()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsSpecialName" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsSpecialName()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MemberType" attrib="0" ptype="System.Reflection.MemberTypes" params="">
                <methods>
                  <method name="get_MemberType()" attrib="2246" virtual="true" returntype="System.Reflection.MemberTypes">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AddEventHandler(System.Object, System.Delegate)" attrib="486" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Diagnostics.DebuggerHiddenAttribute" />
                  <attribute name="System.Diagnostics.DebuggerStepThroughAttribute" />
                </attributes>
                <parameters>
                  <parameter name="target" position="0" attrib="0" type="System.Object" />
                  <parameter name="handler" position="1" attrib="0" type="System.Delegate" />
                </parameters>
              </method>
              <method name="GetAddMethod()" attrib="486" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters />
              </method>
              <method name="GetAddMethod(System.Boolean)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="nonPublic" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetRaiseMethod()" attrib="486" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters />
              </method>
              <method name="GetRaiseMethod(System.Boolean)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="nonPublic" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetRemoveMethod(System.Boolean)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="nonPublic" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetRemoveMethod()" attrib="486" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters />
              </method>
              <method name="RemoveEventHandler(System.Object, System.Delegate)" attrib="486" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Diagnostics.DebuggerHiddenAttribute" />
                  <attribute name="System.Diagnostics.DebuggerStepThroughAttribute" />
                </attributes>
                <parameters>
                  <parameter name="target" position="0" attrib="0" type="System.Object" />
                  <parameter name="handler" position="1" attrib="0" type="System.Delegate" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="FieldAttributes" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <fields>
              <field name="Assembly" attrib="32854" fieldtype="System.Reflection.FieldAttributes" value="3" />
              <field name="FamANDAssem" attrib="32854" fieldtype="System.Reflection.FieldAttributes" value="2" />
              <field name="Family" attrib="32854" fieldtype="System.Reflection.FieldAttributes" value="4" />
              <field name="FamORAssem" attrib="32854" fieldtype="System.Reflection.FieldAttributes" value="5" />
              <field name="FieldAccessMask" attrib="32854" fieldtype="System.Reflection.FieldAttributes" value="7" />
              <field name="HasDefault" attrib="32854" fieldtype="System.Reflection.FieldAttributes" value="32768" />
              <field name="HasFieldMarshal" attrib="32854" fieldtype="System.Reflection.FieldAttributes" value="4096" />
              <field name="HasFieldRVA" attrib="32854" fieldtype="System.Reflection.FieldAttributes" value="256" />
              <field name="InitOnly" attrib="32854" fieldtype="System.Reflection.FieldAttributes" value="32" />
              <field name="Literal" attrib="32854" fieldtype="System.Reflection.FieldAttributes" value="64" />
              <field name="NotSerialized" attrib="32854" fieldtype="System.Reflection.FieldAttributes" value="128" />
              <field name="PinvokeImpl" attrib="32854" fieldtype="System.Reflection.FieldAttributes" value="8192" />
              <field name="Private" attrib="32854" fieldtype="System.Reflection.FieldAttributes" value="1" />
              <field name="PrivateScope" attrib="32854" fieldtype="System.Reflection.FieldAttributes" value="0" />
              <field name="Public" attrib="32854" fieldtype="System.Reflection.FieldAttributes" value="6" />
              <field name="ReservedMask" attrib="32854" fieldtype="System.Reflection.FieldAttributes" value="38144" />
              <field name="RTSpecialName" attrib="32854" fieldtype="System.Reflection.FieldAttributes" value="1024" />
              <field name="SpecialName" attrib="32854" fieldtype="System.Reflection.FieldAttributes" value="512" />
              <field name="Static" attrib="32854" fieldtype="System.Reflection.FieldAttributes" value="16" />
            </fields>
          </class>
          <class name="FieldInfo" type="class" base="System.Reflection.MemberInfo" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces />
            <properties>
              <property name="Attributes" attrib="0" ptype="System.Reflection.FieldAttributes" params="">
                <methods>
                  <method name="get_Attributes()" attrib="3526" abstract="true" virtual="true" returntype="System.Reflection.FieldAttributes">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="FieldHandle" attrib="0" ptype="System.RuntimeFieldHandle" params="">
                <methods>
                  <method name="get_FieldHandle()" attrib="3526" abstract="true" virtual="true" returntype="System.RuntimeFieldHandle">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="FieldType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_FieldType()" attrib="3526" abstract="true" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsAssembly" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsAssembly()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsFamily" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsFamily()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsFamilyAndAssembly" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsFamilyAndAssembly()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsFamilyOrAssembly" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsFamilyOrAssembly()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsInitOnly" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsInitOnly()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsLiteral" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsLiteral()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsNotSerialized" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsNotSerialized()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsPinvokeImpl" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsPinvokeImpl()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsPrivate" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsPrivate()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsPublic" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsPublic()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsSpecialName" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsSpecialName()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsStatic" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsStatic()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MemberType" attrib="0" ptype="System.Reflection.MemberTypes" params="">
                <methods>
                  <method name="get_MemberType()" attrib="2246" virtual="true" returntype="System.Reflection.MemberTypes">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetFieldFromHandle(System.RuntimeFieldHandle, System.RuntimeTypeHandle)" attrib="150" static="true" returntype="System.Reflection.FieldInfo">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="handle" position="0" attrib="0" type="System.RuntimeFieldHandle" />
                  <parameter name="declaringType" position="1" attrib="0" type="System.RuntimeTypeHandle" />
                </parameters>
              </method>
              <method name="GetFieldFromHandle(System.RuntimeFieldHandle)" attrib="150" static="true" returntype="System.Reflection.FieldInfo">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="handle" position="0" attrib="0" type="System.RuntimeFieldHandle" />
                </parameters>
              </method>
              <method name="GetRawConstantValue()" attrib="454" virtual="true" returntype="System.Object">
                <parameters />
              </method>
              <method name="GetValue(System.Object)" attrib="1478" abstract="true" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="SetValue(System.Object, System.Object)" attrib="486" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Diagnostics.DebuggerStepThroughAttribute" />
                  <attribute name="System.Diagnostics.DebuggerHiddenAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                  <parameter name="value" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="SetValue(System.Object, System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Globalization.CultureInfo)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                  <parameter name="value" position="1" attrib="0" type="System.Object" />
                  <parameter name="invokeAttr" position="2" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="3" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="culture" position="4" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="GenericParameterAttributes" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <fields>
              <field name="Contravariant" attrib="32854" fieldtype="System.Reflection.GenericParameterAttributes" value="2" />
              <field name="Covariant" attrib="32854" fieldtype="System.Reflection.GenericParameterAttributes" value="1" />
              <field name="DefaultConstructorConstraint" attrib="32854" fieldtype="System.Reflection.GenericParameterAttributes" value="16" />
              <field name="None" attrib="32854" fieldtype="System.Reflection.GenericParameterAttributes" value="0" />
              <field name="NotNullableValueTypeConstraint" attrib="32854" fieldtype="System.Reflection.GenericParameterAttributes" value="8" />
              <field name="ReferenceTypeConstraint" attrib="32854" fieldtype="System.Reflection.GenericParameterAttributes" value="4" />
              <field name="SpecialConstraintMask" attrib="32854" fieldtype="System.Reflection.GenericParameterAttributes" value="28" />
              <field name="VarianceMask" attrib="32854" fieldtype="System.Reflection.GenericParameterAttributes" value="3" />
            </fields>
          </class>
          <class name="ICustomAttributeProvider" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <methods>
              <method name="GetCustomAttributes(System.Boolean)" attrib="1478" abstract="true" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="inherit" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Type, System.Boolean)" attrib="1478" abstract="true" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="IsDefined(System.Type, System.Boolean)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="InterfaceMapping" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="InterfaceMethods" attrib="6" fieldtype="System.Reflection.MethodInfo[]">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
              </field>
              <field name="InterfaceType" attrib="6" fieldtype="System.Type">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
              </field>
              <field name="TargetMethods" attrib="6" fieldtype="System.Reflection.MethodInfo[]">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
              </field>
              <field name="TargetType" attrib="6" fieldtype="System.Type">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
              </field>
            </fields>
          </class>
          <class name="IReflect" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.GuidAttribute" />
            </attributes>
            <properties>
              <property name="UnderlyingSystemType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_UnderlyingSystemType()" attrib="3526" abstract="true" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetField(System.String, System.Reflection.BindingFlags)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.FieldInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetFields(System.Reflection.BindingFlags)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.FieldInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetMember(System.String, System.Reflection.BindingFlags)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.MemberInfo[]">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetMembers(System.Reflection.BindingFlags)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.MemberInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetMethod(System.String, System.Reflection.BindingFlags)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetMethod(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="types" position="3" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="4" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="GetMethods(System.Reflection.BindingFlags)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.MethodInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetProperties(System.Reflection.BindingFlags)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.PropertyInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetProperty(System.String, System.Reflection.BindingFlags)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.PropertyInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetProperty(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.PropertyInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="returnType" position="3" attrib="0" type="System.Type" />
                  <parameter name="types" position="4" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="5" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[], System.Reflection.ParameterModifier[], System.Globalization.CultureInfo, System.String[])" attrib="1478" abstract="true" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="invokeAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="target" position="3" attrib="0" type="System.Object" />
                  <parameter name="args" position="4" attrib="0" type="System.Object[]" />
                  <parameter name="modifiers" position="5" attrib="0" type="System.Reflection.ParameterModifier[]" />
                  <parameter name="culture" position="6" attrib="0" type="System.Globalization.CultureInfo" />
                  <parameter name="namedParameters" position="7" attrib="0" type="System.String[]" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="LocalVariableInfo" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <properties>
              <property name="IsPinned" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsPinned()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LocalIndex" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_LocalIndex()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LocalType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_LocalType()" attrib="2502" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="MemberFilter" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Reflection.MemberInfo, System.Object, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="m" position="0" attrib="0" type="System.Reflection.MemberInfo" />
                  <parameter name="filterCriteria" position="1" attrib="0" type="System.Object" />
                  <parameter name="callback" position="2" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Reflection.MemberInfo, System.Object)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="m" position="0" attrib="0" type="System.Reflection.MemberInfo" />
                  <parameter name="filterCriteria" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="MemberInfo" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.Reflection.ICustomAttributeProvider" />
            </interfaces>
            <properties>
              <property name="DeclaringType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_DeclaringType()" attrib="3526" abstract="true" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MemberType" attrib="0" ptype="System.Reflection.MemberTypes" params="">
                <methods>
                  <method name="get_MemberType()" attrib="3526" abstract="true" virtual="true" returntype="System.Reflection.MemberTypes">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MetadataToken" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_MetadataToken()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Module" attrib="0" ptype="System.Reflection.Module" params="">
                <methods>
                  <method name="get_Module()" attrib="2502" virtual="true" returntype="System.Reflection.Module">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReflectedType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_ReflectedType()" attrib="3526" abstract="true" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetCustomAttributes(System.Type, System.Boolean)" attrib="1478" abstract="true" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Boolean)" attrib="1478" abstract="true" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="inherit" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="IsDefined(System.Type, System.Boolean)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="MemberTypes" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <fields>
              <field name="All" attrib="32854" fieldtype="System.Reflection.MemberTypes" value="191" />
              <field name="Constructor" attrib="32854" fieldtype="System.Reflection.MemberTypes" value="1" />
              <field name="Custom" attrib="32854" fieldtype="System.Reflection.MemberTypes" value="64" />
              <field name="Event" attrib="32854" fieldtype="System.Reflection.MemberTypes" value="2" />
              <field name="Field" attrib="32854" fieldtype="System.Reflection.MemberTypes" value="4" />
              <field name="Method" attrib="32854" fieldtype="System.Reflection.MemberTypes" value="8" />
              <field name="NestedType" attrib="32854" fieldtype="System.Reflection.MemberTypes" value="128" />
              <field name="Property" attrib="32854" fieldtype="System.Reflection.MemberTypes" value="16" />
              <field name="TypeInfo" attrib="32854" fieldtype="System.Reflection.MemberTypes" value="32" />
            </fields>
          </class>
          <class name="MethodAttributes" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.FlagsAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Abstract" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="1024" />
              <field name="Assembly" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="3" />
              <field name="CheckAccessOnOverride" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="512" />
              <field name="FamANDAssem" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="2" />
              <field name="Family" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="4" />
              <field name="FamORAssem" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="5" />
              <field name="Final" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="32" />
              <field name="HasSecurity" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="16384" />
              <field name="HideBySig" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="128" />
              <field name="MemberAccessMask" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="7" />
              <field name="NewSlot" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="256" />
              <field name="PinvokeImpl" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="8192" />
              <field name="Private" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="1" />
              <field name="PrivateScope" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="0" />
              <field name="Public" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="6" />
              <field name="RequireSecObject" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="32768" />
              <field name="ReservedMask" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="53248" />
              <field name="ReuseSlot" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="0" />
              <field name="RTSpecialName" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="4096" />
              <field name="SpecialName" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="2048" />
              <field name="Static" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="16" />
              <field name="UnmanagedExport" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="8" />
              <field name="Virtual" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="64" />
              <field name="VtableLayoutMask" attrib="32854" fieldtype="System.Reflection.MethodAttributes" value="256" />
            </fields>
          </class>
          <class name="MethodBase" type="class" base="System.Reflection.MemberInfo" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
            </attributes>
            <interfaces />
            <properties>
              <property name="Attributes" attrib="0" ptype="System.Reflection.MethodAttributes" params="">
                <methods>
                  <method name="get_Attributes()" attrib="3526" abstract="true" virtual="true" returntype="System.Reflection.MethodAttributes">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CallingConvention" attrib="0" ptype="System.Reflection.CallingConventions" params="">
                <methods>
                  <method name="get_CallingConvention()" attrib="2502" virtual="true" returntype="System.Reflection.CallingConventions">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ContainsGenericParameters" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_ContainsGenericParameters()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsAbstract" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsAbstract()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsAssembly" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsAssembly()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsConstructor" attrib="0" ptype="System.Boolean" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_IsConstructor()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsFamily" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsFamily()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsFamilyAndAssembly" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsFamilyAndAssembly()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsFamilyOrAssembly" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsFamilyOrAssembly()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsFinal" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsFinal()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsGenericMethod" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsGenericMethod()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsGenericMethodDefinition" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsGenericMethodDefinition()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsHideBySig" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsHideBySig()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsPrivate" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsPrivate()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsPublic" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsPublic()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsSpecialName" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsSpecialName()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsStatic" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsStatic()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsVirtual" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsVirtual()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MethodHandle" attrib="0" ptype="System.RuntimeMethodHandle" params="">
                <methods>
                  <method name="get_MethodHandle()" attrib="3526" abstract="true" virtual="true" returntype="System.RuntimeMethodHandle">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetCurrentMethod()" attrib="32918" static="true" returntype="System.Reflection.MethodBase">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetGenericArguments()" attrib="454" virtual="true" returntype="System.Type[]">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetMethodFromHandle(System.RuntimeMethodHandle)" attrib="150" static="true" returntype="System.Reflection.MethodBase">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="handle" position="0" attrib="0" type="System.RuntimeMethodHandle" />
                </parameters>
              </method>
              <method name="GetMethodFromHandle(System.RuntimeMethodHandle, System.RuntimeTypeHandle)" attrib="150" static="true" returntype="System.Reflection.MethodBase">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="handle" position="0" attrib="0" type="System.RuntimeMethodHandle" />
                  <parameter name="declaringType" position="1" attrib="0" type="System.RuntimeTypeHandle" />
                </parameters>
              </method>
              <method name="GetMethodImplementationFlags()" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.MethodImplAttributes">
                <parameters />
              </method>
              <method name="GetParameters()" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.ParameterInfo[]">
                <parameters />
              </method>
              <method name="Invoke(System.Object, System.Object[])" attrib="486" virtual="true" returntype="System.Object">
                <attributes>
                  <attribute name="System.Diagnostics.DebuggerHiddenAttribute" />
                  <attribute name="System.Diagnostics.DebuggerStepThroughAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                  <parameter name="parameters" position="1" attrib="0" type="System.Object[]" />
                </parameters>
              </method>
              <method name="Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)" attrib="1478" abstract="true" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                  <parameter name="invokeAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="parameters" position="3" attrib="0" type="System.Object[]" />
                  <parameter name="culture" position="4" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="MethodImplAttributes" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="CodeTypeMask" attrib="32854" fieldtype="System.Reflection.MethodImplAttributes" value="3" />
              <field name="ForwardRef" attrib="32854" fieldtype="System.Reflection.MethodImplAttributes" value="16" />
              <field name="IL" attrib="32854" fieldtype="System.Reflection.MethodImplAttributes" value="0" />
              <field name="InternalCall" attrib="32854" fieldtype="System.Reflection.MethodImplAttributes" value="4096" />
              <field name="Managed" attrib="32854" fieldtype="System.Reflection.MethodImplAttributes" value="0" />
              <field name="ManagedMask" attrib="32854" fieldtype="System.Reflection.MethodImplAttributes" value="4" />
              <field name="MaxMethodImplVal" attrib="32854" fieldtype="System.Reflection.MethodImplAttributes" value="65535" />
              <field name="Native" attrib="32854" fieldtype="System.Reflection.MethodImplAttributes" value="1" />
              <field name="NoInlining" attrib="32854" fieldtype="System.Reflection.MethodImplAttributes" value="8" />
              <field name="NoOptimization" attrib="32854" fieldtype="System.Reflection.MethodImplAttributes" value="64" />
              <field name="OPTIL" attrib="32854" fieldtype="System.Reflection.MethodImplAttributes" value="2" />
              <field name="PreserveSig" attrib="32854" fieldtype="System.Reflection.MethodImplAttributes" value="128" />
              <field name="Runtime" attrib="32854" fieldtype="System.Reflection.MethodImplAttributes" value="3" />
              <field name="Synchronized" attrib="32854" fieldtype="System.Reflection.MethodImplAttributes" value="32" />
              <field name="Unmanaged" attrib="32854" fieldtype="System.Reflection.MethodImplAttributes" value="4" />
            </fields>
          </class>
          <class name="MethodInfo" type="class" base="System.Reflection.MethodBase" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
            </attributes>
            <interfaces />
            <properties>
              <property name="ContainsGenericParameters" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_ContainsGenericParameters()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsGenericMethod" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsGenericMethod()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsGenericMethodDefinition" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsGenericMethodDefinition()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MemberType" attrib="0" ptype="System.Reflection.MemberTypes" params="">
                <methods>
                  <method name="get_MemberType()" attrib="2246" virtual="true" returntype="System.Reflection.MemberTypes">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReturnParameter" attrib="0" ptype="System.Reflection.ParameterInfo" params="">
                <methods>
                  <method name="get_ReturnParameter()" attrib="2502" virtual="true" returntype="System.Reflection.ParameterInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReturnType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_ReturnType()" attrib="2502" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReturnTypeCustomAttributes" attrib="0" ptype="System.Reflection.ICustomAttributeProvider" params="">
                <methods>
                  <method name="get_ReturnTypeCustomAttributes()" attrib="3526" abstract="true" virtual="true" returntype="System.Reflection.ICustomAttributeProvider">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetBaseDefinition()" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters />
              </method>
              <method name="GetGenericArguments()" attrib="198" virtual="true" returntype="System.Type[]">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetGenericMethodDefinition()" attrib="454" virtual="true" returntype="System.Reflection.MethodInfo">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="MakeGenericMethod(System.Type[])" attrib="454" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="typeArguments" position="0" attrib="0" type="System.Type[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Missing" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Value" attrib="54" fieldtype="System.Reflection.Missing" />
            </fields>
          </class>
          <class name="Module" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.Reflection.ICustomAttributeProvider" />
            </interfaces>
            <properties>
              <property name="Assembly" attrib="0" ptype="System.Reflection.Assembly" params="">
                <methods>
                  <method name="get_Assembly()" attrib="2182" returntype="System.Reflection.Assembly">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="FullyQualifiedName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_FullyQualifiedName()" attrib="2502" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MetadataToken" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_MetadataToken()" attrib="2182" returntype="System.Int32">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="2182" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Type, System.Boolean)" attrib="454" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Boolean)" attrib="454" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="inherit" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetField(System.String, System.Reflection.BindingFlags)" attrib="134" returntype="System.Reflection.FieldInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetField(System.String)" attrib="134" returntype="System.Reflection.FieldInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetFields()" attrib="134" returntype="System.Reflection.FieldInfo[]">
                <parameters />
              </method>
              <method name="GetFields(System.Reflection.BindingFlags)" attrib="134" returntype="System.Reflection.FieldInfo[]">
                <parameters>
                  <parameter name="bindingFlags" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetMethod(System.String, System.Type[])" attrib="134" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="types" position="1" attrib="0" type="System.Type[]" />
                </parameters>
              </method>
              <method name="GetMethod(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])" attrib="134" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="callConvention" position="3" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="types" position="4" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="5" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="GetMethod(System.String)" attrib="134" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetMethodImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])" attrib="452" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="callConvention" position="3" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="types" position="4" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="5" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="GetMethods()" attrib="134" returntype="System.Reflection.MethodInfo[]">
                <parameters />
              </method>
              <method name="GetMethods(System.Reflection.BindingFlags)" attrib="134" returntype="System.Reflection.MethodInfo[]">
                <parameters>
                  <parameter name="bindingFlags" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetType(System.String)" attrib="454" virtual="true" returntype="System.Type">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="className" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetType(System.String, System.Boolean)" attrib="454" virtual="true" returntype="System.Type">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="className" position="0" attrib="0" type="System.String" />
                  <parameter name="ignoreCase" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetType(System.String, System.Boolean, System.Boolean)" attrib="454" virtual="true" returntype="System.Type">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="className" position="0" attrib="0" type="System.String" />
                  <parameter name="throwOnError" position="1" attrib="0" type="System.Boolean" />
                  <parameter name="ignoreCase" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetTypes()" attrib="454" virtual="true" returntype="System.Type[]">
                <parameters />
              </method>
              <method name="IsDefined(System.Type, System.Boolean)" attrib="454" virtual="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ResolveMethod(System.Int32, System.Type[], System.Type[])" attrib="134" returntype="System.Reflection.MethodBase">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="metadataToken" position="0" attrib="0" type="System.Int32" />
                  <parameter name="genericTypeArguments" position="1" attrib="0" type="System.Type[]" />
                  <parameter name="genericMethodArguments" position="2" attrib="0" type="System.Type[]" />
                </parameters>
              </method>
              <method name="ResolveMethod(System.Int32)" attrib="134" returntype="System.Reflection.MethodBase">
                <parameters>
                  <parameter name="metadataToken" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ResolveString(System.Int32)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="metadataToken" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ResolveType(System.Int32, System.Type[], System.Type[])" attrib="134" returntype="System.Type">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="metadataToken" position="0" attrib="0" type="System.Int32" />
                  <parameter name="genericTypeArguments" position="1" attrib="0" type="System.Type[]" />
                  <parameter name="genericMethodArguments" position="2" attrib="0" type="System.Type[]" />
                </parameters>
              </method>
              <method name="ResolveType(System.Int32)" attrib="134" returntype="System.Type">
                <parameters>
                  <parameter name="metadataToken" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="ParameterAttributes" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <fields>
              <field name="HasDefault" attrib="32854" fieldtype="System.Reflection.ParameterAttributes" value="4096" />
              <field name="HasFieldMarshal" attrib="32854" fieldtype="System.Reflection.ParameterAttributes" value="8192" />
              <field name="In" attrib="32854" fieldtype="System.Reflection.ParameterAttributes" value="1" />
              <field name="None" attrib="32854" fieldtype="System.Reflection.ParameterAttributes" value="0" />
              <field name="Optional" attrib="32854" fieldtype="System.Reflection.ParameterAttributes" value="16" />
              <field name="Out" attrib="32854" fieldtype="System.Reflection.ParameterAttributes" value="2" />
              <field name="Reserved3" attrib="32854" fieldtype="System.Reflection.ParameterAttributes" value="16384" />
              <field name="Reserved4" attrib="32854" fieldtype="System.Reflection.ParameterAttributes" value="32768" />
              <field name="ReservedMask" attrib="32854" fieldtype="System.Reflection.ParameterAttributes" value="61440" />
              <field name="Retval" attrib="32854" fieldtype="System.Reflection.ParameterAttributes" value="8" />
            </fields>
          </class>
          <class name="ParameterInfo" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.Reflection.ICustomAttributeProvider" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Attributes" attrib="0" ptype="System.Reflection.ParameterAttributes" params="">
                <methods>
                  <method name="get_Attributes()" attrib="2502" virtual="true" returntype="System.Reflection.ParameterAttributes">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DefaultValue" attrib="0" ptype="System.Object" params="">
                <methods>
                  <method name="get_DefaultValue()" attrib="2502" virtual="true" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsOptional" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsOptional()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsOut" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsOut()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Member" attrib="0" ptype="System.Reflection.MemberInfo" params="">
                <methods>
                  <method name="get_Member()" attrib="2502" virtual="true" returntype="System.Reflection.MemberInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MetadataToken" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_MetadataToken()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="2502" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ParameterType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_ParameterType()" attrib="2502" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Position" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Position()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetCustomAttributes(System.Type, System.Boolean)" attrib="454" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Boolean)" attrib="454" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="inherit" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="IsDefined(System.Type, System.Boolean)" attrib="454" virtual="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="ParameterModifier" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="parameterCount" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Item" attrib="0" ptype="System.Boolean" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2182" returntype="System.Boolean">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="set_Item(System.Int32, System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                      <parameter name="value" position="1" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="PropertyAttributes" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <fields>
              <field name="HasDefault" attrib="32854" fieldtype="System.Reflection.PropertyAttributes" value="4096" />
              <field name="None" attrib="32854" fieldtype="System.Reflection.PropertyAttributes" value="0" />
              <field name="Reserved2" attrib="32854" fieldtype="System.Reflection.PropertyAttributes" value="8192" />
              <field name="Reserved3" attrib="32854" fieldtype="System.Reflection.PropertyAttributes" value="16384" />
              <field name="Reserved4" attrib="32854" fieldtype="System.Reflection.PropertyAttributes" value="32768" />
              <field name="ReservedMask" attrib="32854" fieldtype="System.Reflection.PropertyAttributes" value="62464" />
              <field name="RTSpecialName" attrib="32854" fieldtype="System.Reflection.PropertyAttributes" value="1024" />
              <field name="SpecialName" attrib="32854" fieldtype="System.Reflection.PropertyAttributes" value="512" />
            </fields>
          </class>
          <class name="PropertyInfo" type="class" base="System.Reflection.MemberInfo" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
            </attributes>
            <interfaces />
            <properties>
              <property name="Attributes" attrib="0" ptype="System.Reflection.PropertyAttributes" params="">
                <methods>
                  <method name="get_Attributes()" attrib="3526" abstract="true" virtual="true" returntype="System.Reflection.PropertyAttributes">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanRead" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanRead()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanWrite" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanWrite()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsSpecialName" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsSpecialName()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MemberType" attrib="0" ptype="System.Reflection.MemberTypes" params="">
                <methods>
                  <method name="get_MemberType()" attrib="2246" virtual="true" returntype="System.Reflection.MemberTypes">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PropertyType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_PropertyType()" attrib="3526" abstract="true" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetAccessors()" attrib="486" virtual="true" returntype="System.Reflection.MethodInfo[]">
                <parameters />
              </method>
              <method name="GetAccessors(System.Boolean)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.MethodInfo[]">
                <parameters>
                  <parameter name="nonPublic" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetConstantValue()" attrib="454" virtual="true" returntype="System.Object">
                <parameters />
              </method>
              <method name="GetGetMethod(System.Boolean)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="nonPublic" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetGetMethod()" attrib="486" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters />
              </method>
              <method name="GetIndexParameters()" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.ParameterInfo[]">
                <parameters />
              </method>
              <method name="GetRawConstantValue()" attrib="454" virtual="true" returntype="System.Object">
                <parameters />
              </method>
              <method name="GetSetMethod()" attrib="486" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters />
              </method>
              <method name="GetSetMethod(System.Boolean)" attrib="1478" abstract="true" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="nonPublic" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetValue(System.Object, System.Object[])" attrib="454" virtual="true" returntype="System.Object">
                <attributes>
                  <attribute name="System.Diagnostics.DebuggerStepThroughAttribute" />
                  <attribute name="System.Diagnostics.DebuggerHiddenAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                  <parameter name="index" position="1" attrib="0" type="System.Object[]" />
                </parameters>
              </method>
              <method name="GetValue(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)" attrib="1478" abstract="true" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                  <parameter name="invokeAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="index" position="3" attrib="0" type="System.Object[]" />
                  <parameter name="culture" position="4" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
              <method name="SetValue(System.Object, System.Object, System.Object[])" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Diagnostics.DebuggerStepThroughAttribute" />
                  <attribute name="System.Diagnostics.DebuggerHiddenAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                  <parameter name="value" position="1" attrib="0" type="System.Object" />
                  <parameter name="index" position="2" attrib="0" type="System.Object[]" />
                </parameters>
              </method>
              <method name="SetValue(System.Object, System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                  <parameter name="value" position="1" attrib="0" type="System.Object" />
                  <parameter name="invokeAttr" position="2" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="3" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="index" position="4" attrib="0" type="System.Object[]" />
                  <parameter name="culture" position="5" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="ReflectionTypeLoadException" type="class" base="System.SystemException" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <properties>
              <property name="LoaderExceptions" attrib="0" ptype="System.Exception[]" params="">
                <methods>
                  <method name="get_LoaderExceptions()" attrib="2182" returntype="System.Exception[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Types" attrib="0" ptype="System.Type[]" params="">
                <methods>
                  <method name="get_Types()" attrib="2182" returntype="System.Type[]">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="ResourceAttributes" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <fields>
              <field name="Private" attrib="32854" fieldtype="System.Reflection.ResourceAttributes" value="2" />
              <field name="Public" attrib="32854" fieldtype="System.Reflection.ResourceAttributes" value="1" />
            </fields>
          </class>
          <class name="TargetException" type="class" base="System.Exception" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
          </class>
          <class name="TargetInvocationException" type="class" base="System.Exception" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="inner" position="0" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
            </constructors>
          </class>
          <class name="TargetParameterCountException" type="class" base="System.Exception" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="TypeAttributes" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.FlagsAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Abstract" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="128" />
              <field name="AnsiClass" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="0" />
              <field name="AutoClass" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="131072" />
              <field name="AutoLayout" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="0" />
              <field name="BeforeFieldInit" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="1048576" />
              <field name="Class" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="0" />
              <field name="ClassSemanticsMask" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="32" />
              <field name="CustomFormatClass" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="196608" />
              <field name="CustomFormatMask" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="12582912" />
              <field name="ExplicitLayout" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="16" />
              <field name="HasSecurity" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="262144" />
              <field name="Import" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="4096" />
              <field name="Interface" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="32" />
              <field name="LayoutMask" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="24" />
              <field name="NestedAssembly" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="5" />
              <field name="NestedFamANDAssem" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="6" />
              <field name="NestedFamily" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="4" />
              <field name="NestedFamORAssem" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="7" />
              <field name="NestedPrivate" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="3" />
              <field name="NestedPublic" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="2" />
              <field name="NotPublic" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="0" />
              <field name="Public" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="1" />
              <field name="ReservedMask" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="264192" />
              <field name="RTSpecialName" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="2048" />
              <field name="Sealed" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="256" />
              <field name="SequentialLayout" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="8" />
              <field name="Serializable" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="8192" />
              <field name="SpecialName" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="1024" />
              <field name="StringFormatMask" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="196608" />
              <field name="UnicodeClass" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="65536" />
              <field name="VisibilityMask" attrib="32854" fieldtype="System.Reflection.TypeAttributes" value="7" />
            </fields>
          </class>
          <class name="TypeDelegator" type="class" base="System.Type" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Type)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="delegatingType" position="0" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6276">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Assembly" attrib="0" ptype="System.Reflection.Assembly" params="">
                <methods>
                  <method name="get_Assembly()" attrib="2246" virtual="true" returntype="System.Reflection.Assembly">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="AssemblyQualifiedName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_AssemblyQualifiedName()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="BaseType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_BaseType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="FullName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_FullName()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="GUID" attrib="0" ptype="System.Guid" params="">
                <methods>
                  <method name="get_GUID()" attrib="2246" virtual="true" returntype="System.Guid">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MetadataToken" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_MetadataToken()" attrib="2246" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Module" attrib="0" ptype="System.Reflection.Module" params="">
                <methods>
                  <method name="get_Module()" attrib="2246" virtual="true" returntype="System.Reflection.Module">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Namespace" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Namespace()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TypeHandle" attrib="0" ptype="System.RuntimeTypeHandle" params="">
                <methods>
                  <method name="get_TypeHandle()" attrib="2246" virtual="true" returntype="System.RuntimeTypeHandle">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UnderlyingSystemType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_UnderlyingSystemType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetAttributeFlagsImpl()" attrib="196" virtual="true" returntype="System.Reflection.TypeAttributes">
                <parameters />
              </method>
              <method name="GetConstructorImpl(System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])" attrib="196" virtual="true" returntype="System.Reflection.ConstructorInfo">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="1" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="callConvention" position="2" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="types" position="3" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="4" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="GetConstructors(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.ConstructorInfo[]">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Type, System.Boolean)" attrib="198" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Boolean)" attrib="198" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="inherit" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetElementType()" attrib="198" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="GetEvent(System.String, System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.EventInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetEvents(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.EventInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetEvents()" attrib="198" virtual="true" returntype="System.Reflection.EventInfo[]">
                <parameters />
              </method>
              <method name="GetField(System.String, System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.FieldInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetFields(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.FieldInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetInterface(System.String, System.Boolean)" attrib="198" virtual="true" returntype="System.Type">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ignoreCase" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetInterfaceMap(System.Type)" attrib="198" virtual="true" returntype="System.Reflection.InterfaceMapping">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="interfaceType" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetInterfaces()" attrib="198" virtual="true" returntype="System.Type[]">
                <parameters />
              </method>
              <method name="GetMember(System.String, System.Reflection.MemberTypes, System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.MemberInfo[]">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="type" position="1" attrib="0" type="System.Reflection.MemberTypes" />
                  <parameter name="bindingAttr" position="2" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetMembers(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.MemberInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetMethodImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])" attrib="196" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="callConvention" position="3" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="types" position="4" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="5" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="GetMethods(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.MethodInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetNestedType(System.String, System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Type">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetNestedTypes(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Type[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetProperties(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.PropertyInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetPropertyImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])" attrib="196" virtual="true" returntype="System.Reflection.PropertyInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="returnType" position="3" attrib="0" type="System.Type" />
                  <parameter name="types" position="4" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="5" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="HasElementTypeImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[], System.Reflection.ParameterModifier[], System.Globalization.CultureInfo, System.String[])" attrib="198" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="invokeAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="target" position="3" attrib="0" type="System.Object" />
                  <parameter name="args" position="4" attrib="0" type="System.Object[]" />
                  <parameter name="modifiers" position="5" attrib="0" type="System.Reflection.ParameterModifier[]" />
                  <parameter name="culture" position="6" attrib="0" type="System.Globalization.CultureInfo" />
                  <parameter name="namedParameters" position="7" attrib="0" type="System.String[]" />
                </parameters>
              </method>
              <method name="IsArrayImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsByRefImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsCOMObjectImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsDefined(System.Type, System.Boolean)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="IsPointerImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsPrimitiveImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsValueTypeImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Reflection.Emit">
        <classes>
          <class name="AssemblyBuilder" type="class" base="System.Reflection.Assembly" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
            </attributes>
            <interfaces />
            <properties>
              <property name="CodeBase" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_CodeBase()" attrib="2246" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="EntryPoint" attrib="0" ptype="System.Reflection.MethodInfo" params="">
                <methods>
                  <method name="get_EntryPoint()" attrib="2246" virtual="true" returntype="System.Reflection.MethodInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ImageRuntimeVersion" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_ImageRuntimeVersion()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Location" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Location()" attrib="2246" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AddResourceFile(System.String, System.String)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="fileName" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="AddResourceFile(System.String, System.String, System.Reflection.ResourceAttributes)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="fileName" position="1" attrib="0" type="System.String" />
                  <parameter name="attribute" position="2" attrib="0" type="System.Reflection.ResourceAttributes" />
                </parameters>
              </method>
              <method name="DefineDynamicModule(System.String)" attrib="134" returntype="System.Reflection.Emit.ModuleBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="DefineDynamicModule(System.String, System.Boolean)" attrib="134" returntype="System.Reflection.Emit.ModuleBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="emitSymbolInfo" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetDynamicModule(System.String)" attrib="134" returntype="System.Reflection.Emit.ModuleBuilder">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetExportedTypes()" attrib="198" virtual="true" returntype="System.Type[]">
                <parameters />
              </method>
              <method name="GetFile(System.String)" attrib="198" virtual="true" returntype="System.IO.FileStream">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetFiles(System.Boolean)" attrib="198" virtual="true" returntype="System.IO.FileStream[]">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="getResourceModules" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetManifestResourceNames()" attrib="198" virtual="true" returntype="System.String[]">
                <parameters />
              </method>
              <method name="GetManifestResourceStream(System.Type, System.String)" attrib="198" virtual="true" returntype="System.IO.Stream">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetManifestResourceStream(System.String)" attrib="198" virtual="true" returntype="System.IO.Stream">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="con" position="0" attrib="0" type="System.Reflection.ConstructorInfo" />
                  <parameter name="binaryAttribute" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="customBuilder" position="0" attrib="0" type="System.Reflection.Emit.CustomAttributeBuilder" />
                </parameters>
              </method>
              <method name="SetEntryPoint(System.Reflection.MethodInfo)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="entryMethod" position="0" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="SetEntryPoint(System.Reflection.MethodInfo, System.Reflection.Emit.PEFileKinds)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="entryMethod" position="0" attrib="0" type="System.Reflection.MethodInfo" />
                  <parameter name="fileKind" position="1" attrib="0" type="System.Reflection.Emit.PEFileKinds" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="AssemblyBuilderAccess" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.FlagsAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Run" attrib="32854" fieldtype="System.Reflection.Emit.AssemblyBuilderAccess" value="1" />
            </fields>
          </class>
          <class name="ConstructorBuilder" type="class" base="System.Reflection.ConstructorInfo" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
            </attributes>
            <interfaces />
            <properties>
              <property name="Attributes" attrib="0" ptype="System.Reflection.MethodAttributes" params="">
                <methods>
                  <method name="get_Attributes()" attrib="2246" virtual="true" returntype="System.Reflection.MethodAttributes">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CallingConvention" attrib="0" ptype="System.Reflection.CallingConventions" params="">
                <methods>
                  <method name="get_CallingConvention()" attrib="2246" virtual="true" returntype="System.Reflection.CallingConventions">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DeclaringType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_DeclaringType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="InitLocals" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_InitLocals()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_InitLocals(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="MethodHandle" attrib="0" ptype="System.RuntimeMethodHandle" params="">
                <methods>
                  <method name="get_MethodHandle()" attrib="2246" virtual="true" returntype="System.RuntimeMethodHandle">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Module" attrib="0" ptype="System.Reflection.Module" params="">
                <methods>
                  <method name="get_Module()" attrib="2246" virtual="true" returntype="System.Reflection.Module">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReflectedType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_ReflectedType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Signature" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Signature()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="DefineParameter(System.Int32, System.Reflection.ParameterAttributes, System.String)" attrib="134" returntype="System.Reflection.Emit.ParameterBuilder">
                <parameters>
                  <parameter name="iSequence" position="0" attrib="0" type="System.Int32" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Reflection.ParameterAttributes" />
                  <parameter name="strParamName" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Boolean)" attrib="198" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="inherit" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Type, System.Boolean)" attrib="198" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetILGenerator(System.Int32)" attrib="134" returntype="System.Reflection.Emit.ILGenerator">
                <parameters>
                  <parameter name="streamSize" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetILGenerator()" attrib="134" returntype="System.Reflection.Emit.ILGenerator">
                <parameters />
              </method>
              <method name="GetMethodImplementationFlags()" attrib="198" virtual="true" returntype="System.Reflection.MethodImplAttributes">
                <parameters />
              </method>
              <method name="GetModule()" attrib="134" returntype="System.Reflection.Module">
                <parameters />
              </method>
              <method name="GetParameters()" attrib="198" virtual="true" returntype="System.Reflection.ParameterInfo[]">
                <parameters />
              </method>
              <method name="GetToken()" attrib="134" returntype="System.Reflection.Emit.MethodToken">
                <parameters />
              </method>
              <method name="Invoke(System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)" attrib="198" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="invokeAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="1" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="parameters" position="2" attrib="0" type="System.Object[]" />
                  <parameter name="culture" position="3" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
              <method name="Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)" attrib="198" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                  <parameter name="invokeAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="parameters" position="3" attrib="0" type="System.Object[]" />
                  <parameter name="culture" position="4" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
              <method name="IsDefined(System.Type, System.Boolean)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="customBuilder" position="0" attrib="0" type="System.Reflection.Emit.CustomAttributeBuilder" />
                </parameters>
              </method>
              <method name="SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="con" position="0" attrib="0" type="System.Reflection.ConstructorInfo" />
                  <parameter name="binaryAttribute" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="SetImplementationFlags(System.Reflection.MethodImplAttributes)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="attributes" position="0" attrib="0" type="System.Reflection.MethodImplAttributes" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="CustomAttributeBuilder" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
            </attributes>
            <interfaces />
            <constructors>
              <constructor name=".ctor(System.Reflection.ConstructorInfo, System.Object[], System.Reflection.FieldInfo[], System.Object[])" attrib="6278">
                <parameters>
                  <parameter name="con" position="0" attrib="0" type="System.Reflection.ConstructorInfo" />
                  <parameter name="constructorArgs" position="1" attrib="0" type="System.Object[]" />
                  <parameter name="namedFields" position="2" attrib="0" type="System.Reflection.FieldInfo[]" />
                  <parameter name="fieldValues" position="3" attrib="0" type="System.Object[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Reflection.ConstructorInfo, System.Object[], System.Reflection.PropertyInfo[], System.Object[], System.Reflection.FieldInfo[], System.Object[])" attrib="6278">
                <parameters>
                  <parameter name="con" position="0" attrib="0" type="System.Reflection.ConstructorInfo" />
                  <parameter name="constructorArgs" position="1" attrib="0" type="System.Object[]" />
                  <parameter name="namedProperties" position="2" attrib="0" type="System.Reflection.PropertyInfo[]" />
                  <parameter name="propertyValues" position="3" attrib="0" type="System.Object[]" />
                  <parameter name="namedFields" position="4" attrib="0" type="System.Reflection.FieldInfo[]" />
                  <parameter name="fieldValues" position="5" attrib="0" type="System.Object[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Reflection.ConstructorInfo, System.Object[])" attrib="6278">
                <parameters>
                  <parameter name="con" position="0" attrib="0" type="System.Reflection.ConstructorInfo" />
                  <parameter name="constructorArgs" position="1" attrib="0" type="System.Object[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Reflection.ConstructorInfo, System.Object[], System.Reflection.PropertyInfo[], System.Object[])" attrib="6278">
                <parameters>
                  <parameter name="con" position="0" attrib="0" type="System.Reflection.ConstructorInfo" />
                  <parameter name="constructorArgs" position="1" attrib="0" type="System.Object[]" />
                  <parameter name="namedProperties" position="2" attrib="0" type="System.Reflection.PropertyInfo[]" />
                  <parameter name="propertyValues" position="3" attrib="0" type="System.Object[]" />
                </parameters>
              </constructor>
            </constructors>
          </class>
          <class name="DynamicMethod" type="class" base="System.Reflection.MethodInfo" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Type, System.Type[], System.Type)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="returnType" position="1" attrib="0" type="System.Type" />
                  <parameter name="parameterTypes" position="2" attrib="0" type="System.Type[]" />
                  <parameter name="owner" position="3" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Type, System.Type[], System.Type, System.Boolean)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="returnType" position="1" attrib="0" type="System.Type" />
                  <parameter name="parameterTypes" position="2" attrib="0" type="System.Type[]" />
                  <parameter name="owner" position="3" attrib="0" type="System.Type" />
                  <parameter name="skipVisibility" position="4" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Type, System.Boolean)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Reflection.MethodAttributes" />
                  <parameter name="callingConvention" position="2" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="returnType" position="3" attrib="0" type="System.Type" />
                  <parameter name="parameterTypes" position="4" attrib="0" type="System.Type[]" />
                  <parameter name="owner" position="5" attrib="0" type="System.Type" />
                  <parameter name="skipVisibility" position="6" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Reflection.Module, System.Boolean)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Reflection.MethodAttributes" />
                  <parameter name="callingConvention" position="2" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="returnType" position="3" attrib="0" type="System.Type" />
                  <parameter name="parameterTypes" position="4" attrib="0" type="System.Type[]" />
                  <parameter name="m" position="5" attrib="0" type="System.Reflection.Module" />
                  <parameter name="skipVisibility" position="6" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Type, System.Type[])" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="returnType" position="1" attrib="0" type="System.Type" />
                  <parameter name="parameterTypes" position="2" attrib="0" type="System.Type[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Type, System.Type[], System.Reflection.Module)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="returnType" position="1" attrib="0" type="System.Type" />
                  <parameter name="parameterTypes" position="2" attrib="0" type="System.Type[]" />
                  <parameter name="m" position="3" attrib="0" type="System.Reflection.Module" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Type, System.Type[], System.Reflection.Module, System.Boolean)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="returnType" position="1" attrib="0" type="System.Type" />
                  <parameter name="parameterTypes" position="2" attrib="0" type="System.Type[]" />
                  <parameter name="m" position="3" attrib="0" type="System.Reflection.Module" />
                  <parameter name="skipVisibility" position="4" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Attributes" attrib="0" ptype="System.Reflection.MethodAttributes" params="">
                <methods>
                  <method name="get_Attributes()" attrib="2246" virtual="true" returntype="System.Reflection.MethodAttributes">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CallingConvention" attrib="0" ptype="System.Reflection.CallingConventions" params="">
                <methods>
                  <method name="get_CallingConvention()" attrib="2246" virtual="true" returntype="System.Reflection.CallingConventions">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DeclaringType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_DeclaringType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="InitLocals" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_InitLocals()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_InitLocals(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="MethodHandle" attrib="0" ptype="System.RuntimeMethodHandle" params="">
                <methods>
                  <method name="get_MethodHandle()" attrib="2246" virtual="true" returntype="System.RuntimeMethodHandle">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Module" attrib="0" ptype="System.Reflection.Module" params="">
                <methods>
                  <method name="get_Module()" attrib="2246" virtual="true" returntype="System.Reflection.Module">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReflectedType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_ReflectedType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReturnParameter" attrib="0" ptype="System.Reflection.ParameterInfo" params="">
                <methods>
                  <method name="get_ReturnParameter()" attrib="2246" virtual="true" returntype="System.Reflection.ParameterInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReturnType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_ReturnType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReturnTypeCustomAttributes" attrib="0" ptype="System.Reflection.ICustomAttributeProvider" params="">
                <methods>
                  <method name="get_ReturnTypeCustomAttributes()" attrib="2246" virtual="true" returntype="System.Reflection.ICustomAttributeProvider">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateDelegate(System.Type, System.Object)" attrib="134" returntype="System.Delegate">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="delegateType" position="0" attrib="0" type="System.Type" />
                  <parameter name="target" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="CreateDelegate(System.Type)" attrib="134" returntype="System.Delegate">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="delegateType" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="DefineParameter(System.Int32, System.Reflection.ParameterAttributes, System.String)" attrib="134" returntype="System.Reflection.Emit.ParameterBuilder">
                <parameters>
                  <parameter name="position" position="0" attrib="0" type="System.Int32" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Reflection.ParameterAttributes" />
                  <parameter name="parameterName" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetBaseDefinition()" attrib="198" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters />
              </method>
              <method name="GetCustomAttributes(System.Type, System.Boolean)" attrib="198" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Boolean)" attrib="198" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="inherit" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetILGenerator(System.Int32)" attrib="134" returntype="System.Reflection.Emit.ILGenerator">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="streamSize" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetILGenerator()" attrib="134" returntype="System.Reflection.Emit.ILGenerator">
                <parameters />
              </method>
              <method name="GetMethodImplementationFlags()" attrib="198" virtual="true" returntype="System.Reflection.MethodImplAttributes">
                <parameters />
              </method>
              <method name="GetParameters()" attrib="198" virtual="true" returntype="System.Reflection.ParameterInfo[]">
                <parameters />
              </method>
              <method name="Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)" attrib="198" virtual="true" returntype="System.Object">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                  <parameter name="invokeAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="parameters" position="3" attrib="0" type="System.Object[]" />
                  <parameter name="culture" position="4" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
              <method name="IsDefined(System.Type, System.Boolean)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="EnumBuilder" type="class" base="System.Type" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
            </attributes>
            <interfaces />
            <properties>
              <property name="Assembly" attrib="0" ptype="System.Reflection.Assembly" params="">
                <methods>
                  <method name="get_Assembly()" attrib="2246" virtual="true" returntype="System.Reflection.Assembly">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="AssemblyQualifiedName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_AssemblyQualifiedName()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="BaseType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_BaseType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DeclaringType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_DeclaringType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="FullName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_FullName()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="GUID" attrib="0" ptype="System.Guid" params="">
                <methods>
                  <method name="get_GUID()" attrib="2246" virtual="true" returntype="System.Guid">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Module" attrib="0" ptype="System.Reflection.Module" params="">
                <methods>
                  <method name="get_Module()" attrib="2246" virtual="true" returntype="System.Reflection.Module">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Namespace" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Namespace()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReflectedType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_ReflectedType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TypeHandle" attrib="0" ptype="System.RuntimeTypeHandle" params="">
                <methods>
                  <method name="get_TypeHandle()" attrib="2246" virtual="true" returntype="System.RuntimeTypeHandle">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TypeToken" attrib="0" ptype="System.Reflection.Emit.TypeToken" params="">
                <methods>
                  <method name="get_TypeToken()" attrib="2182" returntype="System.Reflection.Emit.TypeToken">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UnderlyingField" attrib="0" ptype="System.Reflection.Emit.FieldBuilder" params="">
                <methods>
                  <method name="get_UnderlyingField()" attrib="2182" returntype="System.Reflection.Emit.FieldBuilder">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UnderlyingSystemType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_UnderlyingSystemType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateType()" attrib="134" returntype="System.Type">
                <parameters />
              </method>
              <method name="DefineLiteral(System.String, System.Object)" attrib="134" returntype="System.Reflection.Emit.FieldBuilder">
                <parameters>
                  <parameter name="literalName" position="0" attrib="0" type="System.String" />
                  <parameter name="literalValue" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetAttributeFlagsImpl()" attrib="196" virtual="true" returntype="System.Reflection.TypeAttributes">
                <parameters />
              </method>
              <method name="GetConstructorImpl(System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])" attrib="196" virtual="true" returntype="System.Reflection.ConstructorInfo">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="1" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="callConvention" position="2" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="types" position="3" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="4" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="GetConstructors(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.ConstructorInfo[]">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Boolean)" attrib="198" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="inherit" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Type, System.Boolean)" attrib="198" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetElementType()" attrib="198" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="GetEvent(System.String, System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.EventInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetEvents(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.EventInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetEvents()" attrib="198" virtual="true" returntype="System.Reflection.EventInfo[]">
                <parameters />
              </method>
              <method name="GetField(System.String, System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.FieldInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetFields(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.FieldInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetInterface(System.String, System.Boolean)" attrib="198" virtual="true" returntype="System.Type">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ignoreCase" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetInterfaceMap(System.Type)" attrib="198" virtual="true" returntype="System.Reflection.InterfaceMapping">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="interfaceType" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetInterfaces()" attrib="198" virtual="true" returntype="System.Type[]">
                <parameters />
              </method>
              <method name="GetMember(System.String, System.Reflection.MemberTypes, System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.MemberInfo[]">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="type" position="1" attrib="0" type="System.Reflection.MemberTypes" />
                  <parameter name="bindingAttr" position="2" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetMembers(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.MemberInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetMethodImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])" attrib="196" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="callConvention" position="3" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="types" position="4" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="5" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="GetMethods(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.MethodInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetNestedType(System.String, System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Type">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetNestedTypes(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Type[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetProperties(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.PropertyInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetPropertyImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])" attrib="196" virtual="true" returntype="System.Reflection.PropertyInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="returnType" position="3" attrib="0" type="System.Type" />
                  <parameter name="types" position="4" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="5" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="HasElementTypeImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[], System.Reflection.ParameterModifier[], System.Globalization.CultureInfo, System.String[])" attrib="198" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="invokeAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="target" position="3" attrib="0" type="System.Object" />
                  <parameter name="args" position="4" attrib="0" type="System.Object[]" />
                  <parameter name="modifiers" position="5" attrib="0" type="System.Reflection.ParameterModifier[]" />
                  <parameter name="culture" position="6" attrib="0" type="System.Globalization.CultureInfo" />
                  <parameter name="namedParameters" position="7" attrib="0" type="System.String[]" />
                </parameters>
              </method>
              <method name="IsArrayImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsByRefImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsCOMObjectImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsDefined(System.Type, System.Boolean)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="IsPointerImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsPrimitiveImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsValueTypeImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="MakeArrayType()" attrib="198" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="MakeArrayType(System.Int32)" attrib="198" virtual="true" returntype="System.Type">
                <parameters>
                  <parameter name="rank" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="MakeByRefType()" attrib="198" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="MakePointerType()" attrib="198" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="con" position="0" attrib="0" type="System.Reflection.ConstructorInfo" />
                  <parameter name="binaryAttribute" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="customBuilder" position="0" attrib="0" type="System.Reflection.Emit.CustomAttributeBuilder" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="EventBuilder" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
            </attributes>
            <interfaces />
            <methods>
              <method name="AddOtherMethod(System.Reflection.Emit.MethodBuilder)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="mdBuilder" position="0" attrib="0" type="System.Reflection.Emit.MethodBuilder" />
                </parameters>
              </method>
              <method name="GetEventToken()" attrib="134" returntype="System.Reflection.Emit.EventToken">
                <parameters />
              </method>
              <method name="SetAddOnMethod(System.Reflection.Emit.MethodBuilder)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="mdBuilder" position="0" attrib="0" type="System.Reflection.Emit.MethodBuilder" />
                </parameters>
              </method>
              <method name="SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="con" position="0" attrib="0" type="System.Reflection.ConstructorInfo" />
                  <parameter name="binaryAttribute" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="customBuilder" position="0" attrib="0" type="System.Reflection.Emit.CustomAttributeBuilder" />
                </parameters>
              </method>
              <method name="SetRaiseMethod(System.Reflection.Emit.MethodBuilder)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="mdBuilder" position="0" attrib="0" type="System.Reflection.Emit.MethodBuilder" />
                </parameters>
              </method>
              <method name="SetRemoveOnMethod(System.Reflection.Emit.MethodBuilder)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="mdBuilder" position="0" attrib="0" type="System.Reflection.Emit.MethodBuilder" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="EventToken" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Empty" attrib="54" fieldtype="System.Reflection.Emit.EventToken" />
            </fields>
            <properties>
              <property name="Token" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Token()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Reflection.Emit.EventToken)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Reflection.Emit.EventToken" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(System.Reflection.Emit.EventToken, System.Reflection.Emit.EventToken)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Reflection.Emit.EventToken" />
                  <parameter name="b" position="1" attrib="0" type="System.Reflection.Emit.EventToken" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Reflection.Emit.EventToken, System.Reflection.Emit.EventToken)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Reflection.Emit.EventToken" />
                  <parameter name="b" position="1" attrib="0" type="System.Reflection.Emit.EventToken" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="FieldBuilder" type="class" base="System.Reflection.FieldInfo" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
            </attributes>
            <interfaces />
            <properties>
              <property name="Attributes" attrib="0" ptype="System.Reflection.FieldAttributes" params="">
                <methods>
                  <method name="get_Attributes()" attrib="2246" virtual="true" returntype="System.Reflection.FieldAttributes">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DeclaringType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_DeclaringType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="FieldHandle" attrib="0" ptype="System.RuntimeFieldHandle" params="">
                <methods>
                  <method name="get_FieldHandle()" attrib="2246" virtual="true" returntype="System.RuntimeFieldHandle">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="FieldType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_FieldType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Module" attrib="0" ptype="System.Reflection.Module" params="">
                <methods>
                  <method name="get_Module()" attrib="2246" virtual="true" returntype="System.Reflection.Module">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReflectedType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_ReflectedType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetCustomAttributes(System.Boolean)" attrib="198" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="inherit" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Type, System.Boolean)" attrib="198" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetToken()" attrib="134" returntype="System.Reflection.Emit.FieldToken">
                <parameters />
              </method>
              <method name="GetValue(System.Object)" attrib="198" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="IsDefined(System.Type, System.Boolean)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="SetConstant(System.Object)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="defaultValue" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="con" position="0" attrib="0" type="System.Reflection.ConstructorInfo" />
                  <parameter name="binaryAttribute" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="customBuilder" position="0" attrib="0" type="System.Reflection.Emit.CustomAttributeBuilder" />
                </parameters>
              </method>
              <method name="SetOffset(System.Int32)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="iOffset" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="SetValue(System.Object, System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Globalization.CultureInfo)" attrib="198" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                  <parameter name="val" position="1" attrib="0" type="System.Object" />
                  <parameter name="invokeAttr" position="2" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="3" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="culture" position="4" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="FieldToken" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Empty" attrib="54" fieldtype="System.Reflection.Emit.FieldToken" />
            </fields>
            <properties>
              <property name="Token" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Token()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Reflection.Emit.FieldToken)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Reflection.Emit.FieldToken" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(System.Reflection.Emit.FieldToken, System.Reflection.Emit.FieldToken)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Reflection.Emit.FieldToken" />
                  <parameter name="b" position="1" attrib="0" type="System.Reflection.Emit.FieldToken" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Reflection.Emit.FieldToken, System.Reflection.Emit.FieldToken)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Reflection.Emit.FieldToken" />
                  <parameter name="b" position="1" attrib="0" type="System.Reflection.Emit.FieldToken" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="FlowControl" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Branch" attrib="32854" fieldtype="System.Reflection.Emit.FlowControl" value="0" />
              <field name="Break" attrib="32854" fieldtype="System.Reflection.Emit.FlowControl" value="1" />
              <field name="Call" attrib="32854" fieldtype="System.Reflection.Emit.FlowControl" value="2" />
              <field name="Cond_Branch" attrib="32854" fieldtype="System.Reflection.Emit.FlowControl" value="3" />
              <field name="Meta" attrib="32854" fieldtype="System.Reflection.Emit.FlowControl" value="4" />
              <field name="Next" attrib="32854" fieldtype="System.Reflection.Emit.FlowControl" value="5" />
              <field name="Return" attrib="32854" fieldtype="System.Reflection.Emit.FlowControl" value="7" />
              <field name="Throw" attrib="32854" fieldtype="System.Reflection.Emit.FlowControl" value="8" />
            </fields>
          </class>
          <class name="GenericTypeParameterBuilder" type="class" base="System.Type" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <properties>
              <property name="Assembly" attrib="0" ptype="System.Reflection.Assembly" params="">
                <methods>
                  <method name="get_Assembly()" attrib="2246" virtual="true" returntype="System.Reflection.Assembly">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="AssemblyQualifiedName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_AssemblyQualifiedName()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="BaseType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_BaseType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ContainsGenericParameters" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_ContainsGenericParameters()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DeclaringMethod" attrib="0" ptype="System.Reflection.MethodBase" params="">
                <methods>
                  <method name="get_DeclaringMethod()" attrib="2246" virtual="true" returntype="System.Reflection.MethodBase">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DeclaringType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_DeclaringType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="FullName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_FullName()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="GenericParameterPosition" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_GenericParameterPosition()" attrib="2246" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="GUID" attrib="0" ptype="System.Guid" params="">
                <methods>
                  <method name="get_GUID()" attrib="2246" virtual="true" returntype="System.Guid">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsGenericParameter" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsGenericParameter()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsGenericType" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsGenericType()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsGenericTypeDefinition" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsGenericTypeDefinition()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Module" attrib="0" ptype="System.Reflection.Module" params="">
                <methods>
                  <method name="get_Module()" attrib="2246" virtual="true" returntype="System.Reflection.Module">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Namespace" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Namespace()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReflectedType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_ReflectedType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TypeHandle" attrib="0" ptype="System.RuntimeTypeHandle" params="">
                <methods>
                  <method name="get_TypeHandle()" attrib="2246" virtual="true" returntype="System.RuntimeTypeHandle">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UnderlyingSystemType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_UnderlyingSystemType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetAttributeFlagsImpl()" attrib="196" virtual="true" returntype="System.Reflection.TypeAttributes">
                <parameters />
              </method>
              <method name="GetConstructorImpl(System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])" attrib="196" virtual="true" returntype="System.Reflection.ConstructorInfo">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="1" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="callConvention" position="2" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="types" position="3" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="4" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="GetConstructors(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.ConstructorInfo[]">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Type, System.Boolean)" attrib="198" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Boolean)" attrib="198" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="inherit" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetElementType()" attrib="198" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="GetEvent(System.String, System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.EventInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetEvents()" attrib="198" virtual="true" returntype="System.Reflection.EventInfo[]">
                <parameters />
              </method>
              <method name="GetEvents(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.EventInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetField(System.String, System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.FieldInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetFields(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.FieldInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetGenericArguments()" attrib="198" virtual="true" returntype="System.Type[]">
                <parameters />
              </method>
              <method name="GetGenericTypeDefinition()" attrib="198" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetInterface(System.String, System.Boolean)" attrib="198" virtual="true" returntype="System.Type">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ignoreCase" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetInterfaceMap(System.Type)" attrib="198" virtual="true" returntype="System.Reflection.InterfaceMapping">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="interfaceType" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetInterfaces()" attrib="198" virtual="true" returntype="System.Type[]">
                <parameters />
              </method>
              <method name="GetMember(System.String, System.Reflection.MemberTypes, System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.MemberInfo[]">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="type" position="1" attrib="0" type="System.Reflection.MemberTypes" />
                  <parameter name="bindingAttr" position="2" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetMembers(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.MemberInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetMethodImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])" attrib="196" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="callConvention" position="3" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="types" position="4" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="5" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="GetMethods(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.MethodInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetNestedType(System.String, System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Type">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetNestedTypes(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Type[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetProperties(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.PropertyInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetPropertyImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])" attrib="196" virtual="true" returntype="System.Reflection.PropertyInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="returnType" position="3" attrib="0" type="System.Type" />
                  <parameter name="types" position="4" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="5" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="HasElementTypeImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[], System.Reflection.ParameterModifier[], System.Globalization.CultureInfo, System.String[])" attrib="198" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="invokeAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="target" position="3" attrib="0" type="System.Object" />
                  <parameter name="args" position="4" attrib="0" type="System.Object[]" />
                  <parameter name="modifiers" position="5" attrib="0" type="System.Reflection.ParameterModifier[]" />
                  <parameter name="culture" position="6" attrib="0" type="System.Globalization.CultureInfo" />
                  <parameter name="namedParameters" position="7" attrib="0" type="System.String[]" />
                </parameters>
              </method>
              <method name="IsArrayImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsAssignableFrom(System.Type)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="IsByRefImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsCOMObjectImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsDefined(System.Type, System.Boolean)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="IsPointerImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsPrimitiveImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsSubclassOf(System.Type)" attrib="198" virtual="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="IsValueTypeImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="MakeArrayType()" attrib="198" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="MakeArrayType(System.Int32)" attrib="198" virtual="true" returntype="System.Type">
                <parameters>
                  <parameter name="rank" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="MakeByRefType()" attrib="198" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="MakeGenericType(System.Type[])" attrib="198" virtual="true" returntype="System.Type">
                <parameters>
                  <parameter name="typeArguments" position="0" attrib="0" type="System.Type[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="MakePointerType()" attrib="198" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="SetBaseTypeConstraint(System.Type)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="baseTypeConstraint" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="customBuilder" position="0" attrib="0" type="System.Reflection.Emit.CustomAttributeBuilder" />
                </parameters>
              </method>
              <method name="SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="con" position="0" attrib="0" type="System.Reflection.ConstructorInfo" />
                  <parameter name="binaryAttribute" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="SetGenericParameterAttributes(System.Reflection.GenericParameterAttributes)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="genericParameterAttributes" position="0" attrib="0" type="System.Reflection.GenericParameterAttributes" />
                </parameters>
              </method>
              <method name="SetInterfaceConstraints(System.Type[])" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="interfaceConstraints" position="0" attrib="0" type="System.Type[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="ILGenerator" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces />
            <methods>
              <method name="BeginCatchBlock(System.Type)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="exceptionType" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="BeginExceptFilterBlock()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="BeginExceptionBlock()" attrib="454" virtual="true" returntype="System.Reflection.Emit.Label">
                <parameters />
              </method>
              <method name="BeginFaultBlock()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="BeginFinallyBlock()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="BeginScope()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="DeclareLocal(System.Type)" attrib="454" virtual="true" returntype="System.Reflection.Emit.LocalBuilder">
                <parameters>
                  <parameter name="localType" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="DeclareLocal(System.Type, System.Boolean)" attrib="454" virtual="true" returntype="System.Reflection.Emit.LocalBuilder">
                <parameters>
                  <parameter name="localType" position="0" attrib="0" type="System.Type" />
                  <parameter name="pinned" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="DefineLabel()" attrib="454" virtual="true" returntype="System.Reflection.Emit.Label">
                <parameters />
              </method>
              <method name="Emit(System.Reflection.Emit.OpCode, System.Reflection.Emit.LocalBuilder)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="opcode" position="0" attrib="0" type="System.Reflection.Emit.OpCode" />
                  <parameter name="local" position="1" attrib="0" type="System.Reflection.Emit.LocalBuilder" />
                </parameters>
              </method>
              <method name="Emit(System.Reflection.Emit.OpCode, System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="opcode" position="0" attrib="0" type="System.Reflection.Emit.OpCode" />
                  <parameter name="str" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Emit(System.Reflection.Emit.OpCode, System.SByte)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="opcode" position="0" attrib="0" type="System.Reflection.Emit.OpCode" />
                  <parameter name="arg" position="1" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="Emit(System.Reflection.Emit.OpCode)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="opcode" position="0" attrib="0" type="System.Reflection.Emit.OpCode" />
                </parameters>
              </method>
              <method name="Emit(System.Reflection.Emit.OpCode, System.Byte)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="opcode" position="0" attrib="0" type="System.Reflection.Emit.OpCode" />
                  <parameter name="arg" position="1" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="Emit(System.Reflection.Emit.OpCode, System.Reflection.FieldInfo)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="opcode" position="0" attrib="0" type="System.Reflection.Emit.OpCode" />
                  <parameter name="field" position="1" attrib="0" type="System.Reflection.FieldInfo" />
                </parameters>
              </method>
              <method name="Emit(System.Reflection.Emit.OpCode, System.Reflection.ConstructorInfo)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="opcode" position="0" attrib="0" type="System.Reflection.Emit.OpCode" />
                  <parameter name="con" position="1" attrib="0" type="System.Reflection.ConstructorInfo" />
                </parameters>
              </method>
              <method name="Emit(System.Reflection.Emit.OpCode, System.Type)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="opcode" position="0" attrib="0" type="System.Reflection.Emit.OpCode" />
                  <parameter name="cls" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="Emit(System.Reflection.Emit.OpCode, System.Reflection.MethodInfo)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="opcode" position="0" attrib="0" type="System.Reflection.Emit.OpCode" />
                  <parameter name="meth" position="1" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="Emit(System.Reflection.Emit.OpCode, System.Int16)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="opcode" position="0" attrib="0" type="System.Reflection.Emit.OpCode" />
                  <parameter name="arg" position="1" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="Emit(System.Reflection.Emit.OpCode, System.Int32)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="opcode" position="0" attrib="0" type="System.Reflection.Emit.OpCode" />
                  <parameter name="arg" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Emit(System.Reflection.Emit.OpCode, System.Double)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="opcode" position="0" attrib="0" type="System.Reflection.Emit.OpCode" />
                  <parameter name="arg" position="1" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Emit(System.Reflection.Emit.OpCode, System.Reflection.Emit.Label)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="opcode" position="0" attrib="0" type="System.Reflection.Emit.OpCode" />
                  <parameter name="label" position="1" attrib="0" type="System.Reflection.Emit.Label" />
                </parameters>
              </method>
              <method name="Emit(System.Reflection.Emit.OpCode, System.Reflection.Emit.Label[])" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="opcode" position="0" attrib="0" type="System.Reflection.Emit.OpCode" />
                  <parameter name="labels" position="1" attrib="0" type="System.Reflection.Emit.Label[]" />
                </parameters>
              </method>
              <method name="Emit(System.Reflection.Emit.OpCode, System.Int64)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="opcode" position="0" attrib="0" type="System.Reflection.Emit.OpCode" />
                  <parameter name="arg" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="Emit(System.Reflection.Emit.OpCode, System.Single)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="opcode" position="0" attrib="0" type="System.Reflection.Emit.OpCode" />
                  <parameter name="arg" position="1" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="EmitCall(System.Reflection.Emit.OpCode, System.Reflection.MethodInfo, System.Type[])" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="opcode" position="0" attrib="0" type="System.Reflection.Emit.OpCode" />
                  <parameter name="methodInfo" position="1" attrib="0" type="System.Reflection.MethodInfo" />
                  <parameter name="optionalParameterTypes" position="2" attrib="0" type="System.Type[]" />
                </parameters>
              </method>
              <method name="EmitWriteLine(System.Reflection.FieldInfo)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="fld" position="0" attrib="0" type="System.Reflection.FieldInfo" />
                </parameters>
              </method>
              <method name="EmitWriteLine(System.Reflection.Emit.LocalBuilder)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="localBuilder" position="0" attrib="0" type="System.Reflection.Emit.LocalBuilder" />
                </parameters>
              </method>
              <method name="EmitWriteLine(System.String)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="EndExceptionBlock()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="EndScope()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="MarkLabel(System.Reflection.Emit.Label)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="loc" position="0" attrib="0" type="System.Reflection.Emit.Label" />
                </parameters>
              </method>
              <method name="MarkSequencePoint(System.Diagnostics.SymbolStore.ISymbolDocumentWriter, System.Int32, System.Int32, System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="document" position="0" attrib="0" type="System.Diagnostics.SymbolStore.ISymbolDocumentWriter" />
                  <parameter name="startLine" position="1" attrib="0" type="System.Int32" />
                  <parameter name="startColumn" position="2" attrib="0" type="System.Int32" />
                  <parameter name="endLine" position="3" attrib="0" type="System.Int32" />
                  <parameter name="endColumn" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ThrowException(System.Type)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="excType" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="UsingNamespace(System.String)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="usingNamespace" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Label" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <methods>
              <method name="Equals(System.Reflection.Emit.Label)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Reflection.Emit.Label" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(System.Reflection.Emit.Label, System.Reflection.Emit.Label)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Reflection.Emit.Label" />
                  <parameter name="b" position="1" attrib="0" type="System.Reflection.Emit.Label" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Reflection.Emit.Label, System.Reflection.Emit.Label)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Reflection.Emit.Label" />
                  <parameter name="b" position="1" attrib="0" type="System.Reflection.Emit.Label" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="LocalBuilder" type="class" base="System.Reflection.LocalVariableInfo" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
            </attributes>
            <interfaces />
            <properties>
              <property name="IsPinned" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsPinned()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LocalIndex" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_LocalIndex()" attrib="2246" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LocalType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_LocalType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="SetLocalSymInfo(System.String, System.Int32, System.Int32)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="startOffset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="endOffset" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="SetLocalSymInfo(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="MethodBuilder" type="class" base="System.Reflection.MethodInfo" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
            </attributes>
            <interfaces />
            <properties>
              <property name="Attributes" attrib="0" ptype="System.Reflection.MethodAttributes" params="">
                <methods>
                  <method name="get_Attributes()" attrib="2246" virtual="true" returntype="System.Reflection.MethodAttributes">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CallingConvention" attrib="0" ptype="System.Reflection.CallingConventions" params="">
                <methods>
                  <method name="get_CallingConvention()" attrib="2246" virtual="true" returntype="System.Reflection.CallingConventions">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ContainsGenericParameters" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_ContainsGenericParameters()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DeclaringType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_DeclaringType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="InitLocals" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_InitLocals()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_InitLocals(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IsGenericMethod" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsGenericMethod()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsGenericMethodDefinition" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsGenericMethodDefinition()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MethodHandle" attrib="0" ptype="System.RuntimeMethodHandle" params="">
                <methods>
                  <method name="get_MethodHandle()" attrib="2246" virtual="true" returntype="System.RuntimeMethodHandle">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Module" attrib="0" ptype="System.Reflection.Module" params="">
                <methods>
                  <method name="get_Module()" attrib="2246" virtual="true" returntype="System.Reflection.Module">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReflectedType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_ReflectedType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReturnParameter" attrib="0" ptype="System.Reflection.ParameterInfo" params="">
                <methods>
                  <method name="get_ReturnParameter()" attrib="2246" virtual="true" returntype="System.Reflection.ParameterInfo">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReturnType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_ReturnType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReturnTypeCustomAttributes" attrib="0" ptype="System.Reflection.ICustomAttributeProvider" params="">
                <methods>
                  <method name="get_ReturnTypeCustomAttributes()" attrib="2246" virtual="true" returntype="System.Reflection.ICustomAttributeProvider">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Signature" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Signature()" attrib="2182" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateMethodBody(System.Byte[], System.Int32)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="il" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="count" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="DefineGenericParameters(System.String[])" attrib="134" returntype="System.Reflection.Emit.GenericTypeParameterBuilder[]">
                <parameters>
                  <parameter name="names" position="0" attrib="0" type="System.String[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="DefineParameter(System.Int32, System.Reflection.ParameterAttributes, System.String)" attrib="134" returntype="System.Reflection.Emit.ParameterBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="position" position="0" attrib="0" type="System.Int32" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Reflection.ParameterAttributes" />
                  <parameter name="strParamName" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetBaseDefinition()" attrib="198" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters />
              </method>
              <method name="GetCustomAttributes(System.Boolean)" attrib="198" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="inherit" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Type, System.Boolean)" attrib="198" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetGenericArguments()" attrib="198" virtual="true" returntype="System.Type[]">
                <parameters />
              </method>
              <method name="GetGenericMethodDefinition()" attrib="198" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters />
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetILGenerator()" attrib="134" returntype="System.Reflection.Emit.ILGenerator">
                <parameters />
              </method>
              <method name="GetILGenerator(System.Int32)" attrib="134" returntype="System.Reflection.Emit.ILGenerator">
                <parameters>
                  <parameter name="size" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetMethodImplementationFlags()" attrib="198" virtual="true" returntype="System.Reflection.MethodImplAttributes">
                <parameters />
              </method>
              <method name="GetModule()" attrib="134" returntype="System.Reflection.Module">
                <parameters />
              </method>
              <method name="GetParameters()" attrib="198" virtual="true" returntype="System.Reflection.ParameterInfo[]">
                <parameters />
              </method>
              <method name="GetToken()" attrib="134" returntype="System.Reflection.Emit.MethodToken">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)" attrib="198" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                  <parameter name="invokeAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="parameters" position="3" attrib="0" type="System.Object[]" />
                  <parameter name="culture" position="4" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
              <method name="IsDefined(System.Type, System.Boolean)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="MakeGenericMethod(System.Type[])" attrib="198" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="typeArguments" position="0" attrib="0" type="System.Type[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="con" position="0" attrib="0" type="System.Reflection.ConstructorInfo" />
                  <parameter name="binaryAttribute" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="customBuilder" position="0" attrib="0" type="System.Reflection.Emit.CustomAttributeBuilder" />
                </parameters>
              </method>
              <method name="SetImplementationFlags(System.Reflection.MethodImplAttributes)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="attributes" position="0" attrib="0" type="System.Reflection.MethodImplAttributes" />
                </parameters>
              </method>
              <method name="SetParameters(System.Type[])" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="parameterTypes" position="0" attrib="0" type="System.Type[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="SetReturnType(System.Type)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="returnType" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="SetSignature(System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="returnType" position="0" attrib="0" type="System.Type" />
                  <parameter name="returnTypeRequiredCustomModifiers" position="1" attrib="0" type="System.Type[]" />
                  <parameter name="returnTypeOptionalCustomModifiers" position="2" attrib="0" type="System.Type[]" />
                  <parameter name="parameterTypes" position="3" attrib="0" type="System.Type[]" />
                  <parameter name="parameterTypeRequiredCustomModifiers" position="4" attrib="0" type="System.Type[][]" />
                  <parameter name="parameterTypeOptionalCustomModifiers" position="5" attrib="0" type="System.Type[][]" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
            </methods>
          </class>
          <class name="MethodToken" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Empty" attrib="54" fieldtype="System.Reflection.Emit.MethodToken" />
            </fields>
            <properties>
              <property name="Token" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Token()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Reflection.Emit.MethodToken)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Reflection.Emit.MethodToken" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(System.Reflection.Emit.MethodToken, System.Reflection.Emit.MethodToken)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Reflection.Emit.MethodToken" />
                  <parameter name="b" position="1" attrib="0" type="System.Reflection.Emit.MethodToken" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Reflection.Emit.MethodToken, System.Reflection.Emit.MethodToken)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Reflection.Emit.MethodToken" />
                  <parameter name="b" position="1" attrib="0" type="System.Reflection.Emit.MethodToken" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="ModuleBuilder" type="class" base="System.Reflection.Module" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
            </attributes>
            <interfaces />
            <properties>
              <property name="FullyQualifiedName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_FullyQualifiedName()" attrib="2246" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateGlobalFunctions()" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="DefineDocument(System.String, System.Guid, System.Guid, System.Guid)" attrib="134" returntype="System.Diagnostics.SymbolStore.ISymbolDocumentWriter">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="url" position="0" attrib="0" type="System.String" />
                  <parameter name="language" position="1" attrib="0" type="System.Guid" />
                  <parameter name="languageVendor" position="2" attrib="0" type="System.Guid" />
                  <parameter name="documentType" position="3" attrib="0" type="System.Guid" />
                </parameters>
              </method>
              <method name="DefineEnum(System.String, System.Reflection.TypeAttributes, System.Type)" attrib="134" returntype="System.Reflection.Emit.EnumBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="visibility" position="1" attrib="0" type="System.Reflection.TypeAttributes" />
                  <parameter name="underlyingType" position="2" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="DefineGlobalMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[])" attrib="134" returntype="System.Reflection.Emit.MethodBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Reflection.MethodAttributes" />
                  <parameter name="callingConvention" position="2" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="returnType" position="3" attrib="0" type="System.Type" />
                  <parameter name="parameterTypes" position="4" attrib="0" type="System.Type[]" />
                </parameters>
              </method>
              <method name="DefineGlobalMethod(System.String, System.Reflection.MethodAttributes, System.Type, System.Type[])" attrib="134" returntype="System.Reflection.Emit.MethodBuilder">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Reflection.MethodAttributes" />
                  <parameter name="returnType" position="2" attrib="0" type="System.Type" />
                  <parameter name="parameterTypes" position="3" attrib="0" type="System.Type[]" />
                </parameters>
              </method>
              <method name="DefineGlobalMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])" attrib="134" returntype="System.Reflection.Emit.MethodBuilder">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Reflection.MethodAttributes" />
                  <parameter name="callingConvention" position="2" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="returnType" position="3" attrib="0" type="System.Type" />
                  <parameter name="requiredReturnTypeCustomModifiers" position="4" attrib="0" type="System.Type[]" />
                  <parameter name="optionalReturnTypeCustomModifiers" position="5" attrib="0" type="System.Type[]" />
                  <parameter name="parameterTypes" position="6" attrib="0" type="System.Type[]" />
                  <parameter name="requiredParameterTypeCustomModifiers" position="7" attrib="0" type="System.Type[][]" />
                  <parameter name="optionalParameterTypeCustomModifiers" position="8" attrib="0" type="System.Type[][]" />
                </parameters>
              </method>
              <method name="DefineInitializedData(System.String, System.Byte[], System.Reflection.FieldAttributes)" attrib="134" returntype="System.Reflection.Emit.FieldBuilder">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="data" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="attributes" position="2" attrib="0" type="System.Reflection.FieldAttributes" />
                </parameters>
              </method>
              <method name="DefineManifestResource(System.String, System.IO.Stream, System.Reflection.ResourceAttributes)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="stream" position="1" attrib="0" type="System.IO.Stream" />
                  <parameter name="attribute" position="2" attrib="0" type="System.Reflection.ResourceAttributes" />
                </parameters>
              </method>
              <method name="DefinePInvokeMethod(System.String, System.String, System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Runtime.InteropServices.CallingConvention, System.Runtime.InteropServices.CharSet)" attrib="134" returntype="System.Reflection.Emit.MethodBuilder">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="dllName" position="1" attrib="0" type="System.String" />
                  <parameter name="entryName" position="2" attrib="0" type="System.String" />
                  <parameter name="attributes" position="3" attrib="0" type="System.Reflection.MethodAttributes" />
                  <parameter name="callingConvention" position="4" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="returnType" position="5" attrib="0" type="System.Type" />
                  <parameter name="parameterTypes" position="6" attrib="0" type="System.Type[]" />
                  <parameter name="nativeCallConv" position="7" attrib="0" type="System.Runtime.InteropServices.CallingConvention" />
                  <parameter name="nativeCharSet" position="8" attrib="0" type="System.Runtime.InteropServices.CharSet" />
                </parameters>
              </method>
              <method name="DefinePInvokeMethod(System.String, System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Runtime.InteropServices.CallingConvention, System.Runtime.InteropServices.CharSet)" attrib="134" returntype="System.Reflection.Emit.MethodBuilder">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="dllName" position="1" attrib="0" type="System.String" />
                  <parameter name="attributes" position="2" attrib="0" type="System.Reflection.MethodAttributes" />
                  <parameter name="callingConvention" position="3" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="returnType" position="4" attrib="0" type="System.Type" />
                  <parameter name="parameterTypes" position="5" attrib="0" type="System.Type[]" />
                  <parameter name="nativeCallConv" position="6" attrib="0" type="System.Runtime.InteropServices.CallingConvention" />
                  <parameter name="nativeCharSet" position="7" attrib="0" type="System.Runtime.InteropServices.CharSet" />
                </parameters>
              </method>
              <method name="DefineType(System.String, System.Reflection.TypeAttributes, System.Type)" attrib="134" returntype="System.Reflection.Emit.TypeBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attr" position="1" attrib="0" type="System.Reflection.TypeAttributes" />
                  <parameter name="parent" position="2" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="DefineType(System.String, System.Reflection.TypeAttributes, System.Type, System.Int32)" attrib="134" returntype="System.Reflection.Emit.TypeBuilder">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attr" position="1" attrib="0" type="System.Reflection.TypeAttributes" />
                  <parameter name="parent" position="2" attrib="0" type="System.Type" />
                  <parameter name="typesize" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="DefineType(System.String)" attrib="134" returntype="System.Reflection.Emit.TypeBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="DefineType(System.String, System.Reflection.TypeAttributes)" attrib="134" returntype="System.Reflection.Emit.TypeBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attr" position="1" attrib="0" type="System.Reflection.TypeAttributes" />
                </parameters>
              </method>
              <method name="DefineType(System.String, System.Reflection.TypeAttributes, System.Type, System.Type[])" attrib="134" returntype="System.Reflection.Emit.TypeBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attr" position="1" attrib="0" type="System.Reflection.TypeAttributes" />
                  <parameter name="parent" position="2" attrib="0" type="System.Type" />
                  <parameter name="interfaces" position="3" attrib="0" type="System.Type[]" />
                </parameters>
              </method>
              <method name="DefineType(System.String, System.Reflection.TypeAttributes, System.Type, System.Reflection.Emit.PackingSize)" attrib="134" returntype="System.Reflection.Emit.TypeBuilder">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attr" position="1" attrib="0" type="System.Reflection.TypeAttributes" />
                  <parameter name="parent" position="2" attrib="0" type="System.Type" />
                  <parameter name="packsize" position="3" attrib="0" type="System.Reflection.Emit.PackingSize" />
                </parameters>
              </method>
              <method name="DefineType(System.String, System.Reflection.TypeAttributes, System.Type, System.Reflection.Emit.PackingSize, System.Int32)" attrib="134" returntype="System.Reflection.Emit.TypeBuilder">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attr" position="1" attrib="0" type="System.Reflection.TypeAttributes" />
                  <parameter name="parent" position="2" attrib="0" type="System.Type" />
                  <parameter name="packingSize" position="3" attrib="0" type="System.Reflection.Emit.PackingSize" />
                  <parameter name="typesize" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="DefineUninitializedData(System.String, System.Int32, System.Reflection.FieldAttributes)" attrib="134" returntype="System.Reflection.Emit.FieldBuilder">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="size" position="1" attrib="0" type="System.Int32" />
                  <parameter name="attributes" position="2" attrib="0" type="System.Reflection.FieldAttributes" />
                </parameters>
              </method>
              <method name="DefineUnmanagedResource(System.String)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="resourceFileName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="DefineUnmanagedResource(System.Byte[])" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="resource" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="GetArrayMethod(System.Type, System.String, System.Reflection.CallingConventions, System.Type, System.Type[])" attrib="134" returntype="System.Reflection.MethodInfo">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="arrayClass" position="0" attrib="0" type="System.Type" />
                  <parameter name="methodName" position="1" attrib="0" type="System.String" />
                  <parameter name="callingConvention" position="2" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="returnType" position="3" attrib="0" type="System.Type" />
                  <parameter name="parameterTypes" position="4" attrib="0" type="System.Type[]" />
                </parameters>
              </method>
              <method name="GetArrayMethodToken(System.Type, System.String, System.Reflection.CallingConventions, System.Type, System.Type[])" attrib="134" returntype="System.Reflection.Emit.MethodToken">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="arrayClass" position="0" attrib="0" type="System.Type" />
                  <parameter name="methodName" position="1" attrib="0" type="System.String" />
                  <parameter name="callingConvention" position="2" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="returnType" position="3" attrib="0" type="System.Type" />
                  <parameter name="parameterTypes" position="4" attrib="0" type="System.Type[]" />
                </parameters>
              </method>
              <method name="GetConstructorToken(System.Reflection.ConstructorInfo)" attrib="134" returntype="System.Reflection.Emit.MethodToken">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="con" position="0" attrib="0" type="System.Reflection.ConstructorInfo" />
                </parameters>
              </method>
              <method name="GetFieldToken(System.Reflection.FieldInfo)" attrib="134" returntype="System.Reflection.Emit.FieldToken">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="field" position="0" attrib="0" type="System.Reflection.FieldInfo" />
                </parameters>
              </method>
              <method name="GetMethodToken(System.Reflection.MethodInfo)" attrib="134" returntype="System.Reflection.Emit.MethodToken">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="method" position="0" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="GetSignatureToken(System.Reflection.Emit.SignatureHelper)" attrib="134" returntype="System.Reflection.Emit.SignatureToken">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="sigHelper" position="0" attrib="0" type="System.Reflection.Emit.SignatureHelper" />
                </parameters>
              </method>
              <method name="GetSignatureToken(System.Byte[], System.Int32)" attrib="134" returntype="System.Reflection.Emit.SignatureToken">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="sigBytes" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="sigLength" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetStringConstant(System.String)" attrib="134" returntype="System.Reflection.Emit.StringToken">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="str" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetType(System.String, System.Boolean)" attrib="198" virtual="true" returntype="System.Type">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="className" position="0" attrib="0" type="System.String" />
                  <parameter name="ignoreCase" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetType(System.String, System.Boolean, System.Boolean)" attrib="198" virtual="true" returntype="System.Type">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="className" position="0" attrib="0" type="System.String" />
                  <parameter name="throwOnError" position="1" attrib="0" type="System.Boolean" />
                  <parameter name="ignoreCase" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetType(System.String)" attrib="198" virtual="true" returntype="System.Type">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="className" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetTypes()" attrib="198" virtual="true" returntype="System.Type[]">
                <parameters />
              </method>
              <method name="GetTypeToken(System.Type)" attrib="134" returntype="System.Reflection.Emit.TypeToken">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetTypeToken(System.String)" attrib="134" returntype="System.Reflection.Emit.TypeToken">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="IsTransient()" attrib="134" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="con" position="0" attrib="0" type="System.Reflection.ConstructorInfo" />
                  <parameter name="binaryAttribute" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="customBuilder" position="0" attrib="0" type="System.Reflection.Emit.CustomAttributeBuilder" />
                </parameters>
              </method>
              <method name="SetUserEntryPoint(System.Reflection.MethodInfo)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="entryPoint" position="0" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="OpCode" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <properties>
              <property name="FlowControl" attrib="0" ptype="System.Reflection.Emit.FlowControl" params="">
                <methods>
                  <method name="get_FlowControl()" attrib="2182" returntype="System.Reflection.Emit.FlowControl">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OpCodeType" attrib="0" ptype="System.Reflection.Emit.OpCodeType" params="">
                <methods>
                  <method name="get_OpCodeType()" attrib="2182" returntype="System.Reflection.Emit.OpCodeType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OperandType" attrib="0" ptype="System.Reflection.Emit.OperandType" params="">
                <methods>
                  <method name="get_OperandType()" attrib="2182" returntype="System.Reflection.Emit.OperandType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Size" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Size()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="StackBehaviourPop" attrib="0" ptype="System.Reflection.Emit.StackBehaviour" params="">
                <methods>
                  <method name="get_StackBehaviourPop()" attrib="2182" returntype="System.Reflection.Emit.StackBehaviour">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="StackBehaviourPush" attrib="0" ptype="System.Reflection.Emit.StackBehaviour" params="">
                <methods>
                  <method name="get_StackBehaviourPush()" attrib="2182" returntype="System.Reflection.Emit.StackBehaviour">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="System.Int16" params="">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="System.Int16">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Reflection.Emit.OpCode)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Reflection.Emit.OpCode" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(System.Reflection.Emit.OpCode, System.Reflection.Emit.OpCode)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Reflection.Emit.OpCode" />
                  <parameter name="b" position="1" attrib="0" type="System.Reflection.Emit.OpCode" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Reflection.Emit.OpCode, System.Reflection.Emit.OpCode)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Reflection.Emit.OpCode" />
                  <parameter name="b" position="1" attrib="0" type="System.Reflection.Emit.OpCode" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="OpCodes" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Add" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Add_Ovf" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Add_Ovf_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="And" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Arglist" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Beq" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Beq_S" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Bge" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Bge_S" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Bge_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Bge_Un_S" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Bgt" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Bgt_S" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Bgt_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Bgt_Un_S" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ble" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ble_S" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ble_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ble_Un_S" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Blt" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Blt_S" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Blt_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Blt_Un_S" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Bne_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Bne_Un_S" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Box" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Br" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Br_S" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Break" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Brfalse" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Brfalse_S" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Brtrue" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Brtrue_S" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Call" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Calli" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Callvirt" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Castclass" attrib="54" fieldtype="System.Reflection.Emit.OpCode">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
              </field>
              <field name="Ceq" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Cgt" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Cgt_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ckfinite" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Clt" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Clt_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Constrained" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_I" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_I1" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_I2" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_I4" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_I8" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_Ovf_I" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_Ovf_I_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_Ovf_I1" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_Ovf_I1_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_Ovf_I2" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_Ovf_I2_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_Ovf_I4" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_Ovf_I4_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_Ovf_I8" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_Ovf_I8_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_Ovf_U" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_Ovf_U_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_Ovf_U1" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_Ovf_U1_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_Ovf_U2" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_Ovf_U2_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_Ovf_U4" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_Ovf_U4_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_Ovf_U8" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_Ovf_U8_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_R_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_R4" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_R8" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_U" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_U1" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_U2" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_U4" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Conv_U8" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Cpblk" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Cpobj" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Div" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Div_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Dup" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Endfilter" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Endfinally" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Initblk" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Initobj" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Isinst" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Jmp" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldarg" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldarg_0" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldarg_1" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldarg_2" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldarg_3" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldarg_S" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldarga" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldarga_S" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldc_I4" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldc_I4_0" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldc_I4_1" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldc_I4_2" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldc_I4_3" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldc_I4_4" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldc_I4_5" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldc_I4_6" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldc_I4_7" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldc_I4_8" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldc_I4_M1" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldc_I4_S" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldc_I8" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldc_R4" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldc_R8" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldelem" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldelem_I" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldelem_I1" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldelem_I2" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldelem_I4" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldelem_I8" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldelem_R4" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldelem_R8" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldelem_Ref" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldelem_U1" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldelem_U2" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldelem_U4" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldelema" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldfld" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldflda" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldftn" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldind_I" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldind_I1" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldind_I2" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldind_I4" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldind_I8" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldind_R4" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldind_R8" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldind_Ref" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldind_U1" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldind_U2" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldind_U4" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldlen" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldloc" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldloc_0" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldloc_1" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldloc_2" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldloc_3" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldloc_S" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldloca" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldloca_S" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldnull" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldobj" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldsfld" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldsflda" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldstr" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldtoken" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ldvirtftn" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Leave" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Leave_S" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Localloc" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Mkrefany" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Mul" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Mul_Ovf" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Mul_Ovf_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Neg" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Newarr" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Newobj" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Nop" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Not" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Or" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Pop" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Prefix1" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Prefix2" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Prefix3" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Prefix4" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Prefix5" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Prefix6" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Prefix7" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Prefixref" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Readonly" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Refanytype" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Refanyval" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Rem" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Rem_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Ret" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Rethrow" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Shl" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Shr" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Shr_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Sizeof" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Starg" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Starg_S" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stelem" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stelem_I" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stelem_I1" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stelem_I2" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stelem_I4" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stelem_I8" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stelem_R4" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stelem_R8" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stelem_Ref" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stfld" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stind_I" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stind_I1" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stind_I2" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stind_I4" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stind_I8" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stind_R4" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stind_R8" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stind_Ref" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stloc" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stloc_0" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stloc_1" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stloc_2" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stloc_3" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stloc_S" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stobj" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Stsfld" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Sub" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Sub_Ovf" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Sub_Ovf_Un" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Switch" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Tailcall" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Throw" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Unaligned" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Unbox" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Unbox_Any" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Volatile" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
              <field name="Xor" attrib="54" fieldtype="System.Reflection.Emit.OpCode" />
            </fields>
            <methods>
              <method name="TakesSingleByteArgument(System.Reflection.Emit.OpCode)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="inst" position="0" attrib="0" type="System.Reflection.Emit.OpCode" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="OpCodeType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Macro" attrib="32854" fieldtype="System.Reflection.Emit.OpCodeType" value="1" />
              <field name="Nternal" attrib="32854" fieldtype="System.Reflection.Emit.OpCodeType" value="2" />
              <field name="Objmodel" attrib="32854" fieldtype="System.Reflection.Emit.OpCodeType" value="3" />
              <field name="Prefix" attrib="32854" fieldtype="System.Reflection.Emit.OpCodeType" value="4" />
              <field name="Primitive" attrib="32854" fieldtype="System.Reflection.Emit.OpCodeType" value="5" />
            </fields>
          </class>
          <class name="OperandType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="InlineBrTarget" attrib="32854" fieldtype="System.Reflection.Emit.OperandType" value="0" />
              <field name="InlineField" attrib="32854" fieldtype="System.Reflection.Emit.OperandType" value="1" />
              <field name="InlineI" attrib="32854" fieldtype="System.Reflection.Emit.OperandType" value="2" />
              <field name="InlineI8" attrib="32854" fieldtype="System.Reflection.Emit.OperandType" value="3" />
              <field name="InlineMethod" attrib="32854" fieldtype="System.Reflection.Emit.OperandType" value="4" />
              <field name="InlineNone" attrib="32854" fieldtype="System.Reflection.Emit.OperandType" value="5" />
              <field name="InlineR" attrib="32854" fieldtype="System.Reflection.Emit.OperandType" value="7" />
              <field name="InlineSig" attrib="32854" fieldtype="System.Reflection.Emit.OperandType" value="9" />
              <field name="InlineString" attrib="32854" fieldtype="System.Reflection.Emit.OperandType" value="10" />
              <field name="InlineSwitch" attrib="32854" fieldtype="System.Reflection.Emit.OperandType" value="11" />
              <field name="InlineTok" attrib="32854" fieldtype="System.Reflection.Emit.OperandType" value="12" />
              <field name="InlineType" attrib="32854" fieldtype="System.Reflection.Emit.OperandType" value="13" />
              <field name="InlineVar" attrib="32854" fieldtype="System.Reflection.Emit.OperandType" value="14" />
              <field name="ShortInlineBrTarget" attrib="32854" fieldtype="System.Reflection.Emit.OperandType" value="15" />
              <field name="ShortInlineI" attrib="32854" fieldtype="System.Reflection.Emit.OperandType" value="16" />
              <field name="ShortInlineR" attrib="32854" fieldtype="System.Reflection.Emit.OperandType" value="17" />
              <field name="ShortInlineVar" attrib="32854" fieldtype="System.Reflection.Emit.OperandType" value="18" />
            </fields>
          </class>
          <class name="PackingSize" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Size1" attrib="32854" fieldtype="System.Reflection.Emit.PackingSize" value="1" />
              <field name="Size128" attrib="32854" fieldtype="System.Reflection.Emit.PackingSize" value="128" />
              <field name="Size16" attrib="32854" fieldtype="System.Reflection.Emit.PackingSize" value="16" />
              <field name="Size2" attrib="32854" fieldtype="System.Reflection.Emit.PackingSize" value="2" />
              <field name="Size32" attrib="32854" fieldtype="System.Reflection.Emit.PackingSize" value="32" />
              <field name="Size4" attrib="32854" fieldtype="System.Reflection.Emit.PackingSize" value="4" />
              <field name="Size64" attrib="32854" fieldtype="System.Reflection.Emit.PackingSize" value="64" />
              <field name="Size8" attrib="32854" fieldtype="System.Reflection.Emit.PackingSize" value="8" />
              <field name="Unspecified" attrib="32854" fieldtype="System.Reflection.Emit.PackingSize" value="0" />
            </fields>
          </class>
          <class name="ParameterBuilder" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
            </attributes>
            <interfaces />
            <properties>
              <property name="Attributes" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Attributes()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsIn" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsIn()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsOptional" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsOptional()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsOut" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsOut()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Position" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Position()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetToken()" attrib="454" virtual="true" returntype="System.Reflection.Emit.ParameterToken">
                <parameters />
              </method>
              <method name="SetConstant(System.Object)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="defaultValue" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="customBuilder" position="0" attrib="0" type="System.Reflection.Emit.CustomAttributeBuilder" />
                </parameters>
              </method>
              <method name="SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="con" position="0" attrib="0" type="System.Reflection.ConstructorInfo" />
                  <parameter name="binaryAttribute" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="ParameterToken" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Empty" attrib="54" fieldtype="System.Reflection.Emit.ParameterToken" />
            </fields>
            <properties>
              <property name="Token" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Token()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Reflection.Emit.ParameterToken)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Reflection.Emit.ParameterToken" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(System.Reflection.Emit.ParameterToken, System.Reflection.Emit.ParameterToken)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Reflection.Emit.ParameterToken" />
                  <parameter name="b" position="1" attrib="0" type="System.Reflection.Emit.ParameterToken" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Reflection.Emit.ParameterToken, System.Reflection.Emit.ParameterToken)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Reflection.Emit.ParameterToken" />
                  <parameter name="b" position="1" attrib="0" type="System.Reflection.Emit.ParameterToken" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="PEFileKinds" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="ConsoleApplication" attrib="32854" fieldtype="System.Reflection.Emit.PEFileKinds" value="2" />
              <field name="Dll" attrib="32854" fieldtype="System.Reflection.Emit.PEFileKinds" value="1" />
              <field name="WindowApplication" attrib="32854" fieldtype="System.Reflection.Emit.PEFileKinds" value="3" />
            </fields>
          </class>
          <class name="PropertyBuilder" type="class" base="System.Reflection.PropertyInfo" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces />
            <properties>
              <property name="Attributes" attrib="0" ptype="System.Reflection.PropertyAttributes" params="">
                <methods>
                  <method name="get_Attributes()" attrib="2246" virtual="true" returntype="System.Reflection.PropertyAttributes">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanRead" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanRead()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanWrite" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanWrite()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DeclaringType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_DeclaringType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Module" attrib="0" ptype="System.Reflection.Module" params="">
                <methods>
                  <method name="get_Module()" attrib="2246" virtual="true" returntype="System.Reflection.Module">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PropertyToken" attrib="0" ptype="System.Reflection.Emit.PropertyToken" params="">
                <methods>
                  <method name="get_PropertyToken()" attrib="2182" returntype="System.Reflection.Emit.PropertyToken">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PropertyType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_PropertyType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReflectedType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_ReflectedType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AddOtherMethod(System.Reflection.Emit.MethodBuilder)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="mdBuilder" position="0" attrib="0" type="System.Reflection.Emit.MethodBuilder" />
                </parameters>
              </method>
              <method name="GetAccessors(System.Boolean)" attrib="198" virtual="true" returntype="System.Reflection.MethodInfo[]">
                <parameters>
                  <parameter name="nonPublic" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Type, System.Boolean)" attrib="198" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Boolean)" attrib="198" virtual="true" returntype="System.Object[]">
                <parameters>
                  <parameter name="inherit" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetGetMethod(System.Boolean)" attrib="198" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="nonPublic" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetIndexParameters()" attrib="198" virtual="true" returntype="System.Reflection.ParameterInfo[]">
                <parameters />
              </method>
              <method name="GetSetMethod(System.Boolean)" attrib="198" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="nonPublic" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetValue(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)" attrib="198" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                  <parameter name="invokeAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="index" position="3" attrib="0" type="System.Object[]" />
                  <parameter name="culture" position="4" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
              <method name="GetValue(System.Object, System.Object[])" attrib="198" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                  <parameter name="index" position="1" attrib="0" type="System.Object[]" />
                </parameters>
              </method>
              <method name="IsDefined(System.Type, System.Boolean)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="SetConstant(System.Object)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="defaultValue" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="con" position="0" attrib="0" type="System.Reflection.ConstructorInfo" />
                  <parameter name="binaryAttribute" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="customBuilder" position="0" attrib="0" type="System.Reflection.Emit.CustomAttributeBuilder" />
                </parameters>
              </method>
              <method name="SetGetMethod(System.Reflection.Emit.MethodBuilder)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="mdBuilder" position="0" attrib="0" type="System.Reflection.Emit.MethodBuilder" />
                </parameters>
              </method>
              <method name="SetSetMethod(System.Reflection.Emit.MethodBuilder)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="mdBuilder" position="0" attrib="0" type="System.Reflection.Emit.MethodBuilder" />
                </parameters>
              </method>
              <method name="SetValue(System.Object, System.Object, System.Object[])" attrib="198" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                  <parameter name="value" position="1" attrib="0" type="System.Object" />
                  <parameter name="index" position="2" attrib="0" type="System.Object[]" />
                </parameters>
              </method>
              <method name="SetValue(System.Object, System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)" attrib="198" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                  <parameter name="value" position="1" attrib="0" type="System.Object" />
                  <parameter name="invokeAttr" position="2" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="3" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="index" position="4" attrib="0" type="System.Object[]" />
                  <parameter name="culture" position="5" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="PropertyToken" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Empty" attrib="54" fieldtype="System.Reflection.Emit.PropertyToken" />
            </fields>
            <properties>
              <property name="Token" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Token()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Reflection.Emit.PropertyToken)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Reflection.Emit.PropertyToken" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(System.Reflection.Emit.PropertyToken, System.Reflection.Emit.PropertyToken)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Reflection.Emit.PropertyToken" />
                  <parameter name="b" position="1" attrib="0" type="System.Reflection.Emit.PropertyToken" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Reflection.Emit.PropertyToken, System.Reflection.Emit.PropertyToken)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Reflection.Emit.PropertyToken" />
                  <parameter name="b" position="1" attrib="0" type="System.Reflection.Emit.PropertyToken" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SignatureHelper" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
            </attributes>
            <interfaces />
            <methods>
              <method name="AddArgument(System.Type, System.Boolean)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="argument" position="0" attrib="0" type="System.Type" />
                  <parameter name="pinned" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="AddArgument(System.Type)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="clsArgument" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="AddArgument(System.Type, System.Type[], System.Type[])" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="argument" position="0" attrib="0" type="System.Type" />
                  <parameter name="requiredCustomModifiers" position="1" attrib="0" type="System.Type[]" />
                  <parameter name="optionalCustomModifiers" position="2" attrib="0" type="System.Type[]" />
                </parameters>
              </method>
              <method name="AddArguments(System.Type[], System.Type[][], System.Type[][])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="arguments" position="0" attrib="0" type="System.Type[]" />
                  <parameter name="requiredCustomModifiers" position="1" attrib="0" type="System.Type[][]" />
                  <parameter name="optionalCustomModifiers" position="2" attrib="0" type="System.Type[][]" />
                </parameters>
              </method>
              <method name="AddSentinel()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetFieldSigHelper(System.Reflection.Module)" attrib="150" static="true" returntype="System.Reflection.Emit.SignatureHelper">
                <parameters>
                  <parameter name="mod" position="0" attrib="0" type="System.Reflection.Module" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetLocalVarSigHelper()" attrib="150" static="true" returntype="System.Reflection.Emit.SignatureHelper">
                <parameters />
              </method>
              <method name="GetLocalVarSigHelper(System.Reflection.Module)" attrib="150" static="true" returntype="System.Reflection.Emit.SignatureHelper">
                <parameters>
                  <parameter name="mod" position="0" attrib="0" type="System.Reflection.Module" />
                </parameters>
              </method>
              <method name="GetMethodSigHelper(System.Reflection.Module, System.Reflection.CallingConventions, System.Type)" attrib="150" static="true" returntype="System.Reflection.Emit.SignatureHelper">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="mod" position="0" attrib="0" type="System.Reflection.Module" />
                  <parameter name="callingConvention" position="1" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="returnType" position="2" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetMethodSigHelper(System.Reflection.Module, System.Type, System.Type[])" attrib="150" static="true" returntype="System.Reflection.Emit.SignatureHelper">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="mod" position="0" attrib="0" type="System.Reflection.Module" />
                  <parameter name="returnType" position="1" attrib="0" type="System.Type" />
                  <parameter name="parameterTypes" position="2" attrib="0" type="System.Type[]" />
                </parameters>
              </method>
              <method name="GetMethodSigHelper(System.Reflection.Module, System.Runtime.InteropServices.CallingConvention, System.Type)" attrib="150" static="true" returntype="System.Reflection.Emit.SignatureHelper">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="mod" position="0" attrib="0" type="System.Reflection.Module" />
                  <parameter name="unmanagedCallConv" position="1" attrib="0" type="System.Runtime.InteropServices.CallingConvention" />
                  <parameter name="returnType" position="2" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetMethodSigHelper(System.Runtime.InteropServices.CallingConvention, System.Type)" attrib="150" static="true" returntype="System.Reflection.Emit.SignatureHelper">
                <parameters>
                  <parameter name="unmanagedCallingConvention" position="0" attrib="0" type="System.Runtime.InteropServices.CallingConvention" />
                  <parameter name="returnType" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetMethodSigHelper(System.Reflection.CallingConventions, System.Type)" attrib="150" static="true" returntype="System.Reflection.Emit.SignatureHelper">
                <parameters>
                  <parameter name="callingConvention" position="0" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="returnType" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetPropertySigHelper(System.Reflection.Module, System.Type, System.Type[])" attrib="150" static="true" returntype="System.Reflection.Emit.SignatureHelper">
                <parameters>
                  <parameter name="mod" position="0" attrib="0" type="System.Reflection.Module" />
                  <parameter name="returnType" position="1" attrib="0" type="System.Type" />
                  <parameter name="parameterTypes" position="2" attrib="0" type="System.Type[]" />
                </parameters>
              </method>
              <method name="GetPropertySigHelper(System.Reflection.Module, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])" attrib="150" static="true" returntype="System.Reflection.Emit.SignatureHelper">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="mod" position="0" attrib="0" type="System.Reflection.Module" />
                  <parameter name="returnType" position="1" attrib="0" type="System.Type" />
                  <parameter name="requiredReturnTypeCustomModifiers" position="2" attrib="0" type="System.Type[]" />
                  <parameter name="optionalReturnTypeCustomModifiers" position="3" attrib="0" type="System.Type[]" />
                  <parameter name="parameterTypes" position="4" attrib="0" type="System.Type[]" />
                  <parameter name="requiredParameterTypeCustomModifiers" position="5" attrib="0" type="System.Type[][]" />
                  <parameter name="optionalParameterTypeCustomModifiers" position="6" attrib="0" type="System.Type[][]" />
                </parameters>
              </method>
              <method name="GetSignature()" attrib="134" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="SignatureToken" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Empty" attrib="54" fieldtype="System.Reflection.Emit.SignatureToken" />
            </fields>
            <properties>
              <property name="Token" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Token()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Reflection.Emit.SignatureToken)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Reflection.Emit.SignatureToken" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(System.Reflection.Emit.SignatureToken, System.Reflection.Emit.SignatureToken)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Reflection.Emit.SignatureToken" />
                  <parameter name="b" position="1" attrib="0" type="System.Reflection.Emit.SignatureToken" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Reflection.Emit.SignatureToken, System.Reflection.Emit.SignatureToken)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Reflection.Emit.SignatureToken" />
                  <parameter name="b" position="1" attrib="0" type="System.Reflection.Emit.SignatureToken" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="StackBehaviour" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Pop0" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="0" />
              <field name="Pop1" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="1" />
              <field name="Pop1_pop1" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="2" />
              <field name="Popi" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="3" />
              <field name="Popi_pop1" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="4" />
              <field name="Popi_popi" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="5" />
              <field name="Popi_popi_popi" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="7" />
              <field name="Popi_popi8" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="6" />
              <field name="Popi_popr4" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="8" />
              <field name="Popi_popr8" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="9" />
              <field name="Popref" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="10" />
              <field name="Popref_pop1" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="11" />
              <field name="Popref_popi" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="12" />
              <field name="Popref_popi_pop1" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="28" />
              <field name="Popref_popi_popi" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="13" />
              <field name="Popref_popi_popi8" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="14" />
              <field name="Popref_popi_popr4" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="15" />
              <field name="Popref_popi_popr8" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="16" />
              <field name="Popref_popi_popref" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="17" />
              <field name="Push0" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="18" />
              <field name="Push1" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="19" />
              <field name="Push1_push1" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="20" />
              <field name="Pushi" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="21" />
              <field name="Pushi8" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="22" />
              <field name="Pushr4" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="23" />
              <field name="Pushr8" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="24" />
              <field name="Pushref" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="25" />
              <field name="Varpop" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="26" />
              <field name="Varpush" attrib="32854" fieldtype="System.Reflection.Emit.StackBehaviour" value="27" />
            </fields>
          </class>
          <class name="StringToken" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <properties>
              <property name="Token" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Token()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Reflection.Emit.StringToken)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Reflection.Emit.StringToken" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(System.Reflection.Emit.StringToken, System.Reflection.Emit.StringToken)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Reflection.Emit.StringToken" />
                  <parameter name="b" position="1" attrib="0" type="System.Reflection.Emit.StringToken" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Reflection.Emit.StringToken, System.Reflection.Emit.StringToken)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Reflection.Emit.StringToken" />
                  <parameter name="b" position="1" attrib="0" type="System.Reflection.Emit.StringToken" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="TypeBuilder" type="class" base="System.Type" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces />
            <fields>
              <field name="UnspecifiedTypeSize" attrib="32854" fieldtype="System.Int32" value="0" />
            </fields>
            <properties>
              <property name="Assembly" attrib="0" ptype="System.Reflection.Assembly" params="">
                <methods>
                  <method name="get_Assembly()" attrib="2246" virtual="true" returntype="System.Reflection.Assembly">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="AssemblyQualifiedName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_AssemblyQualifiedName()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="BaseType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_BaseType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DeclaringMethod" attrib="0" ptype="System.Reflection.MethodBase" params="">
                <methods>
                  <method name="get_DeclaringMethod()" attrib="2246" virtual="true" returntype="System.Reflection.MethodBase">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="DeclaringType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_DeclaringType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="FullName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_FullName()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="GenericParameterAttributes" attrib="0" ptype="System.Reflection.GenericParameterAttributes" params="">
                <methods>
                  <method name="get_GenericParameterAttributes()" attrib="2246" virtual="true" returntype="System.Reflection.GenericParameterAttributes">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="GenericParameterPosition" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_GenericParameterPosition()" attrib="2246" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="GUID" attrib="0" ptype="System.Guid" params="">
                <methods>
                  <method name="get_GUID()" attrib="2246" virtual="true" returntype="System.Guid">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsGenericParameter" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsGenericParameter()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsGenericType" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsGenericType()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsGenericTypeDefinition" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsGenericTypeDefinition()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Module" attrib="0" ptype="System.Reflection.Module" params="">
                <methods>
                  <method name="get_Module()" attrib="2246" virtual="true" returntype="System.Reflection.Module">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Namespace" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Namespace()" attrib="2246" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PackingSize" attrib="0" ptype="System.Reflection.Emit.PackingSize" params="">
                <methods>
                  <method name="get_PackingSize()" attrib="2182" returntype="System.Reflection.Emit.PackingSize">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReflectedType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_ReflectedType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Size" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Size()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TypeHandle" attrib="0" ptype="System.RuntimeTypeHandle" params="">
                <methods>
                  <method name="get_TypeHandle()" attrib="2246" virtual="true" returntype="System.RuntimeTypeHandle">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TypeToken" attrib="0" ptype="System.Reflection.Emit.TypeToken" params="">
                <methods>
                  <method name="get_TypeToken()" attrib="2182" returntype="System.Reflection.Emit.TypeToken">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UnderlyingSystemType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_UnderlyingSystemType()" attrib="2246" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AddInterfaceImplementation(System.Type)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="interfaceType" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="CreateType()" attrib="134" returntype="System.Type">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="DefineConstructor(System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type[], System.Type[][], System.Type[][])" attrib="134" returntype="System.Reflection.Emit.ConstructorBuilder">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="attributes" position="0" attrib="0" type="System.Reflection.MethodAttributes" />
                  <parameter name="callingConvention" position="1" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="parameterTypes" position="2" attrib="0" type="System.Type[]" />
                  <parameter name="requiredCustomModifiers" position="3" attrib="0" type="System.Type[][]" />
                  <parameter name="optionalCustomModifiers" position="4" attrib="0" type="System.Type[][]" />
                </parameters>
              </method>
              <method name="DefineConstructor(System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type[])" attrib="134" returntype="System.Reflection.Emit.ConstructorBuilder">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="attributes" position="0" attrib="0" type="System.Reflection.MethodAttributes" />
                  <parameter name="callingConvention" position="1" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="parameterTypes" position="2" attrib="0" type="System.Type[]" />
                </parameters>
              </method>
              <method name="DefineDefaultConstructor(System.Reflection.MethodAttributes)" attrib="134" returntype="System.Reflection.Emit.ConstructorBuilder">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="attributes" position="0" attrib="0" type="System.Reflection.MethodAttributes" />
                </parameters>
              </method>
              <method name="DefineEvent(System.String, System.Reflection.EventAttributes, System.Type)" attrib="134" returntype="System.Reflection.Emit.EventBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Reflection.EventAttributes" />
                  <parameter name="eventtype" position="2" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="DefineField(System.String, System.Type, System.Type[], System.Type[], System.Reflection.FieldAttributes)" attrib="134" returntype="System.Reflection.Emit.FieldBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="fieldName" position="0" attrib="0" type="System.String" />
                  <parameter name="type" position="1" attrib="0" type="System.Type" />
                  <parameter name="requiredCustomModifiers" position="2" attrib="0" type="System.Type[]" />
                  <parameter name="optionalCustomModifiers" position="3" attrib="0" type="System.Type[]" />
                  <parameter name="attributes" position="4" attrib="0" type="System.Reflection.FieldAttributes" />
                </parameters>
              </method>
              <method name="DefineField(System.String, System.Type, System.Reflection.FieldAttributes)" attrib="134" returntype="System.Reflection.Emit.FieldBuilder">
                <parameters>
                  <parameter name="fieldName" position="0" attrib="0" type="System.String" />
                  <parameter name="type" position="1" attrib="0" type="System.Type" />
                  <parameter name="attributes" position="2" attrib="0" type="System.Reflection.FieldAttributes" />
                </parameters>
              </method>
              <method name="DefineGenericParameters(System.String[])" attrib="134" returntype="System.Reflection.Emit.GenericTypeParameterBuilder[]">
                <parameters>
                  <parameter name="names" position="0" attrib="0" type="System.String[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="DefineInitializedData(System.String, System.Byte[], System.Reflection.FieldAttributes)" attrib="134" returntype="System.Reflection.Emit.FieldBuilder">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="data" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="attributes" position="2" attrib="0" type="System.Reflection.FieldAttributes" />
                </parameters>
              </method>
              <method name="DefineMethod(System.String, System.Reflection.MethodAttributes, System.Type, System.Type[])" attrib="134" returntype="System.Reflection.Emit.MethodBuilder">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Reflection.MethodAttributes" />
                  <parameter name="returnType" position="2" attrib="0" type="System.Type" />
                  <parameter name="parameterTypes" position="3" attrib="0" type="System.Type[]" />
                </parameters>
              </method>
              <method name="DefineMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[])" attrib="134" returntype="System.Reflection.Emit.MethodBuilder">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Reflection.MethodAttributes" />
                  <parameter name="callingConvention" position="2" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="returnType" position="3" attrib="0" type="System.Type" />
                  <parameter name="parameterTypes" position="4" attrib="0" type="System.Type[]" />
                </parameters>
              </method>
              <method name="DefineMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])" attrib="134" returntype="System.Reflection.Emit.MethodBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Reflection.MethodAttributes" />
                  <parameter name="callingConvention" position="2" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="returnType" position="3" attrib="0" type="System.Type" />
                  <parameter name="returnTypeRequiredCustomModifiers" position="4" attrib="0" type="System.Type[]" />
                  <parameter name="returnTypeOptionalCustomModifiers" position="5" attrib="0" type="System.Type[]" />
                  <parameter name="parameterTypes" position="6" attrib="0" type="System.Type[]" />
                  <parameter name="parameterTypeRequiredCustomModifiers" position="7" attrib="0" type="System.Type[][]" />
                  <parameter name="parameterTypeOptionalCustomModifiers" position="8" attrib="0" type="System.Type[][]" />
                </parameters>
              </method>
              <method name="DefineMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions)" attrib="134" returntype="System.Reflection.Emit.MethodBuilder">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Reflection.MethodAttributes" />
                  <parameter name="callingConvention" position="2" attrib="0" type="System.Reflection.CallingConventions" />
                </parameters>
              </method>
              <method name="DefineMethod(System.String, System.Reflection.MethodAttributes)" attrib="134" returntype="System.Reflection.Emit.MethodBuilder">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Reflection.MethodAttributes" />
                </parameters>
              </method>
              <method name="DefineMethodOverride(System.Reflection.MethodInfo, System.Reflection.MethodInfo)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="methodInfoBody" position="0" attrib="0" type="System.Reflection.MethodInfo" />
                  <parameter name="methodInfoDeclaration" position="1" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="DefineNestedType(System.String, System.Reflection.TypeAttributes)" attrib="134" returntype="System.Reflection.Emit.TypeBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attr" position="1" attrib="0" type="System.Reflection.TypeAttributes" />
                </parameters>
              </method>
              <method name="DefineNestedType(System.String, System.Reflection.TypeAttributes, System.Type, System.Int32)" attrib="134" returntype="System.Reflection.Emit.TypeBuilder">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attr" position="1" attrib="0" type="System.Reflection.TypeAttributes" />
                  <parameter name="parent" position="2" attrib="0" type="System.Type" />
                  <parameter name="typeSize" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="DefineNestedType(System.String, System.Reflection.TypeAttributes, System.Type, System.Reflection.Emit.PackingSize)" attrib="134" returntype="System.Reflection.Emit.TypeBuilder">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attr" position="1" attrib="0" type="System.Reflection.TypeAttributes" />
                  <parameter name="parent" position="2" attrib="0" type="System.Type" />
                  <parameter name="packSize" position="3" attrib="0" type="System.Reflection.Emit.PackingSize" />
                </parameters>
              </method>
              <method name="DefineNestedType(System.String)" attrib="134" returntype="System.Reflection.Emit.TypeBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="DefineNestedType(System.String, System.Reflection.TypeAttributes, System.Type, System.Type[])" attrib="134" returntype="System.Reflection.Emit.TypeBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attr" position="1" attrib="0" type="System.Reflection.TypeAttributes" />
                  <parameter name="parent" position="2" attrib="0" type="System.Type" />
                  <parameter name="interfaces" position="3" attrib="0" type="System.Type[]" />
                </parameters>
              </method>
              <method name="DefineNestedType(System.String, System.Reflection.TypeAttributes, System.Type)" attrib="134" returntype="System.Reflection.Emit.TypeBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attr" position="1" attrib="0" type="System.Reflection.TypeAttributes" />
                  <parameter name="parent" position="2" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="DefinePInvokeMethod(System.String, System.String, System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Runtime.InteropServices.CallingConvention, System.Runtime.InteropServices.CharSet)" attrib="134" returntype="System.Reflection.Emit.MethodBuilder">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="dllName" position="1" attrib="0" type="System.String" />
                  <parameter name="entryName" position="2" attrib="0" type="System.String" />
                  <parameter name="attributes" position="3" attrib="0" type="System.Reflection.MethodAttributes" />
                  <parameter name="callingConvention" position="4" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="returnType" position="5" attrib="0" type="System.Type" />
                  <parameter name="parameterTypes" position="6" attrib="0" type="System.Type[]" />
                  <parameter name="nativeCallConv" position="7" attrib="0" type="System.Runtime.InteropServices.CallingConvention" />
                  <parameter name="nativeCharSet" position="8" attrib="0" type="System.Runtime.InteropServices.CharSet" />
                </parameters>
              </method>
              <method name="DefinePInvokeMethod(System.String, System.String, System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][], System.Runtime.InteropServices.CallingConvention, System.Runtime.InteropServices.CharSet)" attrib="134" returntype="System.Reflection.Emit.MethodBuilder">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="dllName" position="1" attrib="0" type="System.String" />
                  <parameter name="entryName" position="2" attrib="0" type="System.String" />
                  <parameter name="attributes" position="3" attrib="0" type="System.Reflection.MethodAttributes" />
                  <parameter name="callingConvention" position="4" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="returnType" position="5" attrib="0" type="System.Type" />
                  <parameter name="returnTypeRequiredCustomModifiers" position="6" attrib="0" type="System.Type[]" />
                  <parameter name="returnTypeOptionalCustomModifiers" position="7" attrib="0" type="System.Type[]" />
                  <parameter name="parameterTypes" position="8" attrib="0" type="System.Type[]" />
                  <parameter name="parameterTypeRequiredCustomModifiers" position="9" attrib="0" type="System.Type[][]" />
                  <parameter name="parameterTypeOptionalCustomModifiers" position="10" attrib="0" type="System.Type[][]" />
                  <parameter name="nativeCallConv" position="11" attrib="0" type="System.Runtime.InteropServices.CallingConvention" />
                  <parameter name="nativeCharSet" position="12" attrib="0" type="System.Runtime.InteropServices.CharSet" />
                </parameters>
              </method>
              <method name="DefinePInvokeMethod(System.String, System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Runtime.InteropServices.CallingConvention, System.Runtime.InteropServices.CharSet)" attrib="134" returntype="System.Reflection.Emit.MethodBuilder">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="dllName" position="1" attrib="0" type="System.String" />
                  <parameter name="attributes" position="2" attrib="0" type="System.Reflection.MethodAttributes" />
                  <parameter name="callingConvention" position="3" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="returnType" position="4" attrib="0" type="System.Type" />
                  <parameter name="parameterTypes" position="5" attrib="0" type="System.Type[]" />
                  <parameter name="nativeCallConv" position="6" attrib="0" type="System.Runtime.InteropServices.CallingConvention" />
                  <parameter name="nativeCharSet" position="7" attrib="0" type="System.Runtime.InteropServices.CharSet" />
                </parameters>
              </method>
              <method name="DefineProperty(System.String, System.Reflection.PropertyAttributes, System.Type, System.Type[])" attrib="134" returntype="System.Reflection.Emit.PropertyBuilder">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Reflection.PropertyAttributes" />
                  <parameter name="returnType" position="2" attrib="0" type="System.Type" />
                  <parameter name="parameterTypes" position="3" attrib="0" type="System.Type[]" />
                </parameters>
              </method>
              <method name="DefineProperty(System.String, System.Reflection.PropertyAttributes, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])" attrib="134" returntype="System.Reflection.Emit.PropertyBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Reflection.PropertyAttributes" />
                  <parameter name="returnType" position="2" attrib="0" type="System.Type" />
                  <parameter name="returnTypeRequiredCustomModifiers" position="3" attrib="0" type="System.Type[]" />
                  <parameter name="returnTypeOptionalCustomModifiers" position="4" attrib="0" type="System.Type[]" />
                  <parameter name="parameterTypes" position="5" attrib="0" type="System.Type[]" />
                  <parameter name="parameterTypeRequiredCustomModifiers" position="6" attrib="0" type="System.Type[][]" />
                  <parameter name="parameterTypeOptionalCustomModifiers" position="7" attrib="0" type="System.Type[][]" />
                </parameters>
              </method>
              <method name="DefineTypeInitializer()" attrib="134" returntype="System.Reflection.Emit.ConstructorBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="DefineUninitializedData(System.String, System.Int32, System.Reflection.FieldAttributes)" attrib="134" returntype="System.Reflection.Emit.FieldBuilder">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="size" position="1" attrib="0" type="System.Int32" />
                  <parameter name="attributes" position="2" attrib="0" type="System.Reflection.FieldAttributes" />
                </parameters>
              </method>
              <method name="GetAttributeFlagsImpl()" attrib="196" virtual="true" returntype="System.Reflection.TypeAttributes">
                <parameters />
              </method>
              <method name="GetConstructor(System.Type, System.Reflection.ConstructorInfo)" attrib="150" static="true" returntype="System.Reflection.ConstructorInfo">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="constructor" position="1" attrib="0" type="System.Reflection.ConstructorInfo" />
                </parameters>
              </method>
              <method name="GetConstructorImpl(System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])" attrib="196" virtual="true" returntype="System.Reflection.ConstructorInfo">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="1" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="callConvention" position="2" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="types" position="3" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="4" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="GetConstructors(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.ConstructorInfo[]">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Type, System.Boolean)" attrib="198" virtual="true" returntype="System.Object[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCustomAttributes(System.Boolean)" attrib="198" virtual="true" returntype="System.Object[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="inherit" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetElementType()" attrib="198" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="GetEvent(System.String, System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.EventInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetEvents(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.EventInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetEvents()" attrib="198" virtual="true" returntype="System.Reflection.EventInfo[]">
                <parameters />
              </method>
              <method name="GetField(System.String, System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.FieldInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetField(System.Type, System.Reflection.FieldInfo)" attrib="150" static="true" returntype="System.Reflection.FieldInfo">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="field" position="1" attrib="0" type="System.Reflection.FieldInfo" />
                </parameters>
              </method>
              <method name="GetFields(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.FieldInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetGenericArguments()" attrib="198" virtual="true" returntype="System.Type[]">
                <parameters />
              </method>
              <method name="GetGenericTypeDefinition()" attrib="198" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="GetInterface(System.String, System.Boolean)" attrib="198" virtual="true" returntype="System.Type">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ignoreCase" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetInterfaceMap(System.Type)" attrib="198" virtual="true" returntype="System.Reflection.InterfaceMapping">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="interfaceType" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetInterfaces()" attrib="198" virtual="true" returntype="System.Type[]">
                <parameters />
              </method>
              <method name="GetMember(System.String, System.Reflection.MemberTypes, System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.MemberInfo[]">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="type" position="1" attrib="0" type="System.Reflection.MemberTypes" />
                  <parameter name="bindingAttr" position="2" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetMembers(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.MemberInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetMethod(System.Type, System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                  <parameter name="method" position="1" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="GetMethodImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])" attrib="196" virtual="true" returntype="System.Reflection.MethodInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="callConvention" position="3" attrib="0" type="System.Reflection.CallingConventions" />
                  <parameter name="types" position="4" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="5" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="GetMethods(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.MethodInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetNestedType(System.String, System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Type">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetNestedTypes(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Type[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetProperties(System.Reflection.BindingFlags)" attrib="198" virtual="true" returntype="System.Reflection.PropertyInfo[]">
                <parameters>
                  <parameter name="bindingAttr" position="0" attrib="0" type="System.Reflection.BindingFlags" />
                </parameters>
              </method>
              <method name="GetPropertyImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])" attrib="196" virtual="true" returntype="System.Reflection.PropertyInfo">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="bindingAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="returnType" position="3" attrib="0" type="System.Type" />
                  <parameter name="types" position="4" attrib="0" type="System.Type[]" />
                  <parameter name="modifiers" position="5" attrib="0" type="System.Reflection.ParameterModifier[]" />
                </parameters>
              </method>
              <method name="HasElementTypeImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[], System.Reflection.ParameterModifier[], System.Globalization.CultureInfo, System.String[])" attrib="198" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="invokeAttr" position="1" attrib="0" type="System.Reflection.BindingFlags" />
                  <parameter name="binder" position="2" attrib="0" type="System.Reflection.Binder" />
                  <parameter name="target" position="3" attrib="0" type="System.Object" />
                  <parameter name="args" position="4" attrib="0" type="System.Object[]" />
                  <parameter name="modifiers" position="5" attrib="0" type="System.Reflection.ParameterModifier[]" />
                  <parameter name="culture" position="6" attrib="0" type="System.Globalization.CultureInfo" />
                  <parameter name="namedParameters" position="7" attrib="0" type="System.String[]" />
                </parameters>
              </method>
              <method name="IsArrayImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsAssignableFrom(System.Type)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="IsByRefImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsCOMObjectImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsCreated()" attrib="134" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsDefined(System.Type, System.Boolean)" attrib="198" virtual="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="attributeType" position="0" attrib="0" type="System.Type" />
                  <parameter name="inherit" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="IsPointerImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsPrimitiveImpl()" attrib="196" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="IsSubclassOf(System.Type)" attrib="198" virtual="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="MakeArrayType()" attrib="198" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="MakeArrayType(System.Int32)" attrib="198" virtual="true" returntype="System.Type">
                <parameters>
                  <parameter name="rank" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="MakeByRefType()" attrib="198" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="MakeGenericType(System.Type[])" attrib="198" virtual="true" returntype="System.Type">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="typeArguments" position="0" attrib="0" type="System.Type[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="MakePointerType()" attrib="198" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="con" position="0" attrib="0" type="System.Reflection.ConstructorInfo" />
                  <parameter name="binaryAttribute" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="customBuilder" position="0" attrib="0" type="System.Reflection.Emit.CustomAttributeBuilder" />
                </parameters>
              </method>
              <method name="SetParent(System.Type)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="parent" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="TypeToken" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Empty" attrib="54" fieldtype="System.Reflection.Emit.TypeToken" />
            </fields>
            <properties>
              <property name="Token" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Token()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Reflection.Emit.TypeToken)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Reflection.Emit.TypeToken" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Equality(System.Reflection.Emit.TypeToken, System.Reflection.Emit.TypeToken)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Reflection.Emit.TypeToken" />
                  <parameter name="b" position="1" attrib="0" type="System.Reflection.Emit.TypeToken" />
                </parameters>
              </method>
              <method name="op_Inequality(System.Reflection.Emit.TypeToken, System.Reflection.Emit.TypeToken)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Reflection.Emit.TypeToken" />
                  <parameter name="b" position="1" attrib="0" type="System.Reflection.Emit.TypeToken" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Resources">
        <classes>
          <class name="IResourceReader" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.IDisposable" />
            </interfaces>
            <methods>
              <method name="Close()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="GetEnumerator()" attrib="1478" abstract="true" virtual="true" returntype="System.Collections.IDictionaryEnumerator">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="MissingManifestResourceException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="NeutralResourcesLanguageAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Resources.UltimateResourceFallbackLocation)" attrib="6278">
                <parameters>
                  <parameter name="cultureName" position="0" attrib="0" type="System.String" />
                  <parameter name="location" position="1" attrib="0" type="System.Resources.UltimateResourceFallbackLocation" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="cultureName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="CultureName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_CultureName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Location" attrib="0" ptype="System.Resources.UltimateResourceFallbackLocation" params="">
                <methods>
                  <method name="get_Location()" attrib="2182" returntype="System.Resources.UltimateResourceFallbackLocation">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="ResourceManager" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="BaseNameField" attrib="4" fieldtype="System.String" />
              <field name="HeaderVersionNumber" attrib="54" fieldtype="System.Int32" />
              <field name="MagicNumber" attrib="54" fieldtype="System.Int32" />
              <field name="MainAssembly" attrib="4" fieldtype="System.Reflection.Assembly" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.String, System.Reflection.Assembly, System.Type)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="baseName" position="0" attrib="0" type="System.String" />
                  <parameter name="assembly" position="1" attrib="0" type="System.Reflection.Assembly" />
                  <parameter name="usingResourceSet" position="2" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Type)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="resourceSource" position="0" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String, System.Reflection.Assembly)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="baseName" position="0" attrib="0" type="System.String" />
                  <parameter name="assembly" position="1" attrib="0" type="System.Reflection.Assembly" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="BaseName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_BaseName()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IgnoreCase" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IgnoreCase()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_IgnoreCase(System.Boolean)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ResourceSetType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_ResourceSetType()" attrib="2502" virtual="true" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetNeutralResourcesLanguage(System.Reflection.Assembly)" attrib="148" static="true" returntype="System.Globalization.CultureInfo">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Reflection.Assembly" />
                </parameters>
              </method>
              <method name="GetObject(System.String)" attrib="454" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetObject(System.String, System.Globalization.CultureInfo)" attrib="454" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="culture" position="1" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
              <method name="GetResourceFileName(System.Globalization.CultureInfo)" attrib="452" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="culture" position="0" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
              <method name="GetResourceSet(System.Globalization.CultureInfo, System.Boolean, System.Boolean)" attrib="454" virtual="true" returntype="System.Resources.ResourceSet">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="culture" position="0" attrib="0" type="System.Globalization.CultureInfo" />
                  <parameter name="createIfNotExists" position="1" attrib="0" type="System.Boolean" />
                  <parameter name="tryParents" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetSatelliteContractVersion(System.Reflection.Assembly)" attrib="148" static="true" returntype="System.Version">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Reflection.Assembly" />
                </parameters>
              </method>
              <method name="GetStream(System.String, System.Globalization.CultureInfo)" attrib="134" returntype="System.IO.UnmanagedMemoryStream">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="culture" position="1" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
              <method name="GetStream(System.String)" attrib="134" returntype="System.IO.UnmanagedMemoryStream">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetString(System.String)" attrib="454" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetString(System.String, System.Globalization.CultureInfo)" attrib="454" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="culture" position="1" attrib="0" type="System.Globalization.CultureInfo" />
                </parameters>
              </method>
              <method name="InternalGetResourceSet(System.Globalization.CultureInfo, System.Boolean, System.Boolean)" attrib="452" virtual="true" returntype="System.Resources.ResourceSet">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="culture" position="0" attrib="0" type="System.Globalization.CultureInfo" />
                  <parameter name="createIfNotExists" position="1" attrib="0" type="System.Boolean" />
                  <parameter name="tryParents" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ReleaseAllResources()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="ResourceSet" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.Collections.IEnumerable" />
            </interfaces>
            <fields>
              <field name="Reader" attrib="4" fieldtype="System.Resources.IResourceReader" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.IO.Stream)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Resources.IResourceReader)" attrib="6278">
                <parameters>
                  <parameter name="reader" position="0" attrib="0" type="System.Resources.IResourceReader" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="fileName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="Close()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose()" attrib="486" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="452" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetDefaultReader()" attrib="454" virtual="true" returntype="System.Type">
                <parameters />
              </method>
              <method name="GetEnumerator()" attrib="454" virtual="true" returntype="System.Collections.IDictionaryEnumerator">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetObject(System.String)" attrib="454" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetObject(System.String, System.Boolean)" attrib="454" virtual="true" returntype="System.Object">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ignoreCase" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetString(System.String)" attrib="454" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetString(System.String, System.Boolean)" attrib="454" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="ignoreCase" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ReadResources()" attrib="452" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="SatelliteContractVersionAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="version" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Version" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Version()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="UltimateResourceFallbackLocation" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="MainAssembly" attrib="32854" fieldtype="System.Resources.UltimateResourceFallbackLocation" value="0" />
              <field name="Satellite" attrib="32854" fieldtype="System.Resources.UltimateResourceFallbackLocation" value="1" />
            </fields>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Runtime.CompilerServices">
        <classes>
          <class name="AccessedThroughPropertyAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="propertyName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="PropertyName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_PropertyName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="CompilationRelaxations" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.FlagsAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="NoStringInterning" attrib="32854" fieldtype="System.Runtime.CompilerServices.CompilationRelaxations" value="8" />
            </fields>
          </class>
          <class name="CompilationRelaxationsAttribute" type="class" base="System.Attribute" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Runtime.CompilerServices.CompilationRelaxations)" attrib="6278">
                <parameters>
                  <parameter name="relaxations" position="0" attrib="0" type="System.Runtime.CompilerServices.CompilationRelaxations" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="relaxations" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="CompilationRelaxations" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_CompilationRelaxations()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="CompilerGeneratedAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="True" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="CustomConstantAttribute" type="class" base="System.Attribute" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Value" attrib="0" ptype="System.Object" params="">
                <methods>
                  <method name="get_Value()" attrib="3526" abstract="true" virtual="true" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="DateTimeConstantAttribute" type="class" base="System.Runtime.CompilerServices.CustomConstantAttribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Int64)" attrib="6278">
                <parameters>
                  <parameter name="ticks" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Value" attrib="0" ptype="System.Object" params="">
                <methods>
                  <method name="get_Value()" attrib="2246" virtual="true" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="DecimalConstantAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Byte, System.Byte, System.UInt32, System.UInt32, System.UInt32)" attrib="6278">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="scale" position="0" attrib="0" type="System.Byte" />
                  <parameter name="sign" position="1" attrib="0" type="System.Byte" />
                  <parameter name="hi" position="2" attrib="0" type="System.UInt32" />
                  <parameter name="mid" position="3" attrib="0" type="System.UInt32" />
                  <parameter name="low" position="4" attrib="0" type="System.UInt32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Value" attrib="0" ptype="System.Decimal" params="">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="System.Decimal">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="FixedAddressValueTypeAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="FixedBufferAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Type, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="elementType" position="0" attrib="0" type="System.Type" />
                  <parameter name="length" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="ElementType" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_ElementType()" attrib="2182" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Length" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Length()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="IndexerNameAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="True" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="indexerName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
          </class>
          <class name="InternalsVisibleToAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="True" />
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="assemblyName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="AllInternalsVisible" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_AllInternalsVisible()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_AllInternalsVisible(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="AssemblyName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_AssemblyName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="IsBoxed" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto" />
          <class name="IsByValue" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto" />
          <class name="IsConst" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto" />
          <class name="IsExplicitlyDereferenced" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto" />
          <class name="IsImplicitlyDereferenced" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto" />
          <class name="IsLong" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto" />
          <class name="IsSignUnspecifiedByte" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto" />
          <class name="IsUdtReturn" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto" />
          <class name="IsVolatile" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
          </class>
          <class name="MethodCodeType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="IL" attrib="32854" fieldtype="System.Runtime.CompilerServices.MethodCodeType" value="0" />
              <field name="Native" attrib="32854" fieldtype="System.Runtime.CompilerServices.MethodCodeType" value="1" />
              <field name="OPTIL" attrib="32854" fieldtype="System.Runtime.CompilerServices.MethodCodeType" value="2" />
              <field name="Runtime" attrib="32854" fieldtype="System.Runtime.CompilerServices.MethodCodeType" value="3" />
            </fields>
          </class>
          <class name="MethodImplAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="MethodCodeType" attrib="6" fieldtype="System.Runtime.CompilerServices.MethodCodeType" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Int16)" attrib="6278">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Runtime.CompilerServices.MethodImplOptions)" attrib="6278">
                <parameters>
                  <parameter name="methodImplOptions" position="0" attrib="0" type="System.Runtime.CompilerServices.MethodImplOptions" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Value" attrib="0" ptype="System.Runtime.CompilerServices.MethodImplOptions" params="">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="System.Runtime.CompilerServices.MethodImplOptions">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="MethodImplOptions" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <fields>
              <field name="ForwardRef" attrib="32854" fieldtype="System.Runtime.CompilerServices.MethodImplOptions" value="16" />
              <field name="InternalCall" attrib="32854" fieldtype="System.Runtime.CompilerServices.MethodImplOptions" value="4096" />
              <field name="NoInlining" attrib="32854" fieldtype="System.Runtime.CompilerServices.MethodImplOptions" value="8" />
              <field name="NoOptimization" attrib="32854" fieldtype="System.Runtime.CompilerServices.MethodImplOptions" value="64" />
              <field name="PreserveSig" attrib="32854" fieldtype="System.Runtime.CompilerServices.MethodImplOptions" value="128" />
              <field name="Synchronized" attrib="32854" fieldtype="System.Runtime.CompilerServices.MethodImplOptions" value="32" />
              <field name="Unmanaged" attrib="32854" fieldtype="System.Runtime.CompilerServices.MethodImplOptions" value="4" />
            </fields>
          </class>
          <class name="NativeCppClassAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="True" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="RuntimeCompatibilityAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="False" />
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="WrapNonExceptionThrows" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_WrapNonExceptionThrows()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_WrapNonExceptionThrows(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="RuntimeHelpers" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="OffsetToStringData" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_OffsetToStringData()" attrib="2198" static="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetHashCode(System.Object)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetObjectValue(System.Object)" attrib="150" static="true" returntype="System.Object">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="InitializeArray(System.Array, System.RuntimeFieldHandle)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Array" />
                  <parameter name="fldHandle" position="1" attrib="0" type="System.RuntimeFieldHandle" />
                </parameters>
              </method>
              <method name="RunClassConstructor(System.RuntimeTypeHandle)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.RuntimeTypeHandle" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SpecialNameAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="UnsafeValueTypeAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Runtime.ConstrainedExecution">
        <classes>
          <class name="CriticalFinalizerObject" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Finalize()" attrib="196" virtual="true" returntype="System.Void">
                <attributes />
                <parameters />
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Runtime.InteropServices">
        <classes>
          <class name="AllowReversePInvokeCallsAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="False" />
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="CallingConvention" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Cdecl" attrib="32854" fieldtype="System.Runtime.InteropServices.CallingConvention" value="2" />
              <field name="FastCall" attrib="32854" fieldtype="System.Runtime.InteropServices.CallingConvention" value="5" />
              <field name="StdCall" attrib="32854" fieldtype="System.Runtime.InteropServices.CallingConvention" value="3" />
              <field name="ThisCall" attrib="32854" fieldtype="System.Runtime.InteropServices.CallingConvention" value="4" />
              <field name="Winapi" attrib="32854" fieldtype="System.Runtime.InteropServices.CallingConvention" value="1" />
            </fields>
          </class>
          <class name="CharSet" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Ansi" attrib="32854" fieldtype="System.Runtime.InteropServices.CharSet" value="2" />
              <field name="Auto" attrib="32854" fieldtype="System.Runtime.InteropServices.CharSet" value="4" />
              <field name="None" attrib="32854" fieldtype="System.Runtime.InteropServices.CharSet" value="1" />
              <field name="Unicode" attrib="32854" fieldtype="System.Runtime.InteropServices.CharSet" value="3" />
            </fields>
          </class>
          <class name="ClassInterfaceAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Int16)" attrib="6278">
                <parameters>
                  <parameter name="classInterfaceType" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Runtime.InteropServices.ClassInterfaceType)" attrib="6278">
                <parameters>
                  <parameter name="classInterfaceType" position="0" attrib="0" type="System.Runtime.InteropServices.ClassInterfaceType" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Value" attrib="0" ptype="System.Runtime.InteropServices.ClassInterfaceType" params="">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="System.Runtime.InteropServices.ClassInterfaceType">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="ClassInterfaceType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="AutoDispatch" attrib="32854" fieldtype="System.Runtime.InteropServices.ClassInterfaceType" value="1" />
              <field name="AutoDual" attrib="32854" fieldtype="System.Runtime.InteropServices.ClassInterfaceType" value="2" />
              <field name="None" attrib="32854" fieldtype="System.Runtime.InteropServices.ClassInterfaceType" value="0" />
            </fields>
          </class>
          <class name="CoClassAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Type)" attrib="6278">
                <parameters>
                  <parameter name="coClass" position="0" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="CoClass" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_CoClass()" attrib="2182" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="ComDefaultInterfaceAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Type)" attrib="6278">
                <parameters>
                  <parameter name="defaultInterface" position="0" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Value" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="System.Type">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="COMException" type="class" base="System.Runtime.InteropServices.ExternalException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <methods>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
            </methods>
          </class>
          <class name="ComImportAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="ComInterfaceType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="InterfaceIsDual" attrib="32854" fieldtype="System.Runtime.InteropServices.ComInterfaceType" value="0" />
              <field name="InterfaceIsIDispatch" attrib="32854" fieldtype="System.Runtime.InteropServices.ComInterfaceType" value="2" />
              <field name="InterfaceIsIUnknown" attrib="32854" fieldtype="System.Runtime.InteropServices.ComInterfaceType" value="1" />
            </fields>
          </class>
          <class name="ComVisibleAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="visibility" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Value" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="CriticalHandle" type="class" base="System.Runtime.ConstrainedExecution.CriticalFinalizerObject" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Security.SecurityCriticalAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <fields>
              <field name="handle" attrib="4" fieldtype="System.IntPtr" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.IntPtr)" attrib="6276">
                <attributes />
                <parameters>
                  <parameter name="invalidHandleValue" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="IsClosed" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsClosed()" attrib="2182" returntype="System.Boolean">
                    <attributes />
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsInvalid" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsInvalid()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <attributes />
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Close()" attrib="134" returntype="System.Void">
                <attributes />
                <parameters />
              </method>
              <method name="Dispose()" attrib="486" virtual="true" returntype="System.Void">
                <attributes />
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="452" virtual="true" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Finalize()" attrib="196" virtual="true" returntype="System.Void">
                <attributes />
                <parameters />
              </method>
              <method name="ReleaseHandle()" attrib="1476" abstract="true" virtual="true" returntype="System.Boolean">
                <attributes />
                <parameters />
              </method>
              <method name="SetHandle(System.IntPtr)" attrib="132" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="handle" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="SetHandleAsInvalid()" attrib="134" returntype="System.Void">
                <attributes />
                <parameters />
              </method>
            </methods>
          </class>
          <class name="DefaultCharSetAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Runtime.InteropServices.CharSet)" attrib="6278">
                <parameters>
                  <parameter name="charSet" position="0" attrib="0" type="System.Runtime.InteropServices.CharSet" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="CharSet" attrib="0" ptype="System.Runtime.InteropServices.CharSet" params="">
                <methods>
                  <method name="get_CharSet()" attrib="2182" returntype="System.Runtime.InteropServices.CharSet">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="DispIdAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="dispId" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Value" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="DllImportAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="BestFitMapping" attrib="6" fieldtype="System.Boolean" />
              <field name="CallingConvention" attrib="6" fieldtype="System.Runtime.InteropServices.CallingConvention" />
              <field name="CharSet" attrib="6" fieldtype="System.Runtime.InteropServices.CharSet" />
              <field name="EntryPoint" attrib="6" fieldtype="System.String" />
              <field name="ExactSpelling" attrib="6" fieldtype="System.Boolean" />
              <field name="PreserveSig" attrib="6" fieldtype="System.Boolean" />
              <field name="SetLastError" attrib="6" fieldtype="System.Boolean" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="dllName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Value" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="ExternalException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="ErrorCode" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_ErrorCode()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="FieldOffsetAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="offset" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Value" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="GCHandle" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <properties>
              <property name="IsAllocated" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsAllocated()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Target" attrib="0" ptype="System.Object" params="">
                <methods>
                  <method name="get_Target()" attrib="2182" returntype="System.Object">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_Target(System.Object)" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Object" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AddrOfPinnedObject()" attrib="134" returntype="System.IntPtr">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="Alloc(System.Object)" attrib="150" static="true" returntype="System.Runtime.InteropServices.GCHandle">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Alloc(System.Object, System.Runtime.InteropServices.GCHandleType)" attrib="150" static="true" returntype="System.Runtime.InteropServices.GCHandle">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                  <parameter name="type" position="1" attrib="0" type="System.Runtime.InteropServices.GCHandleType" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Free()" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="op_Explicit(System.IntPtr)" attrib="2198" static="true" returntype="System.Runtime.InteropServices.GCHandle">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="op_Explicit(System.Runtime.InteropServices.GCHandle)" attrib="2198" static="true" returntype="System.IntPtr">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Runtime.InteropServices.GCHandle" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="GCHandleType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Normal" attrib="32854" fieldtype="System.Runtime.InteropServices.GCHandleType" value="2" />
              <field name="Pinned" attrib="32854" fieldtype="System.Runtime.InteropServices.GCHandleType" value="3" />
              <field name="Weak" attrib="32854" fieldtype="System.Runtime.InteropServices.GCHandleType" value="0" />
              <field name="WeakTrackResurrection" attrib="32854" fieldtype="System.Runtime.InteropServices.GCHandleType" value="1" />
            </fields>
          </class>
          <class name="GuidAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="guid" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Value" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="InAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="InterfaceTypeAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Runtime.InteropServices.ComInterfaceType)" attrib="6278">
                <parameters>
                  <parameter name="interfaceType" position="0" attrib="0" type="System.Runtime.InteropServices.ComInterfaceType" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Value" attrib="0" ptype="System.Runtime.InteropServices.ComInterfaceType" params="">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="System.Runtime.InteropServices.ComInterfaceType">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="LayoutKind" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Auto" attrib="32854" fieldtype="System.Runtime.InteropServices.LayoutKind" value="3" />
              <field name="Explicit" attrib="32854" fieldtype="System.Runtime.InteropServices.LayoutKind" value="2" />
              <field name="Sequential" attrib="32854" fieldtype="System.Runtime.InteropServices.LayoutKind" value="0" />
            </fields>
          </class>
          <class name="Marshal" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Security.SecurityCriticalAttribute" />
            </attributes>
            <fields>
              <field name="SystemDefaultCharSize" attrib="54" fieldtype="System.Int32" />
            </fields>
            <methods>
              <method name="Copy(System.IntPtr, System.Int32[], System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="destination" position="1" attrib="0" type="System.Int32[]" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="length" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Copy(System.IntPtr, System.Char[], System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="destination" position="1" attrib="0" type="System.Char[]" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="length" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Copy(System.Byte[], System.Int32, System.IntPtr, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="destination" position="2" attrib="0" type="System.IntPtr" />
                  <parameter name="length" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Copy(System.Single[], System.Int32, System.IntPtr, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Single[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="destination" position="2" attrib="0" type="System.IntPtr" />
                  <parameter name="length" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Copy(System.Double[], System.Int32, System.IntPtr, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Double[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="destination" position="2" attrib="0" type="System.IntPtr" />
                  <parameter name="length" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Copy(System.IntPtr, System.Double[], System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="destination" position="1" attrib="0" type="System.Double[]" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="length" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Copy(System.IntPtr, System.Byte[], System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="destination" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="length" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Copy(System.IntPtr, System.Single[], System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="destination" position="1" attrib="0" type="System.Single[]" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="length" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Copy(System.IntPtr, System.Int16[], System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="destination" position="1" attrib="0" type="System.Int16[]" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="length" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Copy(System.IntPtr, System.Int64[], System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="destination" position="1" attrib="0" type="System.Int64[]" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="length" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Copy(System.Char[], System.Int32, System.IntPtr, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="destination" position="2" attrib="0" type="System.IntPtr" />
                  <parameter name="length" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Copy(System.Int32[], System.Int32, System.IntPtr, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Int32[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="destination" position="2" attrib="0" type="System.IntPtr" />
                  <parameter name="length" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Copy(System.Int64[], System.Int32, System.IntPtr, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Int64[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="destination" position="2" attrib="0" type="System.IntPtr" />
                  <parameter name="length" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Copy(System.Int16[], System.Int32, System.IntPtr, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="source" position="0" attrib="0" type="System.Int16[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="destination" position="2" attrib="0" type="System.IntPtr" />
                  <parameter name="length" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDelegateForFunctionPointer(System.IntPtr, System.Type)" attrib="150" static="true" returntype="System.Delegate">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="t" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="GetExceptionForHR(System.Int32)" attrib="150" static="true" returntype="System.Exception">
                <parameters>
                  <parameter name="errorCode" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetFunctionPointerForDelegate(System.Delegate)" attrib="150" static="true" returntype="System.IntPtr">
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Delegate" />
                </parameters>
              </method>
              <method name="GetHRForException(System.Exception)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="e" position="0" attrib="0" type="System.Exception" />
                </parameters>
              </method>
              <method name="GetLastWin32Error()" attrib="150" static="true" returntype="System.Int32">
                <attributes />
                <parameters />
              </method>
              <method name="Prelink(System.Reflection.MethodInfo)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="m" position="0" attrib="0" type="System.Reflection.MethodInfo" />
                </parameters>
              </method>
              <method name="PrelinkAll(System.Type)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="PtrToStringAnsi(System.IntPtr, System.Int32)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="len" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="PtrToStringAnsi(System.IntPtr)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="PtrToStringUni(System.IntPtr, System.Int32)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="len" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="PtrToStringUni(System.IntPtr)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="PtrToStructure(System.IntPtr, System.Type)" attrib="150" static="true" returntype="System.Object">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="structureType" position="1" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="PtrToStructure(System.IntPtr, System.Object)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="structure" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ReadByte(System.IntPtr)" attrib="150" static="true" returntype="System.Byte">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="ReadByte(System.IntPtr, System.Int32)" attrib="150" static="true" returntype="System.Byte">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="ofs" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadInt16(System.IntPtr)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="ReadInt16(System.IntPtr, System.Int32)" attrib="150" static="true" returntype="System.Int16">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="ofs" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadInt32(System.IntPtr)" attrib="150" static="true" returntype="System.Int32">
                <attributes />
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="ReadInt32(System.IntPtr, System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <attributes />
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="ofs" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadInt64(System.IntPtr)" attrib="150" static="true" returntype="System.Int64">
                <attributes />
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="ReadInt64(System.IntPtr, System.Int32)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="ofs" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadIntPtr(System.IntPtr)" attrib="150" static="true" returntype="System.IntPtr">
                <attributes />
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="SizeOf(System.Type)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="t" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="SizeOf(System.Object)" attrib="150" static="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="structure" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="StructureToPtr(System.Object, System.IntPtr, System.Boolean)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="structure" position="0" attrib="0" type="System.Object" />
                  <parameter name="ptr" position="1" attrib="0" type="System.IntPtr" />
                  <parameter name="fDeleteOld" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ThrowExceptionForHR(System.Int32, System.IntPtr)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="errorCode" position="0" attrib="0" type="System.Int32" />
                  <parameter name="errorInfo" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="ThrowExceptionForHR(System.Int32)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="errorCode" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteByte(System.IntPtr, System.Byte)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="val" position="1" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="WriteByte(System.IntPtr, System.Int32, System.Byte)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="ofs" position="1" attrib="0" type="System.Int32" />
                  <parameter name="val" position="2" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="WriteInt16(System.IntPtr, System.Int32, System.Int16)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="ofs" position="1" attrib="0" type="System.Int32" />
                  <parameter name="val" position="2" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="WriteInt16(System.IntPtr, System.Int16)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="val" position="1" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="WriteInt32(System.IntPtr, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="val" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteInt32(System.IntPtr, System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="ofs" position="1" attrib="0" type="System.Int32" />
                  <parameter name="val" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteInt64(System.IntPtr, System.Int32, System.Int64)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="ofs" position="1" attrib="0" type="System.Int32" />
                  <parameter name="val" position="2" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="WriteInt64(System.IntPtr, System.Int64)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="val" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="WriteIntPtr(System.IntPtr, System.IntPtr)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="val" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="MarshalAsAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="ArraySubType" attrib="6" fieldtype="System.Runtime.InteropServices.UnmanagedType" />
              <field name="MarshalCookie" attrib="6" fieldtype="System.String" />
              <field name="MarshalType" attrib="6" fieldtype="System.String">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
              </field>
              <field name="MarshalTypeRef" attrib="6" fieldtype="System.Type">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
              </field>
              <field name="SizeConst" attrib="6" fieldtype="System.Int32" />
              <field name="SizeParamIndex" attrib="6" fieldtype="System.Int16" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Int16)" attrib="6278">
                <parameters>
                  <parameter name="unmanagedType" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Runtime.InteropServices.UnmanagedType)" attrib="6278">
                <parameters>
                  <parameter name="unmanagedType" position="0" attrib="0" type="System.Runtime.InteropServices.UnmanagedType" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Value" attrib="0" ptype="System.Runtime.InteropServices.UnmanagedType" params="">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="System.Runtime.InteropServices.UnmanagedType">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="MarshalDirectiveException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
          </class>
          <class name="OptionalAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="OutAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="PreserveSigAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="SafeHandle" type="class" base="System.Runtime.ConstrainedExecution.CriticalFinalizerObject" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Security.SecurityCriticalAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <fields>
              <field name="handle" attrib="4" fieldtype="System.IntPtr" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.IntPtr, System.Boolean)" attrib="6276">
                <attributes />
                <parameters>
                  <parameter name="invalidHandleValue" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="ownsHandle" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="IsClosed" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsClosed()" attrib="2182" returntype="System.Boolean">
                    <attributes />
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsInvalid" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsInvalid()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <attributes />
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Close()" attrib="134" returntype="System.Void">
                <attributes />
                <parameters />
              </method>
              <method name="DangerousAddRef(System.Boolean&amp;)" attrib="134" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="success" position="0" attrib="0" type="System.Boolean&amp;" direction="ref" />
                </parameters>
              </method>
              <method name="DangerousGetHandle()" attrib="134" returntype="System.IntPtr">
                <attributes />
                <parameters />
              </method>
              <method name="DangerousRelease()" attrib="134" returntype="System.Void">
                <attributes />
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="452" virtual="true" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Dispose()" attrib="486" virtual="true" returntype="System.Void">
                <attributes />
                <parameters />
              </method>
              <method name="Finalize()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ReleaseHandle()" attrib="1476" abstract="true" virtual="true" returntype="System.Boolean">
                <attributes />
                <parameters />
              </method>
              <method name="SetHandle(System.IntPtr)" attrib="132" returntype="System.Void">
                <attributes />
                <parameters>
                  <parameter name="handle" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="SetHandleAsInvalid()" attrib="134" returntype="System.Void">
                <attributes />
                <parameters />
              </method>
            </methods>
          </class>
          <class name="SEHException" type="class" base="System.Runtime.InteropServices.ExternalException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
          </class>
          <class name="StructLayoutAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <fields>
              <field name="CharSet" attrib="6" fieldtype="System.Runtime.InteropServices.CharSet" />
              <field name="Pack" attrib="6" fieldtype="System.Int32" />
              <field name="Size" attrib="6" fieldtype="System.Int32" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Runtime.InteropServices.LayoutKind)" attrib="6278">
                <parameters>
                  <parameter name="layoutKind" position="0" attrib="0" type="System.Runtime.InteropServices.LayoutKind" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Value" attrib="0" ptype="System.Runtime.InteropServices.LayoutKind" params="">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="System.Runtime.InteropServices.LayoutKind">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="UnmanagedFunctionPointerAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="False" />
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Runtime.InteropServices.CallingConvention)" attrib="6278">
                <parameters>
                  <parameter name="callingConvention" position="0" attrib="0" type="System.Runtime.InteropServices.CallingConvention" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="CallingConvention" attrib="0" ptype="System.Runtime.InteropServices.CallingConvention" params="">
                <methods>
                  <method name="get_CallingConvention()" attrib="2182" returntype="System.Runtime.InteropServices.CallingConvention">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="UnmanagedType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="AsAny" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="40" />
              <field name="Bool" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="2" />
              <field name="ByValArray" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="30" />
              <field name="ByValTStr" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="23" />
              <field name="Currency" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="15" />
              <field name="Error" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="45" />
              <field name="FunctionPtr" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="38" />
              <field name="I1" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="3" />
              <field name="I2" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="5" />
              <field name="I4" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="7" />
              <field name="I8" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="9" />
              <field name="IUnknown" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="25" />
              <field name="LPArray" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="42" />
              <field name="LPStr" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="20" />
              <field name="LPStruct" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="43" />
              <field name="LPTStr" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="22" />
              <field name="LPWStr" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="21" />
              <field name="R4" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="11" />
              <field name="R8" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="12" />
              <field name="Struct" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="27" />
              <field name="SysInt" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="31" />
              <field name="SysUInt" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="32" />
              <field name="U1" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="4" />
              <field name="U2" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="6" />
              <field name="U4" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="8" />
              <field name="U8" attrib="32854" fieldtype="System.Runtime.InteropServices.UnmanagedType" value="10" />
            </fields>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Runtime.Serialization">
        <classes>
          <class name="SerializationException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Runtime.Versioning">
        <classes>
          <class name="ResourceExposureAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Diagnostics.ConditionalAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Runtime.Versioning.ResourceScope)" attrib="6278">
                <parameters>
                  <parameter name="exposureLevel" position="0" attrib="0" type="System.Runtime.Versioning.ResourceScope" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="ResourceExposureLevel" attrib="0" ptype="System.Runtime.Versioning.ResourceScope" params="">
                <methods>
                  <method name="get_ResourceExposureLevel()" attrib="2182" returntype="System.Runtime.Versioning.ResourceScope">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="ResourceScope" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <fields>
              <field name="AppDomain" attrib="32854" fieldtype="System.Runtime.Versioning.ResourceScope" value="4" />
              <field name="Assembly" attrib="32854" fieldtype="System.Runtime.Versioning.ResourceScope" value="32" />
              <field name="Library" attrib="32854" fieldtype="System.Runtime.Versioning.ResourceScope" value="8" />
              <field name="Machine" attrib="32854" fieldtype="System.Runtime.Versioning.ResourceScope" value="1" />
              <field name="None" attrib="32854" fieldtype="System.Runtime.Versioning.ResourceScope" value="0" />
              <field name="Private" attrib="32854" fieldtype="System.Runtime.Versioning.ResourceScope" value="16" />
              <field name="Process" attrib="32854" fieldtype="System.Runtime.Versioning.ResourceScope" value="2" />
            </fields>
          </class>
          <class name="VersioningHelper" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="MakeVersionSafeName(System.String, System.Runtime.Versioning.ResourceScope, System.Runtime.Versioning.ResourceScope, System.Type)" attrib="150" static="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="from" position="1" attrib="0" type="System.Runtime.Versioning.ResourceScope" />
                  <parameter name="to" position="2" attrib="0" type="System.Runtime.Versioning.ResourceScope" />
                  <parameter name="type" position="3" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="MakeVersionSafeName(System.String, System.Runtime.Versioning.ResourceScope, System.Runtime.Versioning.ResourceScope)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="from" position="1" attrib="0" type="System.Runtime.Versioning.ResourceScope" />
                  <parameter name="to" position="2" attrib="0" type="System.Runtime.Versioning.ResourceScope" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Security">
        <classes>
          <class name="SecurityCriticalAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="False" />
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="SecurityException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="SecuritySafeCriticalAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="False" />
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="SecurityState" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Security.SecurityCriticalAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="EnsureState()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="IsStateAvailable()" attrib="134" returntype="System.Boolean">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="SecurityTransparentAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="False" />
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="UnverifiableCodeAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="True" />
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="VerificationException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Security.Cryptography">
        <classes>
          <class name="CryptographicException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="inner" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="hr" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.String)" attrib="6278">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="insert" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
          </class>
          <class name="CryptographicUnexpectedOperationException" type="class" base="System.Security.Cryptography.CryptographicException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
          </class>
          <class name="CryptoStream" type="class" base="System.IO.Stream" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.IO.Stream, System.Security.Cryptography.ICryptoTransform, System.Security.Cryptography.CryptoStreamMode)" attrib="6278">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="transform" position="1" attrib="0" type="System.Security.Cryptography.ICryptoTransform" />
                  <parameter name="mode" position="2" attrib="0" type="System.Security.Cryptography.CryptoStreamMode" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="CanRead" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanRead()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanSeek" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanSeek()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanWrite" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanWrite()" attrib="2246" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Length" attrib="0" ptype="System.Int64" params="">
                <methods>
                  <method name="get_Length()" attrib="2246" virtual="true" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Position" attrib="0" ptype="System.Int64" params="">
                <methods>
                  <method name="get_Position()" attrib="2246" virtual="true" returntype="System.Int64">
                    <parameters />
                  </method>
                  <method name="set_Position(System.Int64)" attrib="2246" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int64" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Clear()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Flush()" attrib="198" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="FlushFinalBlock()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="Read(in System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="buffer" position="0" attrib="3" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Seek(System.Int64, System.IO.SeekOrigin)" attrib="198" virtual="true" returntype="System.Int64">
                <parameters>
                  <parameter name="offset" position="0" attrib="0" type="System.Int64" />
                  <parameter name="origin" position="1" attrib="0" type="System.IO.SeekOrigin" />
                </parameters>
              </method>
              <method name="SetLength(System.Int64)" attrib="198" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="Write(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="CryptoStreamMode" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Read" attrib="32854" fieldtype="System.Security.Cryptography.CryptoStreamMode" value="0" />
              <field name="Write" attrib="32854" fieldtype="System.Security.Cryptography.CryptoStreamMode" value="1" />
            </fields>
          </class>
          <class name="DeriveBytes" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="GetBytes(System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="cb" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Reset()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="HashAlgorithm" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.Security.Cryptography.ICryptoTransform" />
              <interface name="System.IDisposable" />
            </interfaces>
            <fields>
              <field name="HashSizeValue" attrib="4" fieldtype="System.Int32" />
              <field name="HashValue" attrib="5" fieldtype="System.Byte[]" />
              <field name="State" attrib="4" fieldtype="System.Int32" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="CanReuseTransform" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanReuseTransform()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanTransformMultipleBlocks" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanTransformMultipleBlocks()" attrib="2502" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Hash" attrib="0" ptype="System.Byte[]" params="">
                <methods>
                  <method name="get_Hash()" attrib="2502" virtual="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="HashSize" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_HashSize()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="InputBlockSize" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_InputBlockSize()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OutputBlockSize" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_OutputBlockSize()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Clear()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="ComputeHash(System.Byte[], System.Int32, System.Int32)" attrib="134" returntype="System.Byte[]">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ComputeHash(System.IO.Stream)" attrib="134" returntype="System.Byte[]">
                <parameters>
                  <parameter name="inputStream" position="0" attrib="0" type="System.IO.Stream" />
                </parameters>
              </method>
              <method name="ComputeHash(System.Byte[])" attrib="134" returntype="System.Byte[]">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Dispose(System.Boolean)" attrib="452" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="HashCore(System.Byte[], System.Int32, System.Int32)" attrib="1476" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="ibStart" position="1" attrib="0" type="System.Int32" />
                  <parameter name="cbSize" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="HashFinal()" attrib="1476" abstract="true" virtual="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="Initialize()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="TransformBlock(System.Byte[], System.Int32, System.Int32, System.Byte[], System.Int32)" attrib="486" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="inputBuffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="inputOffset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="inputCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="outputBuffer" position="3" attrib="0" type="System.Byte[]" />
                  <parameter name="outputOffset" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="TransformFinalBlock(System.Byte[], System.Int32, System.Int32)" attrib="486" virtual="true" returntype="System.Byte[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="inputBuffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="inputOffset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="inputCount" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="HMAC" type="class" base="System.Security.Cryptography.KeyedHashAlgorithm" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="BlockSizeValue" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_BlockSizeValue()" attrib="2180" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_BlockSizeValue(System.Int32)" attrib="2180" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="HashName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_HashName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Key" attrib="0" ptype="System.Byte[]" params="">
                <methods>
                  <method name="get_Key()" attrib="2246" virtual="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_Key(System.Byte[])" attrib="2246" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="HashCore(System.Byte[], System.Int32, System.Int32)" attrib="196" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="rgb" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="ib" position="1" attrib="0" type="System.Int32" />
                  <parameter name="cb" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="HashFinal()" attrib="196" virtual="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="Initialize()" attrib="198" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="HMACSHA1" type="class" base="System.Security.Cryptography.HMAC" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="HMACSHA256" type="class" base="System.Security.Cryptography.HMAC" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="ICryptoTransform" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <properties>
              <property name="CanReuseTransform" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanReuseTransform()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanTransformMultipleBlocks" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_CanTransformMultipleBlocks()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="InputBlockSize" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_InputBlockSize()" attrib="3526" abstract="true" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OutputBlockSize" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_OutputBlockSize()" attrib="3526" abstract="true" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="TransformBlock(System.Byte[], System.Int32, System.Int32, System.Byte[], System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="inputBuffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="inputOffset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="inputCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="outputBuffer" position="3" attrib="0" type="System.Byte[]" />
                  <parameter name="outputOffset" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="TransformFinalBlock(System.Byte[], System.Int32, System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="inputBuffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="inputOffset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="inputCount" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="KeyedHashAlgorithm" type="class" base="System.Security.Cryptography.HashAlgorithm" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="KeyValue" attrib="4" fieldtype="System.Byte[]" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Key" attrib="0" ptype="System.Byte[]" params="">
                <methods>
                  <method name="get_Key()" attrib="2502" virtual="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_Key(System.Byte[])" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="KeySizes" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Int32, System.Int32, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="minSize" position="0" attrib="0" type="System.Int32" />
                  <parameter name="maxSize" position="1" attrib="0" type="System.Int32" />
                  <parameter name="skipSize" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="MaxSize" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_MaxSize()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MinSize" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_MinSize()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SkipSize" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_SkipSize()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="RandomNumberGenerator" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="GetBytes(System.Byte[])" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Rfc2898DeriveBytes" type="class" base="System.Security.Cryptography.DeriveBytes" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Byte[], System.Byte[], System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="password" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="salt" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="iterations" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Byte[], System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="password" position="0" attrib="0" type="System.String" />
                  <parameter name="salt" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="iterations" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="password" position="0" attrib="0" type="System.String" />
                  <parameter name="salt" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="IterationCount" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_IterationCount()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_IterationCount(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Salt" attrib="0" ptype="System.Byte[]" params="">
                <methods>
                  <method name="get_Salt()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_Salt(System.Byte[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetBytes(System.Int32)" attrib="198" virtual="true" returntype="System.Byte[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="cb" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Reset()" attrib="198" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="RNGCryptoServiceProvider" type="class" base="System.Security.Cryptography.RandomNumberGenerator" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="GetBytes(System.Byte[])" attrib="198" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SHA1" type="class" base="System.Security.Cryptography.HashAlgorithm" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="SHA1Managed" type="class" base="System.Security.Cryptography.SHA1" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="HashCore(System.Byte[], System.Int32, System.Int32)" attrib="196" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="rgb" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="ibStart" position="1" attrib="0" type="System.Int32" />
                  <parameter name="cbSize" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="HashFinal()" attrib="196" virtual="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="Initialize()" attrib="198" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="SHA256" type="class" base="System.Security.Cryptography.HashAlgorithm" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="SHA256Managed" type="class" base="System.Security.Cryptography.SHA256" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="HashCore(System.Byte[], System.Int32, System.Int32)" attrib="196" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="rgb" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="ibStart" position="1" attrib="0" type="System.Int32" />
                  <parameter name="cbSize" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="HashFinal()" attrib="196" virtual="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="Initialize()" attrib="198" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="SymmetricAlgorithm" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <fields>
              <field name="BlockSizeValue" attrib="4" fieldtype="System.Int32" />
              <field name="IVValue" attrib="4" fieldtype="System.Byte[]" />
              <field name="KeySizeValue" attrib="4" fieldtype="System.Int32" />
              <field name="KeyValue" attrib="4" fieldtype="System.Byte[]" />
              <field name="LegalBlockSizesValue" attrib="4" fieldtype="System.Security.Cryptography.KeySizes[]" />
              <field name="LegalKeySizesValue" attrib="4" fieldtype="System.Security.Cryptography.KeySizes[]" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="BlockSize" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_BlockSize()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_BlockSize(System.Int32)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IV" attrib="0" ptype="System.Byte[]" params="">
                <methods>
                  <method name="get_IV()" attrib="2502" virtual="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_IV(System.Byte[])" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Key" attrib="0" ptype="System.Byte[]" params="">
                <methods>
                  <method name="get_Key()" attrib="2502" virtual="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_Key(System.Byte[])" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="KeySize" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_KeySize()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_KeySize(System.Int32)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="LegalBlockSizes" attrib="0" ptype="System.Security.Cryptography.KeySizes[]" params="">
                <methods>
                  <method name="get_LegalBlockSizes()" attrib="2502" virtual="true" returntype="System.Security.Cryptography.KeySizes[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LegalKeySizes" attrib="0" ptype="System.Security.Cryptography.KeySizes[]" params="">
                <methods>
                  <method name="get_LegalKeySizes()" attrib="2502" virtual="true" returntype="System.Security.Cryptography.KeySizes[]">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Clear()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="CreateDecryptor()" attrib="454" virtual="true" returntype="System.Security.Cryptography.ICryptoTransform">
                <parameters />
              </method>
              <method name="CreateDecryptor(System.Byte[], System.Byte[])" attrib="1478" abstract="true" virtual="true" returntype="System.Security.Cryptography.ICryptoTransform">
                <parameters>
                  <parameter name="rgbKey" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="rgbIV" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="CreateEncryptor(System.Byte[], System.Byte[])" attrib="1478" abstract="true" virtual="true" returntype="System.Security.Cryptography.ICryptoTransform">
                <parameters>
                  <parameter name="rgbKey" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="rgbIV" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="CreateEncryptor()" attrib="454" virtual="true" returntype="System.Security.Cryptography.ICryptoTransform">
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="452" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GenerateIV()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="GenerateKey()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ValidKeySize(System.Int32)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="bitLength" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Security.Cryptography.X509Certificates">
        <classes>
          <class name="X509Certificate" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.String, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="fileName" position="0" attrib="0" type="System.String" />
                  <parameter name="password" position="1" attrib="0" type="System.String" />
                  <parameter name="keyStorageFlags" position="2" attrib="0" type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.String)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="fileName" position="0" attrib="0" type="System.String" />
                  <parameter name="password" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Security.Cryptography.X509Certificates.X509Certificate)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="cert" position="0" attrib="0" type="System.Security.Cryptography.X509Certificates.X509Certificate" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IntPtr)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="handle" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="fileName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Byte[], System.String, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" attrib="6278">
                <parameters>
                  <parameter name="rawData" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="password" position="1" attrib="0" type="System.String" />
                  <parameter name="keyStorageFlags" position="2" attrib="0" type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte[], System.String)" attrib="6278">
                <parameters>
                  <parameter name="rawData" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="password" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Handle" attrib="0" ptype="System.IntPtr" params="">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <methods>
                  <method name="get_Handle()" attrib="2182" returntype="System.IntPtr">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Issuer" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Issuer()" attrib="2182" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Subject" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Subject()" attrib="2182" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateFromCertFile(System.String)" attrib="150" static="true" returntype="System.Security.Cryptography.X509Certificates.X509Certificate">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Equals(System.Security.Cryptography.X509Certificates.X509Certificate)" attrib="454" virtual="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="other" position="0" attrib="0" type="System.Security.Cryptography.X509Certificates.X509Certificate" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Export(System.Security.Cryptography.X509Certificates.X509ContentType, System.String)" attrib="454" virtual="true" returntype="System.Byte[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="contentType" position="0" attrib="0" type="System.Security.Cryptography.X509Certificates.X509ContentType" />
                  <parameter name="password" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Export(System.Security.Cryptography.X509Certificates.X509ContentType)" attrib="454" virtual="true" returntype="System.Byte[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="contentType" position="0" attrib="0" type="System.Security.Cryptography.X509Certificates.X509ContentType" />
                </parameters>
              </method>
              <method name="GetCertHash()" attrib="454" virtual="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="GetCertHashString()" attrib="454" virtual="true" returntype="System.String">
                <parameters />
              </method>
              <method name="GetEffectiveDateString()" attrib="454" virtual="true" returntype="System.String">
                <parameters />
              </method>
              <method name="GetExpirationDateString()" attrib="454" virtual="true" returntype="System.String">
                <parameters />
              </method>
              <method name="GetFormat()" attrib="454" virtual="true" returntype="System.String">
                <parameters />
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetKeyAlgorithm()" attrib="454" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetKeyAlgorithmParameters()" attrib="454" virtual="true" returntype="System.Byte[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetKeyAlgorithmParametersString()" attrib="454" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetPublicKey()" attrib="454" virtual="true" returntype="System.Byte[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetPublicKeyString()" attrib="454" virtual="true" returntype="System.String">
                <parameters />
              </method>
              <method name="GetRawCertData()" attrib="454" virtual="true" returntype="System.Byte[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetRawCertDataString()" attrib="454" virtual="true" returntype="System.String">
                <parameters />
              </method>
              <method name="GetSerialNumber()" attrib="454" virtual="true" returntype="System.Byte[]">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetSerialNumberString()" attrib="454" virtual="true" returntype="System.String">
                <parameters />
              </method>
              <method name="Import(System.String)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="fileName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Import(System.String, System.String, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="fileName" position="0" attrib="0" type="System.String" />
                  <parameter name="password" position="1" attrib="0" type="System.String" />
                  <parameter name="keyStorageFlags" position="2" attrib="0" type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
                </parameters>
              </method>
              <method name="Import(System.Byte[])" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="rawData" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Import(System.Byte[], System.String, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="rawData" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="password" position="1" attrib="0" type="System.String" />
                  <parameter name="keyStorageFlags" position="2" attrib="0" type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ToString(System.Boolean)" attrib="454" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="fVerbose" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="X509ContentType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Cert" attrib="32854" fieldtype="System.Security.Cryptography.X509Certificates.X509ContentType" value="1" />
              <field name="Unknown" attrib="32854" fieldtype="System.Security.Cryptography.X509Certificates.X509ContentType" value="0" />
            </fields>
          </class>
          <class name="X509KeyStorageFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.FlagsAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="DefaultKeySet" attrib="32854" fieldtype="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" value="0" />
            </fields>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Security.Permissions">
        <classes>
          <class name="CodeAccessSecurityAttribute" type="class" base="System.Security.Permissions.SecurityAttribute" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.ObsoleteAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="True" />
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Security.Permissions.SecurityAction)" attrib="6276">
                <parameters>
                  <parameter name="action" position="0" attrib="0" type="System.Security.Permissions.SecurityAction" />
                </parameters>
              </constructor>
            </constructors>
          </class>
          <class name="SecurityAction" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.ObsoleteAttribute" />
            </attributes>
            <fields>
              <field name="Assert" attrib="32854" fieldtype="System.Security.Permissions.SecurityAction" value="3" />
              <field name="Demand" attrib="32854" fieldtype="System.Security.Permissions.SecurityAction" value="2" />
              <field name="Deny" attrib="32854" fieldtype="System.Security.Permissions.SecurityAction" value="4" />
              <field name="InheritanceDemand" attrib="32854" fieldtype="System.Security.Permissions.SecurityAction" value="7" />
              <field name="LinkDemand" attrib="32854" fieldtype="System.Security.Permissions.SecurityAction" value="6" />
              <field name="PermitOnly" attrib="32854" fieldtype="System.Security.Permissions.SecurityAction" value="5" />
              <field name="RequestMinimum" attrib="32854" fieldtype="System.Security.Permissions.SecurityAction" value="8" />
              <field name="RequestOptional" attrib="32854" fieldtype="System.Security.Permissions.SecurityAction" value="9" />
              <field name="RequestRefuse" attrib="32854" fieldtype="System.Security.Permissions.SecurityAction" value="10" />
            </fields>
          </class>
          <class name="SecurityAttribute" type="class" base="System.Attribute" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.ObsoleteAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="True" />
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Security.Permissions.SecurityAction)" attrib="6276">
                <parameters>
                  <parameter name="action" position="0" attrib="0" type="System.Security.Permissions.SecurityAction" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Action" attrib="0" ptype="System.Security.Permissions.SecurityAction" params="">
                <methods>
                  <method name="get_Action()" attrib="2182" returntype="System.Security.Permissions.SecurityAction">
                    <parameters />
                  </method>
                  <method name="set_Action(System.Security.Permissions.SecurityAction)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Security.Permissions.SecurityAction" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Unrestricted" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_Unrestricted()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_Unrestricted(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="SecurityPermissionAttribute" type="class" base="System.Security.Permissions.CodeAccessSecurityAttribute" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.ObsoleteAttribute" />
              <attribute name="System.AttributeUsageAttribute">
                <properties>
                  <property name="AllowMultiple" value="True" />
                  <property name="Inherited" value="False" />
                </properties>
              </attribute>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Security.Permissions.SecurityAction)" attrib="6278">
                <parameters>
                  <parameter name="action" position="0" attrib="0" type="System.Security.Permissions.SecurityAction" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="ControlAppDomain" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_ControlAppDomain()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_ControlAppDomain(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ControlDomainPolicy" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_ControlDomainPolicy()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_ControlDomainPolicy(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ControlEvidence" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_ControlEvidence()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_ControlEvidence(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ControlPolicy" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_ControlPolicy()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_ControlPolicy(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ControlThread" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_ControlThread()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_ControlThread(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Flags" attrib="0" ptype="System.Security.Permissions.SecurityPermissionFlag" params="">
                <methods>
                  <method name="get_Flags()" attrib="2182" returntype="System.Security.Permissions.SecurityPermissionFlag">
                    <parameters />
                  </method>
                  <method name="set_Flags(System.Security.Permissions.SecurityPermissionFlag)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Security.Permissions.SecurityPermissionFlag" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SkipVerification" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_SkipVerification()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_SkipVerification(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="UnmanagedCode" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_UnmanagedCode()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_UnmanagedCode(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="SecurityPermissionFlag" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.ObsoleteAttribute" />
              <attribute name="System.FlagsAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="AllFlags" attrib="32854" fieldtype="System.Security.Permissions.SecurityPermissionFlag" value="16383" />
              <field name="Assertion" attrib="32854" fieldtype="System.Security.Permissions.SecurityPermissionFlag" value="1" />
              <field name="BindingRedirects" attrib="32854" fieldtype="System.Security.Permissions.SecurityPermissionFlag" value="8192" />
              <field name="ControlAppDomain" attrib="32854" fieldtype="System.Security.Permissions.SecurityPermissionFlag" value="1024" />
              <field name="ControlDomainPolicy" attrib="32854" fieldtype="System.Security.Permissions.SecurityPermissionFlag" value="256" />
              <field name="ControlEvidence" attrib="32854" fieldtype="System.Security.Permissions.SecurityPermissionFlag" value="32" />
              <field name="ControlPolicy" attrib="32854" fieldtype="System.Security.Permissions.SecurityPermissionFlag" value="64" />
              <field name="ControlPrincipal" attrib="32854" fieldtype="System.Security.Permissions.SecurityPermissionFlag" value="512" />
              <field name="ControlThread" attrib="32854" fieldtype="System.Security.Permissions.SecurityPermissionFlag" value="16" />
              <field name="Execution" attrib="32854" fieldtype="System.Security.Permissions.SecurityPermissionFlag" value="8" />
              <field name="Infrastructure" attrib="32854" fieldtype="System.Security.Permissions.SecurityPermissionFlag" value="4096" />
              <field name="NoFlags" attrib="32854" fieldtype="System.Security.Permissions.SecurityPermissionFlag" value="0" />
              <field name="RemotingConfiguration" attrib="32854" fieldtype="System.Security.Permissions.SecurityPermissionFlag" value="2048" />
              <field name="SerializationFormatter" attrib="32854" fieldtype="System.Security.Permissions.SecurityPermissionFlag" value="128" />
              <field name="SkipVerification" attrib="32854" fieldtype="System.Security.Permissions.SecurityPermissionFlag" value="4" />
              <field name="UnmanagedCode" attrib="32854" fieldtype="System.Security.Permissions.SecurityPermissionFlag" value="2" />
            </fields>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Security.Principal">
        <classes>
          <class name="IIdentity" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <properties>
              <property name="AuthenticationType" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_AuthenticationType()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsAuthenticated" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsAuthenticated()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="IPrincipal" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <properties>
              <property name="Identity" attrib="0" ptype="System.Security.Principal.IIdentity" params="">
                <methods>
                  <method name="get_Identity()" attrib="3526" abstract="true" virtual="true" returntype="System.Security.Principal.IIdentity">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="IsInRole(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="role" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Text">
        <classes>
          <class name="Decoder" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Convert(System.Byte[], System.Int32, System.Int32, System.Char[], System.Int32, System.Int32, System.Boolean, out System.Int32&amp;, out System.Int32&amp;, out System.Boolean&amp;)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="bytes" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="byteIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="byteCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="chars" position="3" attrib="0" type="System.Char[]" />
                  <parameter name="charIndex" position="4" attrib="0" type="System.Int32" />
                  <parameter name="charCount" position="5" attrib="0" type="System.Int32" />
                  <parameter name="flush" position="6" attrib="0" type="System.Boolean" />
                  <parameter name="bytesUsed" position="7" attrib="2" type="System.Int32&amp;" direction="out" />
                  <parameter name="charsUsed" position="8" attrib="2" type="System.Int32&amp;" direction="out" />
                  <parameter name="completed" position="9" attrib="2" type="System.Boolean&amp;" direction="out" />
                </parameters>
              </method>
              <method name="Convert(System.Byte*, System.Int32, System.Char*, System.Int32, System.Boolean, out System.Int32&amp;, out System.Int32&amp;, out System.Boolean&amp;)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="bytes" position="0" attrib="0" type="System.Byte*" />
                  <parameter name="byteCount" position="1" attrib="0" type="System.Int32" />
                  <parameter name="chars" position="2" attrib="0" type="System.Char*" />
                  <parameter name="charCount" position="3" attrib="0" type="System.Int32" />
                  <parameter name="flush" position="4" attrib="0" type="System.Boolean" />
                  <parameter name="bytesUsed" position="5" attrib="2" type="System.Int32&amp;" direction="out" />
                  <parameter name="charsUsed" position="6" attrib="2" type="System.Int32&amp;" direction="out" />
                  <parameter name="completed" position="7" attrib="2" type="System.Boolean&amp;" direction="out" />
                </parameters>
              </method>
              <method name="GetCharCount(System.Byte*, System.Int32, System.Boolean)" attrib="454" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                  <attribute name="System.CLSCompliantAttribute" />
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="bytes" position="0" attrib="0" type="System.Byte*" />
                  <parameter name="count" position="1" attrib="0" type="System.Int32" />
                  <parameter name="flush" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetCharCount(System.Byte[], System.Int32, System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="bytes" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetCharCount(System.Byte[], System.Int32, System.Int32, System.Boolean)" attrib="454" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="bytes" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                  <parameter name="flush" position="3" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetChars(System.Byte*, System.Int32, System.Char*, System.Int32, System.Boolean)" attrib="454" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="bytes" position="0" attrib="0" type="System.Byte*" />
                  <parameter name="byteCount" position="1" attrib="0" type="System.Int32" />
                  <parameter name="chars" position="2" attrib="0" type="System.Char*" />
                  <parameter name="charCount" position="3" attrib="0" type="System.Int32" />
                  <parameter name="flush" position="4" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetChars(System.Byte[], System.Int32, System.Int32, System.Char[], System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="bytes" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="byteIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="byteCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="chars" position="3" attrib="0" type="System.Char[]" />
                  <parameter name="charIndex" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetChars(System.Byte[], System.Int32, System.Int32, System.Char[], System.Int32, System.Boolean)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="bytes" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="byteIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="byteCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="chars" position="3" attrib="0" type="System.Char[]" />
                  <parameter name="charIndex" position="4" attrib="0" type="System.Int32" />
                  <parameter name="flush" position="5" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Reset()" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters />
              </method>
            </methods>
          </class>
          <class name="DecoderFallbackException" type="class" base="System.ArgumentException" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Byte[], System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="bytesUnknown" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="BytesUnknown" attrib="0" ptype="System.Byte[]" params="">
                <methods>
                  <method name="get_BytesUnknown()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Index" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Index()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="Encoder" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Convert(System.Char*, System.Int32, System.Byte*, System.Int32, System.Boolean, out System.Int32&amp;, out System.Int32&amp;, out System.Boolean&amp;)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.Char*" />
                  <parameter name="charCount" position="1" attrib="0" type="System.Int32" />
                  <parameter name="bytes" position="2" attrib="0" type="System.Byte*" />
                  <parameter name="byteCount" position="3" attrib="0" type="System.Int32" />
                  <parameter name="flush" position="4" attrib="0" type="System.Boolean" />
                  <parameter name="charsUsed" position="5" attrib="2" type="System.Int32&amp;" direction="out" />
                  <parameter name="bytesUsed" position="6" attrib="2" type="System.Int32&amp;" direction="out" />
                  <parameter name="completed" position="7" attrib="2" type="System.Boolean&amp;" direction="out" />
                </parameters>
              </method>
              <method name="Convert(System.Char[], System.Int32, System.Int32, System.Byte[], System.Int32, System.Int32, System.Boolean, out System.Int32&amp;, out System.Int32&amp;, out System.Boolean&amp;)" attrib="454" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="charIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="charCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="bytes" position="3" attrib="0" type="System.Byte[]" />
                  <parameter name="byteIndex" position="4" attrib="0" type="System.Int32" />
                  <parameter name="byteCount" position="5" attrib="0" type="System.Int32" />
                  <parameter name="flush" position="6" attrib="0" type="System.Boolean" />
                  <parameter name="charsUsed" position="7" attrib="2" type="System.Int32&amp;" direction="out" />
                  <parameter name="bytesUsed" position="8" attrib="2" type="System.Int32&amp;" direction="out" />
                  <parameter name="completed" position="9" attrib="2" type="System.Boolean&amp;" direction="out" />
                </parameters>
              </method>
              <method name="GetByteCount(System.Char[], System.Int32, System.Int32, System.Boolean)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                  <parameter name="flush" position="3" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetByteCount(System.Char*, System.Int32, System.Boolean)" attrib="454" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.Char*" />
                  <parameter name="count" position="1" attrib="0" type="System.Int32" />
                  <parameter name="flush" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetBytes(System.Char[], System.Int32, System.Int32, System.Byte[], System.Int32, System.Boolean)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="charIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="charCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="bytes" position="3" attrib="0" type="System.Byte[]" />
                  <parameter name="byteIndex" position="4" attrib="0" type="System.Int32" />
                  <parameter name="flush" position="5" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetBytes(System.Char*, System.Int32, System.Byte*, System.Int32, System.Boolean)" attrib="454" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.Char*" />
                  <parameter name="charCount" position="1" attrib="0" type="System.Int32" />
                  <parameter name="bytes" position="2" attrib="0" type="System.Byte*" />
                  <parameter name="byteCount" position="3" attrib="0" type="System.Int32" />
                  <parameter name="flush" position="4" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="EncoderFallbackException" type="class" base="System.ArgumentException" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="CharUnknown" attrib="0" ptype="System.Char" params="">
                <methods>
                  <method name="get_CharUnknown()" attrib="2182" returntype="System.Char">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CharUnknownHigh" attrib="0" ptype="System.Char" params="">
                <methods>
                  <method name="get_CharUnknownHigh()" attrib="2182" returntype="System.Char">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CharUnknownLow" attrib="0" ptype="System.Char" params="">
                <methods>
                  <method name="get_CharUnknownLow()" attrib="2182" returntype="System.Char">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Index" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Index()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="Encoding" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces />
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="BigEndianUnicode" attrib="0" ptype="System.Text.Encoding" params="">
                <methods>
                  <method name="get_BigEndianUnicode()" attrib="2198" static="true" returntype="System.Text.Encoding">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Unicode" attrib="0" ptype="System.Text.Encoding" params="">
                <methods>
                  <method name="get_Unicode()" attrib="2198" static="true" returntype="System.Text.Encoding">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UTF8" attrib="0" ptype="System.Text.Encoding" params="">
                <methods>
                  <method name="get_UTF8()" attrib="2198" static="true" returntype="System.Text.Encoding">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="WebName" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_WebName()" attrib="2502" virtual="true" returntype="System.String">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Clone()" attrib="454" virtual="true" returntype="System.Object">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="Convert(System.Text.Encoding, System.Text.Encoding, System.Byte[])" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="srcEncoding" position="0" attrib="0" type="System.Text.Encoding" />
                  <parameter name="dstEncoding" position="1" attrib="0" type="System.Text.Encoding" />
                  <parameter name="bytes" position="2" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Convert(System.Text.Encoding, System.Text.Encoding, System.Byte[], System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="srcEncoding" position="0" attrib="0" type="System.Text.Encoding" />
                  <parameter name="dstEncoding" position="1" attrib="0" type="System.Text.Encoding" />
                  <parameter name="bytes" position="2" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="3" attrib="0" type="System.Int32" />
                  <parameter name="count" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetByteCount(System.String)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetByteCount(System.Char[], System.Int32, System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetByteCount(System.Char[])" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.Char[]" />
                </parameters>
              </method>
              <method name="GetBytes(System.String)" attrib="454" virtual="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetBytes(System.String, System.Int32, System.Int32, System.Byte[], System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="charIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="charCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="bytes" position="3" attrib="0" type="System.Byte[]" />
                  <parameter name="byteIndex" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetBytes(System.Char*, System.Int32, System.Byte*, System.Int32)" attrib="454" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.Char*" />
                  <parameter name="charCount" position="1" attrib="0" type="System.Int32" />
                  <parameter name="bytes" position="2" attrib="0" type="System.Byte*" />
                  <parameter name="byteCount" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetBytes(System.Char[], System.Int32, System.Int32, System.Byte[], System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="charIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="charCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="bytes" position="3" attrib="0" type="System.Byte[]" />
                  <parameter name="byteIndex" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetBytes(System.Char[])" attrib="454" virtual="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.Char[]" />
                </parameters>
              </method>
              <method name="GetBytes(System.Char[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetCharCount(System.Byte[])" attrib="454" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="bytes" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="GetCharCount(System.Byte[], System.Int32, System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="bytes" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetChars(System.Byte[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.Char[]">
                <parameters>
                  <parameter name="bytes" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetChars(System.Byte[], System.Int32, System.Int32, System.Char[], System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="bytes" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="byteIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="byteCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="chars" position="3" attrib="0" type="System.Char[]" />
                  <parameter name="charIndex" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetChars(System.Byte[])" attrib="454" virtual="true" returntype="System.Char[]">
                <parameters>
                  <parameter name="bytes" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="GetDecoder()" attrib="454" virtual="true" returntype="System.Text.Decoder">
                <parameters />
              </method>
              <method name="GetEncoder()" attrib="454" virtual="true" returntype="System.Text.Encoder">
                <parameters />
              </method>
              <method name="GetEncoding(System.String)" attrib="150" static="true" returntype="System.Text.Encoding">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetMaxByteCount(System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="charCount" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetMaxCharCount(System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="byteCount" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetPreamble()" attrib="454" virtual="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="GetString(System.Byte[], System.Int32, System.Int32)" attrib="454" virtual="true" returntype="System.String">
                <parameters>
                  <parameter name="bytes" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="StringBuilder" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
              <attribute name="System.Reflection.DefaultMemberAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="capacity" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String, System.Int32, System.Int32, System.Int32)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="length" position="2" attrib="0" type="System.Int32" />
                  <parameter name="capacity" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32, System.Int32)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="capacity" position="0" attrib="0" type="System.Int32" />
                  <parameter name="maxCapacity" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="capacity" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Capacity" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Capacity()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_Capacity(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Chars" attrib="0" ptype="System.Char" params="System.Int32">
                <methods>
                  <method name="get_Chars(System.Int32)" attrib="2182" returntype="System.Char">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="set_Chars(System.Int32, System.Char)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                      <parameter name="value" position="1" attrib="0" type="System.Char" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Length" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Length()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_Length(System.Int32)" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Append(System.Int32)" attrib="134" returntype="System.Text.StringBuilder">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Append(System.Int64)" attrib="134" returntype="System.Text.StringBuilder">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="Append(System.Single)" attrib="134" returntype="System.Text.StringBuilder">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Single" />
                </parameters>
              </method>
              <method name="Append(System.Byte)" attrib="134" returntype="System.Text.StringBuilder">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="Append(System.Char)" attrib="134" returntype="System.Text.StringBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="Append(System.Int16)" attrib="134" returntype="System.Text.StringBuilder">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="Append(System.UInt64)" attrib="134" returntype="System.Text.StringBuilder">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="Append(System.Object)" attrib="134" returntype="System.Text.StringBuilder">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Append(System.Char[])" attrib="134" returntype="System.Text.StringBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char[]" />
                </parameters>
              </method>
              <method name="Append(System.Double)" attrib="134" returntype="System.Text.StringBuilder">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Append(System.UInt16)" attrib="134" returntype="System.Text.StringBuilder">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </method>
              <method name="Append(System.UInt32)" attrib="134" returntype="System.Text.StringBuilder">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="Append(System.SByte)" attrib="134" returntype="System.Text.StringBuilder">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.SByte" />
                </parameters>
              </method>
              <method name="Append(System.String)" attrib="134" returntype="System.Text.StringBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Append(System.String, System.Int32, System.Int32)" attrib="134" returntype="System.Text.StringBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Append(System.Char, System.Int32)" attrib="134" returntype="System.Text.StringBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char" />
                  <parameter name="repeatCount" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Append(System.Char[], System.Int32, System.Int32)" attrib="134" returntype="System.Text.StringBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="startIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="charCount" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Append(System.Boolean)" attrib="134" returntype="System.Text.StringBuilder">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="AppendFormat(System.IFormatProvider, System.String, System.Object[])" attrib="134" returntype="System.Text.StringBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.IFormatProvider" />
                  <parameter name="format" position="1" attrib="0" type="System.String" />
                  <parameter name="args" position="2" attrib="0" type="System.Object[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="AppendFormat(System.String, System.Object[])" attrib="134" returntype="System.Text.StringBuilder">
                <parameters>
                  <parameter name="format" position="0" attrib="0" type="System.String" />
                  <parameter name="args" position="1" attrib="0" type="System.Object[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="AppendLine()" attrib="134" returntype="System.Text.StringBuilder">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="AppendLine(System.String)" attrib="134" returntype="System.Text.StringBuilder">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="EnsureCapacity(System.Int32)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="capacity" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Equals(System.Text.StringBuilder)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="sb" position="0" attrib="0" type="System.Text.StringBuilder" />
                </parameters>
              </method>
              <method name="Insert(System.Int32, System.Char[], System.Int32, System.Int32)" attrib="134" returntype="System.Text.StringBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="value" position="1" attrib="0" type="System.Char[]" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="charCount" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Insert(System.Int32, System.String, System.Int32)" attrib="134" returntype="System.Text.StringBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="value" position="1" attrib="0" type="System.String" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Insert(System.Int32, System.Char[])" attrib="134" returntype="System.Text.StringBuilder">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="value" position="1" attrib="0" type="System.Char[]" />
                </parameters>
              </method>
              <method name="Insert(System.Int32, System.String)" attrib="134" returntype="System.Text.StringBuilder">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="value" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Remove(System.Int32, System.Int32)" attrib="134" returntype="System.Text.StringBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="startIndex" position="0" attrib="0" type="System.Int32" />
                  <parameter name="length" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Replace(System.String, System.String, System.Int32, System.Int32)" attrib="134" returntype="System.Text.StringBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="oldValue" position="0" attrib="0" type="System.String" />
                  <parameter name="newValue" position="1" attrib="0" type="System.String" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="count" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Replace(System.String, System.String)" attrib="134" returntype="System.Text.StringBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="oldValue" position="0" attrib="0" type="System.String" />
                  <parameter name="newValue" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Replace(System.Char, System.Char, System.Int32, System.Int32)" attrib="134" returntype="System.Text.StringBuilder">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="oldChar" position="0" attrib="0" type="System.Char" />
                  <parameter name="newChar" position="1" attrib="0" type="System.Char" />
                  <parameter name="startIndex" position="2" attrib="0" type="System.Int32" />
                  <parameter name="count" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Replace(System.Char, System.Char)" attrib="134" returntype="System.Text.StringBuilder">
                <parameters>
                  <parameter name="oldChar" position="0" attrib="0" type="System.Char" />
                  <parameter name="newChar" position="1" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="ToString(System.Int32, System.Int32)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="startIndex" position="0" attrib="0" type="System.Int32" />
                  <parameter name="length" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
            </methods>
          </class>
          <class name="UnicodeEncoding" type="class" base="System.Text.Encoding" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Boolean, System.Boolean, System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="bigEndian" position="0" attrib="0" type="System.Boolean" />
                  <parameter name="byteOrderMark" position="1" attrib="0" type="System.Boolean" />
                  <parameter name="throwOnInvalidBytes" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Boolean, System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="bigEndian" position="0" attrib="0" type="System.Boolean" />
                  <parameter name="byteOrderMark" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetByteCount(System.String)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetByteCount(System.Char[], System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetBytes(System.Char*, System.Int32, System.Byte*, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                  <attribute name="System.CLSCompliantAttribute" />
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.Char*" />
                  <parameter name="charCount" position="1" attrib="0" type="System.Int32" />
                  <parameter name="bytes" position="2" attrib="0" type="System.Byte*" />
                  <parameter name="byteCount" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetBytes(System.String, System.Int32, System.Int32, System.Byte[], System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="charIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="charCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="bytes" position="3" attrib="0" type="System.Byte[]" />
                  <parameter name="byteIndex" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetBytes(System.Char[], System.Int32, System.Int32, System.Byte[], System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="charIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="charCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="bytes" position="3" attrib="0" type="System.Byte[]" />
                  <parameter name="byteIndex" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetCharCount(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="bytes" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetChars(System.Byte[], System.Int32, System.Int32, System.Char[], System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="bytes" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="byteIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="byteCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="chars" position="3" attrib="0" type="System.Char[]" />
                  <parameter name="charIndex" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDecoder()" attrib="198" virtual="true" returntype="System.Text.Decoder">
                <parameters />
              </method>
              <method name="GetEncoder()" attrib="198" virtual="true" returntype="System.Text.Encoder">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetMaxByteCount(System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="charCount" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetMaxCharCount(System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="byteCount" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetPreamble()" attrib="198" virtual="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="GetString(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="bytes" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="UTF8Encoding" type="class" base="System.Text.Encoding" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Boolean, System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="encoderShouldEmitUTF8Identifier" position="0" attrib="0" type="System.Boolean" />
                  <parameter name="throwOnInvalidBytes" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="encoderShouldEmitUTF8Identifier" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Equals(System.Object)" attrib="198" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetByteCount(System.String)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetByteCount(System.Char[], System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetBytes(System.Char*, System.Int32, System.Byte*, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.Char*" />
                  <parameter name="charCount" position="1" attrib="0" type="System.Int32" />
                  <parameter name="bytes" position="2" attrib="0" type="System.Byte*" />
                  <parameter name="byteCount" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetBytes(System.String, System.Int32, System.Int32, System.Byte[], System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                  <parameter name="charIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="charCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="bytes" position="3" attrib="0" type="System.Byte[]" />
                  <parameter name="byteIndex" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetBytes(System.Char[], System.Int32, System.Int32, System.Byte[], System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="chars" position="0" attrib="0" type="System.Char[]" />
                  <parameter name="charIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="charCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="bytes" position="3" attrib="0" type="System.Byte[]" />
                  <parameter name="byteIndex" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetCharCount(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="bytes" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetChars(System.Byte[], System.Int32, System.Int32, System.Char[], System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="bytes" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="byteIndex" position="1" attrib="0" type="System.Int32" />
                  <parameter name="byteCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="chars" position="3" attrib="0" type="System.Char[]" />
                  <parameter name="charIndex" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetDecoder()" attrib="198" virtual="true" returntype="System.Text.Decoder">
                <parameters />
              </method>
              <method name="GetEncoder()" attrib="198" virtual="true" returntype="System.Text.Encoder">
                <parameters />
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetMaxByteCount(System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="charCount" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetMaxCharCount(System.Int32)" attrib="198" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="byteCount" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetPreamble()" attrib="198" virtual="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="GetString(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" returntype="System.String">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="bytes" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="System.Threading">
        <classes>
          <class name="AutoResetEvent" type="class" base="System.Threading.EventWaitHandle" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Boolean)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="initialState" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
            </constructors>
          </class>
          <class name="EventWaitHandle" type="class" base="System.Threading.WaitHandle" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <methods>
              <method name="Reset()" attrib="134" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="Set()" attrib="134" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
            </methods>
          </class>
          <class name="Interlocked" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Security.SecuritySafeCriticalAttribute" />
            </attributes>
            <methods>
              <method name="Add(System.Int32&amp;, System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <attributes />
                <parameters>
                  <parameter name="location1" position="0" attrib="0" type="System.Int32&amp;" direction="ref" />
                  <parameter name="value" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Add(System.Int64&amp;, System.Int64)" attrib="150" static="true" returntype="System.Int64">
                <attributes />
                <parameters>
                  <parameter name="location1" position="0" attrib="0" type="System.Int64&amp;" direction="ref" />
                  <parameter name="value" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="CompareExchange(T&amp;, T, T)" attrib="150" static="true" returntype="T">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="location1" position="0" attrib="0" type="T&amp;" direction="ref" />
                  <parameter name="value" position="1" attrib="0" type="T" />
                  <parameter name="comparand" position="2" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="CompareExchange(System.Int64&amp;, System.Int64, System.Int64)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="location1" position="0" attrib="0" type="System.Int64&amp;" direction="ref" />
                  <parameter name="value" position="1" attrib="0" type="System.Int64" />
                  <parameter name="comparand" position="2" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="CompareExchange(System.Int32&amp;, System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <attributes />
                <parameters>
                  <parameter name="location1" position="0" attrib="0" type="System.Int32&amp;" direction="ref" />
                  <parameter name="value" position="1" attrib="0" type="System.Int32" />
                  <parameter name="comparand" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Decrement(System.Int32&amp;)" attrib="150" static="true" returntype="System.Int32">
                <attributes />
                <parameters>
                  <parameter name="location" position="0" attrib="0" type="System.Int32&amp;" direction="ref" />
                </parameters>
              </method>
              <method name="Decrement(System.Int64&amp;)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="location" position="0" attrib="0" type="System.Int64&amp;" direction="ref" />
                </parameters>
              </method>
              <method name="Exchange(System.Int32&amp;, System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <attributes />
                <parameters>
                  <parameter name="location1" position="0" attrib="0" type="System.Int32&amp;" direction="ref" />
                  <parameter name="value" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Exchange(System.Int64&amp;, System.Int64)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="location1" position="0" attrib="0" type="System.Int64&amp;" direction="ref" />
                  <parameter name="value" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="Exchange(T&amp;, T)" attrib="150" static="true" returntype="T">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="location1" position="0" attrib="0" type="T&amp;" direction="ref" />
                  <parameter name="value" position="1" attrib="0" type="T" />
                </parameters>
              </method>
              <method name="Increment(System.Int32&amp;)" attrib="150" static="true" returntype="System.Int32">
                <attributes />
                <parameters>
                  <parameter name="location" position="0" attrib="0" type="System.Int32&amp;" direction="ref" />
                </parameters>
              </method>
              <method name="Increment(System.Int64&amp;)" attrib="150" static="true" returntype="System.Int64">
                <parameters>
                  <parameter name="location" position="0" attrib="0" type="System.Int64&amp;" direction="ref" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IOCompletionCallback" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.CLSCompliantAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.UInt32, System.UInt32, System.Threading.NativeOverlapped*, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="errorCode" position="0" attrib="0" type="System.UInt32" />
                  <parameter name="numBytes" position="1" attrib="0" type="System.UInt32" />
                  <parameter name="pOVERLAP" position="2" attrib="0" type="System.Threading.NativeOverlapped*" />
                  <parameter name="callback" position="3" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="4" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.UInt32, System.UInt32, System.Threading.NativeOverlapped*)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="errorCode" position="0" attrib="0" type="System.UInt32" />
                  <parameter name="numBytes" position="1" attrib="0" type="System.UInt32" />
                  <parameter name="pOVERLAP" position="2" attrib="0" type="System.Threading.NativeOverlapped*" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="ManualResetEvent" type="class" base="System.Threading.EventWaitHandle" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Boolean)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="initialState" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
            </constructors>
          </class>
          <class name="Monitor" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <methods>
              <method name="Enter(System.Object)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Exit(System.Object)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Pulse(System.Object)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="PulseAll(System.Object)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="TryEnter(System.Object, System.TimeSpan)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                  <parameter name="timeout" position="1" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="TryEnter(System.Object, System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                  <parameter name="millisecondsTimeout" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="TryEnter(System.Object)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Wait(System.Object)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Wait(System.Object, System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                  <parameter name="millisecondsTimeout" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Wait(System.Object, System.TimeSpan)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                  <parameter name="timeout" position="1" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="NativeOverlapped" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="EventHandle" attrib="6" fieldtype="System.IntPtr" />
              <field name="InternalHigh" attrib="6" fieldtype="System.IntPtr" />
              <field name="InternalLow" attrib="6" fieldtype="System.IntPtr" />
              <field name="OffsetHigh" attrib="6" fieldtype="System.Int32" />
              <field name="OffsetLow" attrib="6" fieldtype="System.Int32" />
            </fields>
          </class>
          <class name="Overlapped" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="AsyncResult" attrib="0" ptype="System.IAsyncResult" params="">
                <methods>
                  <method name="get_AsyncResult()" attrib="2182" returntype="System.IAsyncResult">
                    <parameters />
                  </method>
                  <method name="set_AsyncResult(System.IAsyncResult)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.IAsyncResult" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="OffsetHigh" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_OffsetHigh()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_OffsetHigh(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="OffsetLow" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_OffsetLow()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_OffsetLow(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Free(System.Threading.NativeOverlapped*)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="nativeOverlappedPtr" position="0" attrib="0" type="System.Threading.NativeOverlapped*" />
                </parameters>
              </method>
              <method name="Pack(System.Threading.IOCompletionCallback, System.Object)" attrib="134" returntype="System.Threading.NativeOverlapped*">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="iocb" position="0" attrib="0" type="System.Threading.IOCompletionCallback" />
                  <parameter name="userData" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Unpack(System.Threading.NativeOverlapped*)" attrib="150" static="true" returntype="System.Threading.Overlapped">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="nativeOverlappedPtr" position="0" attrib="0" type="System.Threading.NativeOverlapped*" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="ParameterizedThreadStart" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Object, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                  <parameter name="callback" position="1" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Object)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="RegisteredWaitHandle" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <methods>
              <method name="Unregister(System.Threading.WaitHandle)" attrib="134" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters>
                  <parameter name="waitObject" position="0" attrib="0" type="System.Threading.WaitHandle" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SendOrPostCallback" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Object, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="state" position="0" attrib="0" type="System.Object" />
                  <parameter name="callback" position="1" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Object)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="state" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SynchronizationContext" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Current" attrib="0" ptype="System.Threading.SynchronizationContext" params="">
                <methods>
                  <method name="get_Current()" attrib="2198" static="true" returntype="System.Threading.SynchronizationContext">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateCopy()" attrib="454" virtual="true" returntype="System.Threading.SynchronizationContext">
                <parameters />
              </method>
              <method name="OperationCompleted()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="OperationStarted()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Post(System.Threading.SendOrPostCallback, System.Object)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Threading.SendOrPostCallback" />
                  <parameter name="state" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Send(System.Threading.SendOrPostCallback, System.Object)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Threading.SendOrPostCallback" />
                  <parameter name="state" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="SetSynchronizationContext(System.Threading.SynchronizationContext)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="syncContext" position="0" attrib="0" type="System.Threading.SynchronizationContext" />
                </parameters>
              </method>
              <method name="SetThreadStaticContext(System.Threading.SynchronizationContext)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                  <attribute name="System.ObsoleteAttribute" />
                </attributes>
                <parameters>
                  <parameter name="syncContext" position="0" attrib="0" type="System.Threading.SynchronizationContext" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SynchronizationLockException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
          </class>
          <class name="Thread" type="class" base="System.Runtime.ConstrainedExecution.CriticalFinalizerObject" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ClassInterfaceAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces />
            <constructors>
              <constructor name=".ctor(System.Threading.ParameterizedThreadStart)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="start" position="0" attrib="0" type="System.Threading.ParameterizedThreadStart" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Threading.ThreadStart)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="start" position="0" attrib="0" type="System.Threading.ThreadStart" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="CurrentCulture" attrib="0" ptype="System.Globalization.CultureInfo" params="">
                <methods>
                  <method name="get_CurrentCulture()" attrib="2182" returntype="System.Globalization.CultureInfo">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_CurrentCulture(System.Globalization.CultureInfo)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Globalization.CultureInfo" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="CurrentThread" attrib="0" ptype="System.Threading.Thread" params="">
                <methods>
                  <method name="get_CurrentThread()" attrib="2198" static="true" returntype="System.Threading.Thread">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CurrentUICulture" attrib="0" ptype="System.Globalization.CultureInfo" params="">
                <methods>
                  <method name="get_CurrentUICulture()" attrib="2182" returntype="System.Globalization.CultureInfo">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_CurrentUICulture(System.Globalization.CultureInfo)" attrib="18566" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Globalization.CultureInfo" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IsAlive" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsAlive()" attrib="2182" returntype="System.Boolean">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsBackground" attrib="0" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsBackground()" attrib="2182" returntype="System.Boolean">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_IsBackground(System.Boolean)" attrib="18566" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ManagedThreadId" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_ManagedThreadId()" attrib="2182" returntype="System.Int32">
                    <attributes />
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Name(System.String)" attrib="18566" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ThreadState" attrib="0" ptype="System.Threading.ThreadState" params="">
                <methods>
                  <method name="get_ThreadState()" attrib="2182" returntype="System.Threading.ThreadState">
                    <attributes>
                      <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Abort()" attrib="16518" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="Finalize()" attrib="196" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetDomain()" attrib="150" static="true" returntype="System.AppDomain">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" returntype="System.Int32">
                <attributes>
                  <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="Join(System.Int32)" attrib="16518" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="millisecondsTimeout" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Join()" attrib="16518" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="MemoryBarrier()" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="Sleep(System.TimeSpan)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="timeout" position="0" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="Sleep(System.Int32)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="millisecondsTimeout" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="SpinWait(System.Int32)" attrib="16534" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="iterations" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Start()" attrib="16518" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters />
              </method>
              <method name="Start(System.Object)" attrib="16518" returntype="System.Void">
                <parameters>
                  <parameter name="parameter" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="ThreadAbortException" type="class" base="System.SystemException" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
          </class>
          <class name="ThreadPool" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="BindHandle(System.Runtime.InteropServices.SafeHandle)" attrib="16534" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="osHandle" position="0" attrib="0" type="System.Runtime.InteropServices.SafeHandle" />
                </parameters>
              </method>
              <method name="GetMaxThreads(out System.Int32&amp;, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="workerThreads" position="0" attrib="2" type="System.Int32&amp;" direction="out" />
                  <parameter name="completionPortThreads" position="1" attrib="2" type="System.Int32&amp;" direction="out" />
                </parameters>
              </method>
              <method name="GetMinThreads(out System.Int32&amp;, out System.Int32&amp;)" attrib="150" static="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="workerThreads" position="0" attrib="2" type="System.Int32&amp;" direction="out" />
                  <parameter name="completionPortThreads" position="1" attrib="2" type="System.Int32&amp;" direction="out" />
                </parameters>
              </method>
              <method name="QueueUserWorkItem(System.Threading.WaitCallback, System.Object)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="callBack" position="0" attrib="0" type="System.Threading.WaitCallback" />
                  <parameter name="state" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="QueueUserWorkItem(System.Threading.WaitCallback)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="callBack" position="0" attrib="0" type="System.Threading.WaitCallback" />
                </parameters>
              </method>
              <method name="RegisterWaitForSingleObject(System.Threading.WaitHandle, System.Threading.WaitOrTimerCallback, System.Object, System.TimeSpan, System.Boolean)" attrib="150" static="true" returntype="System.Threading.RegisteredWaitHandle">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="waitObject" position="0" attrib="0" type="System.Threading.WaitHandle" />
                  <parameter name="callBack" position="1" attrib="0" type="System.Threading.WaitOrTimerCallback" />
                  <parameter name="state" position="2" attrib="0" type="System.Object" />
                  <parameter name="timeout" position="3" attrib="0" type="System.TimeSpan" />
                  <parameter name="executeOnlyOnce" position="4" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="RegisterWaitForSingleObject(System.Threading.WaitHandle, System.Threading.WaitOrTimerCallback, System.Object, System.Int64, System.Boolean)" attrib="150" static="true" returntype="System.Threading.RegisteredWaitHandle">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="waitObject" position="0" attrib="0" type="System.Threading.WaitHandle" />
                  <parameter name="callBack" position="1" attrib="0" type="System.Threading.WaitOrTimerCallback" />
                  <parameter name="state" position="2" attrib="0" type="System.Object" />
                  <parameter name="millisecondsTimeOutInterval" position="3" attrib="0" type="System.Int64" />
                  <parameter name="executeOnlyOnce" position="4" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="RegisterWaitForSingleObject(System.Threading.WaitHandle, System.Threading.WaitOrTimerCallback, System.Object, System.UInt32, System.Boolean)" attrib="150" static="true" returntype="System.Threading.RegisteredWaitHandle">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                  <attribute name="System.CLSCompliantAttribute" />
                </attributes>
                <parameters>
                  <parameter name="waitObject" position="0" attrib="0" type="System.Threading.WaitHandle" />
                  <parameter name="callBack" position="1" attrib="0" type="System.Threading.WaitOrTimerCallback" />
                  <parameter name="state" position="2" attrib="0" type="System.Object" />
                  <parameter name="millisecondsTimeOutInterval" position="3" attrib="0" type="System.UInt32" />
                  <parameter name="executeOnlyOnce" position="4" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="RegisterWaitForSingleObject(System.Threading.WaitHandle, System.Threading.WaitOrTimerCallback, System.Object, System.Int32, System.Boolean)" attrib="150" static="true" returntype="System.Threading.RegisteredWaitHandle">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="waitObject" position="0" attrib="0" type="System.Threading.WaitHandle" />
                  <parameter name="callBack" position="1" attrib="0" type="System.Threading.WaitOrTimerCallback" />
                  <parameter name="state" position="2" attrib="0" type="System.Object" />
                  <parameter name="millisecondsTimeOutInterval" position="3" attrib="0" type="System.Int32" />
                  <parameter name="executeOnlyOnce" position="4" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="SetMaxThreads(System.Int32, System.Int32)" attrib="16534" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="workerThreads" position="0" attrib="0" type="System.Int32" />
                  <parameter name="completionPortThreads" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="SetMinThreads(System.Int32, System.Int32)" attrib="16534" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecurityCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="workerThreads" position="0" attrib="0" type="System.Int32" />
                  <parameter name="completionPortThreads" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="ThreadStart" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="callback" position="0" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="ThreadStartException" type="class" base="System.SystemException" sealed="true" charset="Ansi" layout="Auto" />
          <class name="ThreadState" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.FlagsAttribute" />
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Aborted" attrib="32854" fieldtype="System.Threading.ThreadState" value="256" />
              <field name="AbortRequested" attrib="32854" fieldtype="System.Threading.ThreadState" value="128" />
              <field name="Background" attrib="32854" fieldtype="System.Threading.ThreadState" value="4" />
              <field name="Running" attrib="32854" fieldtype="System.Threading.ThreadState" value="0" />
              <field name="Stopped" attrib="32854" fieldtype="System.Threading.ThreadState" value="16" />
              <field name="StopRequested" attrib="32854" fieldtype="System.Threading.ThreadState" value="1" />
              <field name="Suspended" attrib="32854" fieldtype="System.Threading.ThreadState" value="64" />
              <field name="SuspendRequested" attrib="32854" fieldtype="System.Threading.ThreadState" value="2" />
              <field name="Unstarted" attrib="32854" fieldtype="System.Threading.ThreadState" value="8" />
              <field name="WaitSleepJoin" attrib="32854" fieldtype="System.Threading.ThreadState" value="32" />
            </fields>
          </class>
          <class name="ThreadStateException" type="class" base="System.SystemException" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.String, System.Exception)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="innerException" position="1" attrib="0" type="System.Exception" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="Timeout" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <fields>
              <field name="Infinite" attrib="32854" fieldtype="System.Int32" value="-1" />
            </fields>
          </class>
          <class name="Timer" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Threading.TimerCallback, System.Object, System.Int64, System.Int64)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="callback" position="0" attrib="0" type="System.Threading.TimerCallback" />
                  <parameter name="state" position="1" attrib="0" type="System.Object" />
                  <parameter name="dueTime" position="2" attrib="0" type="System.Int64" />
                  <parameter name="period" position="3" attrib="0" type="System.Int64" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Threading.TimerCallback)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="callback" position="0" attrib="0" type="System.Threading.TimerCallback" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Threading.TimerCallback, System.Object, System.UInt32, System.UInt32)" attrib="6278">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="callback" position="0" attrib="0" type="System.Threading.TimerCallback" />
                  <parameter name="state" position="1" attrib="0" type="System.Object" />
                  <parameter name="dueTime" position="2" attrib="0" type="System.UInt32" />
                  <parameter name="period" position="3" attrib="0" type="System.UInt32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Threading.TimerCallback, System.Object, System.Int32, System.Int32)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="callback" position="0" attrib="0" type="System.Threading.TimerCallback" />
                  <parameter name="state" position="1" attrib="0" type="System.Object" />
                  <parameter name="dueTime" position="2" attrib="0" type="System.Int32" />
                  <parameter name="period" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Threading.TimerCallback, System.Object, System.TimeSpan, System.TimeSpan)" attrib="6278">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="callback" position="0" attrib="0" type="System.Threading.TimerCallback" />
                  <parameter name="state" position="1" attrib="0" type="System.Object" />
                  <parameter name="dueTime" position="2" attrib="0" type="System.TimeSpan" />
                  <parameter name="period" position="3" attrib="0" type="System.TimeSpan" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="Change(System.UInt32, System.UInt32)" attrib="134" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute" />
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="dueTime" position="0" attrib="0" type="System.UInt32" />
                  <parameter name="period" position="1" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="Change(System.Int64, System.Int64)" attrib="134" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="dueTime" position="0" attrib="0" type="System.Int64" />
                  <parameter name="period" position="1" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="Change(System.Int32, System.Int32)" attrib="134" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="dueTime" position="0" attrib="0" type="System.Int32" />
                  <parameter name="period" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Change(System.TimeSpan, System.TimeSpan)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="dueTime" position="0" attrib="0" type="System.TimeSpan" />
                  <parameter name="period" position="1" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="Dispose()" attrib="486" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose(System.Threading.WaitHandle)" attrib="134" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="notifyObject" position="0" attrib="0" type="System.Threading.WaitHandle" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="TimerCallback" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Object, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="state" position="0" attrib="0" type="System.Object" />
                  <parameter name="callback" position="1" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Object)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="state" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="WaitCallback" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Object, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="state" position="0" attrib="0" type="System.Object" />
                  <parameter name="callback" position="1" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Object)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="state" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="WaitHandle" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <fields>
              <field name="InvalidHandle" attrib="52" fieldtype="System.IntPtr" />
              <field name="WaitTimeout" attrib="32854" fieldtype="System.Int32" value="258" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="SafeWaitHandle" attrib="0" ptype="Microsoft.Win32.SafeHandles.SafeWaitHandle" params="">
                <methods>
                  <method name="get_SafeWaitHandle()" attrib="2182" returntype="Microsoft.Win32.SafeHandles.SafeWaitHandle">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_SafeWaitHandle(Microsoft.Win32.SafeHandles.SafeWaitHandle)" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Security.SecurityCriticalAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Microsoft.Win32.SafeHandles.SafeWaitHandle" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Close()" attrib="454" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="452" virtual="true" returntype="System.Void">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="explicitDisposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="WaitAll(System.Threading.WaitHandle[], System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="waitHandles" position="0" attrib="0" type="System.Threading.WaitHandle[]" />
                  <parameter name="millisecondsTimeout" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WaitAll(System.Threading.WaitHandle[], System.TimeSpan)" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="waitHandles" position="0" attrib="0" type="System.Threading.WaitHandle[]" />
                  <parameter name="timeout" position="1" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="WaitAll(System.Threading.WaitHandle[])" attrib="150" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.Security.SecuritySafeCriticalAttribute" />
                </attributes>
                <parameters>
                  <parameter name="waitHandles" position="0" attrib="0" type="System.Threading.WaitHandle[]" />
                </parameters>
              </method>
              <method name="WaitAny(System.Threading.WaitHandle[])" attrib="150" static="true" returntype="System.Int32">
                <attributes />
                <parameters>
                  <parameter name="waitHandles" position="0" attrib="0" type="System.Threading.WaitHandle[]" />
                </parameters>
              </method>
              <method name="WaitAny(System.Threading.WaitHandle[], System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <attributes />
                <parameters>
                  <parameter name="waitHandles" position="0" attrib="0" type="System.Threading.WaitHandle[]" />
                  <parameter name="millisecondsTimeout" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WaitAny(System.Threading.WaitHandle[], System.TimeSpan)" attrib="150" static="true" returntype="System.Int32">
                <attributes />
                <parameters>
                  <parameter name="waitHandles" position="0" attrib="0" type="System.Threading.WaitHandle[]" />
                  <parameter name="timeout" position="1" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
              <method name="WaitOne()" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="WaitOne(System.Int32)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="millisecondsTimeout" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WaitOne(System.TimeSpan)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="timeout" position="0" attrib="0" type="System.TimeSpan" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="WaitOrTimerCallback" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" />
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Object, System.Boolean, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="state" position="0" attrib="0" type="System.Object" />
                  <parameter name="timedOut" position="1" attrib="0" type="System.Boolean" />
                  <parameter name="callback" position="2" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Object, System.Boolean)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="state" position="0" attrib="0" type="System.Object" />
                  <parameter name="timedOut" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
    </namespaces>
  </assembly>
</assemblies>